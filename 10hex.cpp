#if defined(__linux__) || defined(__CYGWIN__) || defined(__MINGW32__) || defined(__GNUC__) || defined(__BORLANDC__)
#include <strings.h>
#define stricmp strcasecmp
#define strnicmp strncasecmp
#endif
#include <iostream>
#include <sstream>
#include <string>
#include <cstdio>
#include <time.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
//using namespace std;
int main(int argc, char *argv[]) {
 srand(time(NULL));
 bool risky_mode = false;
 bool even_only = false;
 bool odd_only = false;
 bool output_random = false;
 bool use_lower = false;
 bool use_upper = false;
 bool use_len_8 = false;
 bool use_len_9 = false;
 bool no_0 = false;
 bool no_1 = false;
 int desired_uniques = 0;
 int min_uniques = 6; // 94.6% chance of having 6 to 9 uniques
 int max_uniques = 9;
 int min_numbers = 4; // 94.02% chance of having 4 to 8 numbers
 int max_numbers = 8;
 int min_letters = 2; // 94.02% chance of having 2 to 6 letters
 int max_letters = 6;
 bool negate_sequential = true; // 89.8% chance of not having any 3 consecutive sequential chars (123) or reverse sequential chars (321)
 int differential = 0;
 int slot1_start_at = 0;
 int slot1_stop_at = 0;
 bool starts_with_letter = false;
 bool make_next_start_at = false;
 bool make_next_stop_at = false;
 int make_next_start_at_cnt = 0;
 int make_next_stop_at_cnt = 0;
 unsigned long long int start_at_long = 0;
 unsigned long long int stop_at_long = 0;
 if (argc > 1) {
  for (int i=1;i<argc;++i) {
   if (stricmp(argv[i], "-risky") == 0) { risky_mode = true; }
   if (stricmp(argv[i], "-evenonly") == 0) { even_only = true; }
   if (stricmp(argv[i], "-oddonly") == 0) { odd_only = true; }
   if (stricmp(argv[i], "-random") == 0) { output_random = true; }
   if (stricmp(argv[i], "-lower") == 0) { use_lower = true; }
   if (stricmp(argv[i], "-upper") == 0) { use_upper = true; }
   if (stricmp(argv[i], "-len8") == 0) { use_len_8 = true; }
   if (stricmp(argv[i], "-len9") == 0) { use_len_9 = true; }
   if (stricmp(argv[i], "-no0") == 0) { no_0 = true; }
   if (stricmp(argv[i], "-no1") == 0) { no_1 = true; }
   if (stricmp(argv[i], "-no01") == 0) { no_0 = true; no_1 = true; }
   if (stricmp(argv[i], "-no10") == 0) { no_0 = true; no_1 = true; }
   if (stricmp(argv[i], "-1unique") == 0) { desired_uniques = min_uniques = max_uniques = 1; }
   if (stricmp(argv[i], "-2uniques") == 0) { desired_uniques = min_uniques = max_uniques = 2; }
   if (stricmp(argv[i], "-3uniques") == 0) { desired_uniques = min_uniques = max_uniques = 3; }
   if (stricmp(argv[i], "-4uniques") == 0) { desired_uniques = min_uniques = max_uniques = 4; }
   if (stricmp(argv[i], "-5uniques") == 0) { desired_uniques = min_uniques = max_uniques = 5; }
   if (stricmp(argv[i], "-6uniques") == 0) { desired_uniques = min_uniques = max_uniques = 6; }
   if (stricmp(argv[i], "-7uniques") == 0) { desired_uniques = min_uniques = max_uniques = 7; }
   if (stricmp(argv[i], "-8uniques") == 0) { desired_uniques = min_uniques = max_uniques = 8; }
   if (stricmp(argv[i], "-9uniques") == 0) { desired_uniques = min_uniques = max_uniques = 9; }
   if (stricmp(argv[i], "-10uniques") == 0) { desired_uniques = min_uniques = max_uniques = 10; }
   if (stricmp(argv[i], "-1minunique") == 0) { min_uniques = 1; }  if (stricmp(argv[i], "-minunique1") == 0) { min_uniques = 1; }  if (stricmp(argv[i], "-min1unique") == 0) { min_uniques = 1; }
   if (stricmp(argv[i], "-2minuniques") == 0) { min_uniques = 2; } if (stricmp(argv[i], "-minuniques2") == 0) { min_uniques = 2; } if (stricmp(argv[i], "-min2uniques") == 0) { min_uniques = 2; }
   if (stricmp(argv[i], "-3minuniques") == 0) { min_uniques = 3; } if (stricmp(argv[i], "-minuniques3") == 0) { min_uniques = 3; } if (stricmp(argv[i], "-min3uniques") == 0) { min_uniques = 3; }
   if (stricmp(argv[i], "-4minuniques") == 0) { min_uniques = 4; } if (stricmp(argv[i], "-minuniques4") == 0) { min_uniques = 4; } if (stricmp(argv[i], "-min4uniques") == 0) { min_uniques = 4; }
   if (stricmp(argv[i], "-5minuniques") == 0) { min_uniques = 5; } if (stricmp(argv[i], "-minuniques5") == 0) { min_uniques = 5; } if (stricmp(argv[i], "-min5uniques") == 0) { min_uniques = 5; }
   if (stricmp(argv[i], "-6minuniques") == 0) { min_uniques = 6; } if (stricmp(argv[i], "-minuniques6") == 0) { min_uniques = 6; } if (stricmp(argv[i], "-min6uniques") == 0) { min_uniques = 6; }
   if (stricmp(argv[i], "-7minuniques") == 0) { min_uniques = 7; } if (stricmp(argv[i], "-minuniques7") == 0) { min_uniques = 7; } if (stricmp(argv[i], "-min7uniques") == 0) { min_uniques = 7; }
   if (stricmp(argv[i], "-8minuniques") == 0) { min_uniques = 8; } if (stricmp(argv[i], "-minuniques8") == 0) { min_uniques = 8; } if (stricmp(argv[i], "-min8uniques") == 0) { min_uniques = 8; }
   if (stricmp(argv[i], "-9minuniques") == 0) { min_uniques = 9; } if (stricmp(argv[i], "-minuniques9") == 0) { min_uniques = 9; } if (stricmp(argv[i], "-min9uniques") == 0) { min_uniques = 9; }
   if (stricmp(argv[i], "-10minuniques") == 0) { min_uniques = 10; } if (stricmp(argv[i], "-minuniques10") == 0) { min_uniques = 10; } if (stricmp(argv[i], "-min10uniques") == 0) { min_uniques = 10; }
   if (stricmp(argv[i], "-1maxunique") == 0) { max_uniques = 1; }  if (stricmp(argv[i], "-maxunique1") == 0) { max_uniques = 1; }  if (stricmp(argv[i], "-max1unique") == 0) { max_uniques = 1; }
   if (stricmp(argv[i], "-2maxuniques") == 0) { max_uniques = 2; } if (stricmp(argv[i], "-maxuniques2") == 0) { max_uniques = 2; } if (stricmp(argv[i], "-max2uniques") == 0) { max_uniques = 2; }
   if (stricmp(argv[i], "-3maxuniques") == 0) { max_uniques = 3; } if (stricmp(argv[i], "-maxuniques3") == 0) { max_uniques = 3; } if (stricmp(argv[i], "-max3uniques") == 0) { max_uniques = 3; }
   if (stricmp(argv[i], "-4maxuniques") == 0) { max_uniques = 4; } if (stricmp(argv[i], "-maxuniques4") == 0) { max_uniques = 4; } if (stricmp(argv[i], "-max4uniques") == 0) { max_uniques = 4; }
   if (stricmp(argv[i], "-5maxuniques") == 0) { max_uniques = 5; } if (stricmp(argv[i], "-maxuniques5") == 0) { max_uniques = 5; } if (stricmp(argv[i], "-max5uniques") == 0) { max_uniques = 5; }
   if (stricmp(argv[i], "-6maxuniques") == 0) { max_uniques = 6; } if (stricmp(argv[i], "-maxuniques6") == 0) { max_uniques = 6; } if (stricmp(argv[i], "-max6uniques") == 0) { max_uniques = 6; }
   if (stricmp(argv[i], "-7maxuniques") == 0) { max_uniques = 7; } if (stricmp(argv[i], "-maxuniques7") == 0) { max_uniques = 7; } if (stricmp(argv[i], "-max7uniques") == 0) { max_uniques = 7; }
   if (stricmp(argv[i], "-8maxuniques") == 0) { max_uniques = 8; } if (stricmp(argv[i], "-maxuniques8") == 0) { max_uniques = 8; } if (stricmp(argv[i], "-max8uniques") == 0) { max_uniques = 8; }
   if (stricmp(argv[i], "-9maxuniques") == 0) { max_uniques = 9; } if (stricmp(argv[i], "-maxuniques9") == 0) { max_uniques = 9; } if (stricmp(argv[i], "-max9uniques") == 0) { max_uniques = 9; }
   if (stricmp(argv[i], "-10maxuniques") == 0) { max_uniques = 10; } if (stricmp(argv[i], "-maxuniques10") == 0) { max_uniques = 10; } if (stricmp(argv[i], "-max10uniques") == 0) { max_uniques = 10; }
   if (stricmp(argv[i], "-startswith0") == 0) { slot1_start_at = 0; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith1") == 0) { slot1_start_at = 1; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith2") == 0) { slot1_start_at = 2; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith3") == 0) { slot1_start_at = 3; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith4") == 0) { slot1_start_at = 4; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith5") == 0) { slot1_start_at = 5; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith6") == 0) { slot1_start_at = 6; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith7") == 0) { slot1_start_at = 7; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith8") == 0) { slot1_start_at = 8; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswith9") == 0) { slot1_start_at = 9; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithA") == 0) { slot1_start_at = 10; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithB") == 0) { slot1_start_at = 11; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithC") == 0) { slot1_start_at = 12; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithD") == 0) { slot1_start_at = 13; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithE") == 0) { slot1_start_at = 14; starts_with_letter = true; }
   if (stricmp(argv[i], "-startswithF") == 0) { slot1_start_at = 15; starts_with_letter = true; }
   if (stricmp(argv[i], "-start") == 0) { make_next_start_at = true; make_next_start_at_cnt = i; }
   if (stricmp(argv[i], "-stop") == 0) { make_next_stop_at = true; make_next_stop_at_cnt = i; }
   if ((make_next_start_at) && (i == (make_next_start_at_cnt+1))) { std::istringstream str_to_num(argv[i]); str_to_num >> start_at_long; if (!str_to_num) {std::cout << "ERROR: start is not a number" << "\n"; return 1;} make_next_start_at = false; }
   if ((make_next_stop_at) && (i == (make_next_stop_at_cnt+1))) { std::istringstream str_to_num(argv[i]); str_to_num >> stop_at_long; if (!str_to_num) {std::cout << "ERROR: stop is not a number" << "\n"; return 1;} make_next_stop_at = false; }
  }
 }
 if ((stop_at_long !=0) && (stop_at_long <= start_at_long)) { std::cout << "ERROR: stop must be greater than start" << "\n"; return 1; }

 const int MAX_LENGTH = 10;
 char hex_chars[MAX_LENGTH+2];
 hex_chars[MAX_LENGTH] = '\n';
 hex_chars[MAX_LENGTH+1] = '\0';
 int hex_nums[MAX_LENGTH];
 for (int i=0;i<MAX_LENGTH;++i) { hex_chars[i] = '0'; hex_nums[i] = 0; }
 char possible_chars[16] = {'0','1','2','3','4','5','6','7','8','9','a','b','c','d','e','f'};
 int possible_chars_freq[16] = {0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
 int possible_chars_length = sizeof(possible_chars);
 if (use_lower) {for (int i=0;i<possible_chars_length;++i) { possible_chars[i] = tolower(possible_chars[i]); }}
 if (use_upper) {for (int i=0;i<possible_chars_length;++i) { possible_chars[i] = toupper(possible_chars[i]); }}
 int start_at = 0;
 if (no_0) { start_at = 1; }
 if (no_1) { start_at = 2; }
 int random_number = 0;
 int unique_count = 0;
 int number_count = 0;
 int letter_count = 0;
 unsigned long long int counter = 0;
 unsigned long long int uniques_counter[MAX_LENGTH];
 for (int i=0;i<MAX_LENGTH;++i) { uniques_counter[i] = 0; }
 if (starts_with_letter == false) { slot1_start_at = start_at; }
 slot1_stop_at = (starts_with_letter) ? (slot1_start_at + 1) : possible_chars_length;

// generate random combinations
 if (output_random) {
  for (unsigned long long int j=0;j<1099511627776;++j) {
   possible_chars_freq[0]=possible_chars_freq[1]=possible_chars_freq[2]=possible_chars_freq[3]=possible_chars_freq[4]=possible_chars_freq[5]=possible_chars_freq[6]=possible_chars_freq[7]=possible_chars_freq[8]=possible_chars_freq[9]=possible_chars_freq[10]=possible_chars_freq[11]=possible_chars_freq[12]=possible_chars_freq[13]=possible_chars_freq[14]=possible_chars_freq[15]=0;
   for(int i=0;i<MAX_LENGTH;++i) {
    random_number = rand() % possible_chars_length;
    if ((random_number==0)&&(no_0)) { while (random_number == 0) { random_number = rand() % possible_chars_length; } }
    if ((random_number==1)&&(no_1)) { while (random_number == 1) { random_number = rand() % possible_chars_length; } }
    if ((odd_only)&&(i==(MAX_LENGTH-1))&&(random_number%2==0)) { i=MAX_LENGTH-2; continue; }
    if ((even_only)&&(i==(MAX_LENGTH-1))&&(random_number%2!=0)) { i=MAX_LENGTH-2; continue; }
    hex_chars[i] = possible_chars[random_number];
    hex_nums[i] = random_number;
    ++possible_chars_freq[random_number];
   }
   if (use_len_8) {
    if ((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) >= 7) { continue; } // cannot contain 7+ numbers
    std::cout << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << "\n";
   }
   else if (use_len_9) {
    if ((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) >= 8) { continue; } // cannot contain 8+ numbers
    std::cout << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << hex_chars[8] << "\n";
   }
   else {
    differential = abs(hex_nums[9]-hex_nums[8]) + abs(hex_nums[8]-hex_nums[7]) + abs(hex_nums[7]-hex_nums[6]) + abs(hex_nums[6]-hex_nums[5]) + abs(hex_nums[5]-hex_nums[4]) + abs(hex_nums[4]-hex_nums[3]) + abs(hex_nums[3]-hex_nums[2]) + abs(hex_nums[2]-hex_nums[1]) + abs(hex_nums[1]-hex_nums[0]);
    if (risky_mode) { if ((differential < 26) || (differential > 63)) { continue; } } // 10-length risky differentials (26 to 63)
    else { if ((differential < 19) || (differential > 79)) { continue; } } // 10-length observed differentials (19 to 79)
    if (((possible_chars_freq[10]+possible_chars_freq[11]+possible_chars_freq[12]+possible_chars_freq[13]+possible_chars_freq[14]+possible_chars_freq[15]) < min_letters) || ((possible_chars_freq[10]+possible_chars_freq[11]+possible_chars_freq[12]+possible_chars_freq[13]+possible_chars_freq[14]+possible_chars_freq[15]) > max_letters)) { continue; } // must contain 2-6 letters
    if (((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) < min_numbers) || ((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) > max_numbers)) { continue; } // must contain 4-8 numbers
    if ((possible_chars_freq[0]>3)||(possible_chars_freq[1]>3)||(possible_chars_freq[2]>3)||(possible_chars_freq[3]>3)||(possible_chars_freq[4]>3)||(possible_chars_freq[5]>3)||(possible_chars_freq[6]>3)||(possible_chars_freq[7]>3)||(possible_chars_freq[8]>3)||(possible_chars_freq[9]>3)||(possible_chars_freq[10]>3)||(possible_chars_freq[11]>3)||(possible_chars_freq[12]>3)||(possible_chars_freq[13]>3)||(possible_chars_freq[14]>3)||(possible_chars_freq[15]>3)) { continue; } // each character cannot appear more than 3 times
    unique_count = ((possible_chars_freq[0]!=0)?1:0) + ((possible_chars_freq[1]!=0)?1:0) + ((possible_chars_freq[2]!=0)?1:0) + ((possible_chars_freq[3]!=0)?1:0) + ((possible_chars_freq[4]!=0)?1:0) + ((possible_chars_freq[5]!=0)?1:0) + ((possible_chars_freq[6]!=0)?1:0) + ((possible_chars_freq[7]!=0)?1:0) + ((possible_chars_freq[8]!=0)?1:0) + ((possible_chars_freq[9]!=0)?1:0) + ((possible_chars_freq[10]!=0)?1:0) + ((possible_chars_freq[11]!=0)?1:0) + ((possible_chars_freq[12]!=0)?1:0) + ((possible_chars_freq[13]!=0)?1:0) + ((possible_chars_freq[14]!=0)?1:0) + ((possible_chars_freq[15]!=0)?1:0);
    if (((desired_uniques==0)&&(min_uniques==0)) || (desired_uniques==unique_count) || ((desired_uniques==0)&&(min_uniques>0)&&(unique_count>=min_uniques)&&(unique_count<=max_uniques))) {
     std::cout << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << hex_chars[8] << hex_chars[9] << "\n";
    }
   }
  }
 }

// generate sequential combinations
 else {

 // ---------------------------------------------------
 // Number of combinations (10-length)
 // ---------------------------------------------------
 //  # of combos (10-length) = 1,099,511,627,776 (16^10) (13,194.14 GB)
 //  # of combos (10-length) with rules (6-9 uniques): 564,561,702,612 (51.3%) (6,774.74 GB)
 //  # of combos (10-length) with rules (10 uniques): 18,649,285,466 (1.7%) (223.79 GB)
 //  # of combos (10-length) with rules (09 uniques): 116,641,092,458 (10.6%) (1,399.69 GB)
 //  # of combos (10-length) with rules (08 uniques): 226,271,576,762 (20.6%) (2,715.26 GB)
 //  # of combos (10-length) with rules (07 uniques): 170,561,659,663 (15.5%) (2,046.74 GB)
 //  # of combos (10-length) with rules (06 uniques): 51,087,373,729 (4.6%) (613 GB)
 //  # of combos (10-length) with rules (05 uniques): 5,392,440,877 (0.5%) (64.7 GB)
 //  # of combos (10-length) with rules (04 uniques): 132,844,293 (0.012%) (1.59 GB)

 // ---------------------------------------------------
 // Number of combinations (10-length) (RISKY)
 // ---------------------------------------------------
 //  # of combos (10-length) = 1,099,511,627,776 (16^10) (13,194.14 GB)
 //  # of combos (10-length) with rules (6-9 uniques): 367,647,332,933 (33.4%) (4,411.8 GB)
 //  # of combos (10-length) with rules (10 uniques): 12,010,291,278 (1.1%) (144.1 GB)
 //  # of combos (10-length) with rules (09 uniques): 75,876,130,604 (6.9%) (910.5 GB)
 //  # of combos (10-length) with rules (08 uniques): 147,638,929,917 (13.4%) (1,771.7 GB)
 //  # of combos (10-length) with rules (07 uniques): 111,045,927,794 (10.1%) (1,332.6 GB)
 //  # of combos (10-length) with rules (06 uniques): 33,086,344,618 (3.0%) (397 GB)
 //  # of combos (10-length) with rules (05 uniques): 3,472,496,526 (0.31%) (41.7 GB)
 //  # of combos (10-length) with rules (04 uniques): 85,114,150 (0.008%) (1.02 GB)

 // --------------------------------------------------
 // 8 LOWER HEX
 // --------------------------------------------------
 // belkin.xxx 			8 lower hex		hex -len8 | oclHashcat64 -m 2500 xyz.hccap
 // belkin.xxxx 		8 lower hex		hex -len8 | oclHashcat64 -m 2500 xyz.hccap
 // MGTS_GPON_XXXX		8 lower hex		hex -len8 | oclHashcat64 -m 2500 xyz.hccap
 // PRIMEHOME-XX		8 lower hex		hex -len8 | oclHashcat64 -m 2500 xyz.hccap
 
 // --------------------------------------------------
 // 8 UPPER HEX
 // --------------------------------------------------
 // 3Wireless-Modem-XXXX	8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // Belkin.XXXX			8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // Belkin_XXXXX		8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // Belkin_XXXXXX		8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // BELLxxx			8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // Domino-XXXX			8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // E583x-xxxxx			8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // Orange-XXXX			8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap
 // TP-LINK_XXXXXX		8 upper hex		hex -upper -len8 | oclHashcat64 -m 2500 xyz.hccap

 // --------------------------------------------------
 // 9 UPPER HEX
 // --------------------------------------------------
 // EasyBox-XXXXXX		9 upper hex		hex -upper -len9 | oclHashcat64 -m 2500 xyz.hccap

 // --------------------------------------------------
 // 10 LOWER HEX
 // --------------------------------------------------
 // BTHomeHub1XXXX		10 lower hex		hex | oclHashcat64 -m 2500 xyz.hccap
 // BTHomeHub2XXXX		10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap
 // BTHomeHub2-XXXX		10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap
 // BTHomeHub-XXXX		10 lower hex		hex | oclHashcat64 -m 2500 xyz.hccap
 // BTHub3			10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap
 // BTHub4			10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap
 // BTHub5			10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap
 // SpeedTouchXXXXXX		10 lower hex		hex | oclHashcat64 -m 2500 xyz.hccap
 // TELUSXXXX			10 lower hex		hex -no01 | oclHashcat64 -m 2500 xyz.hccap

 // --------------------------------------------------
 // 10 UPPER HEX
 // --------------------------------------------------
 // BigPondXXXXXX		10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // PlusnetWireless-XXXXXX	10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // Technicolor/Thomson		10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // TelstraXXXXXX		10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // TNCAP-XXXX			10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // TNCAPXXXXXX			10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap
 // WLAN1-XXXXXX		10 upper hex		hex -upper | oclHashcat64 -m 2500 xyz.hccap

 // --------------------------------------------------
 // 14 LOWER HEX
 // --------------------------------------------------
 // CenturyLinkXXXX		14 lower hex		not supported

 for (int slot1=slot1_start_at;slot1<slot1_stop_at;slot1++) { // SLOT 1
  possible_chars_freq[0]=possible_chars_freq[1]=possible_chars_freq[2]=possible_chars_freq[3]=possible_chars_freq[4]=possible_chars_freq[5]=possible_chars_freq[6]=possible_chars_freq[7]=possible_chars_freq[8]=possible_chars_freq[9]=possible_chars_freq[10]=possible_chars_freq[11]=possible_chars_freq[12]=possible_chars_freq[13]=possible_chars_freq[14]=possible_chars_freq[15]=0;
  hex_chars[0] = possible_chars[slot1];
  ++possible_chars_freq[slot1];

  for (int slot2=start_at;slot2<possible_chars_length;possible_chars_freq[slot2++]--) { // SLOT 2 (eliminations: 81,604,378,624 or 7.4%) (risky eliminations: 120,259,084,288 or 10.9%)
   // NORMAL: DOES NOT BEGIN WITH (19) 00,11,22,33,44,55,66,77,88,99,AA,BB,CC,DD,E0,EE,F0,F1,FF
   // RISKY: DOES NOT BEGIN WITH (9) 0D,0E,0F,1E,1F,2F,D0,E1,F2
   hex_chars[1] = possible_chars[slot2];
   ++possible_chars_freq[slot2];
   if ((slot1==0)&&(slot2==0)) { continue; }                                                  // does not begin with 00 (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==1)&&(slot2==1)) { continue; }                                                  // does not begin with 11 (eliminates 4,294,967,296 combinations)
   if ((slot1==2)&&(slot2==2)) { continue; }                                                  // does not begin with 22 (eliminates 4,294,967,296 combinations)
   if ((slot1==3)&&(slot2==3)) { continue; }                                                  // does not begin with 33 (eliminates 4,294,967,296 combinations)
   if ((slot1==4)&&(slot2==4)) { continue; }                                                  // does not begin with 44 (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==5)&&(slot2==5)) { continue; }                                                  // does not begin with 55 (eliminates 4,294,967,296 combinations)
   if ((slot1==6)&&(slot2==6)) { continue; }                                                  // does not begin with 66 (eliminates 4,294,967,296 combinations)
   if ((slot1==7)&&(slot2==7)) { continue; }                                                  // does not begin with 77 (eliminates 4,294,967,296 combinations)
   if ((slot1==8)&&(slot2==8)) { continue; }                                                  // does not begin with 88 (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==9)&&(slot2==9)) { continue; }                                                  // does not begin with 99 (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==10)&&(slot2==10)) { continue; }                                                // does not begin with AA (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==11)&&(slot2==11)) { continue; }                                                // does not begin with BB (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if ((slot1==12)&&(slot2==12)) { continue; }                                                // does not begin with CC (eliminates 4,294,967,296 combinations)
   if ((slot1==13)&&(slot2==13)) { continue; }                                                // does not begin with DD (eliminates 4,294,967,296 combinations)
   if ((slot1==14)&&(slot2==14)) { continue; }                                                // does not begin with EE (eliminates 4,294,967,296 combinations)
   if ((slot1==15)&&(slot2==15)) { continue; }                                                // does not begin with FF (eliminates 4,294,967,296 combinations) (<1% occurrence rate)
   if (slot2 == (slot1-15)) { continue; }                                                     // char 2 is not -15 to char 1 (does not begin with F0) (eliminates 4,294,967,296 combinations)
   if (slot2 == (slot1-14)) { continue; }                                                     // char 2 is not -14 to char 1 (does not begin with E0,F1) (eliminates 8,589,934,592 combinations)
   differential = abs(slot2-slot1);
   if ((differential < 0) || (differential > 15)) { continue; }                               // char 2 observed differentials (0 to 15) (eliminates 0 combinations)
   if ((risky_mode) && ((differential < 0) || (differential > 12))) { continue; }             // char 2 riskier differentials (0 to 12) (eliminates 51,539,607,552 combinations) (does not begin with 0D, 1E, 2F, D0, E1, F2, 0E, 1F, E0, F1, 0F, F0)

   for (int slot3=start_at;slot3<possible_chars_length;possible_chars_freq[slot3++]--) { // SLOT 3 (eliminations: 76,772,540,416 or 7.0%) (risky eliminations: 107,374,182,400 or 9.8%)
    // NORMAL: DOES NOT BEGIN WITH (365 or 286 non-previously matched) 000,001,00D,00F,011,012,01D,02D,03D,04D,05D,06D,07D,08D,09D,0AD,0BD,0CD,0D0,0D1,0DD,0E0,0E1,0E2,0E3,0ED,0F0,0F1,0F2,0F3,0F4,0F5,0FD,100,10E,10F,110,111,112,11E,122,123,12E,13E,14E,15E,16E,17E,18E,19E,1AE,1BE,1CE,1D0,1DE,1E0,1E1,1E2,1EE,1F0,1F1,1F2,1F3,1F4,1FE,20F,210,211,21F,221,222,223,22F,233,234,23F,24F,25F,26F,27F,28F,29F,2AF,2BF,2CF,2D0,2DF,2E0,2E1,2EF,2F0,2F1,2F2,2F3,2FF,30F,321,322,332,333,334,344,345,3D0,3E0,3E1,3F0,3F1,3F2,40F,432,433,443,444,445,455,456,4D0,4E1,4F0,4F1,4F2,50F,543,544,554,555,556,566,567,5D0,5E1,5F0,5F2,60F,654,655,665,666,667,677,678,6D0,6E1,6F0,6F2,70F,765,766,776,777,778,788,789,7D0,7E1,7F0,7F2,80F,876,877,887,888,889,899,89A,8D0,8E1,8F0,8F2,90F,987,988,998,999,99A,9AA,9AB,9D0,9E1,9F0,9F2,A0F,A98,A99,AA9,AAA,AAB,ABB,ABC,AD0,AE1,AF0,AF2,B0E,B0F,BA9,BAA,BBA,BBB,BBC,BCC,BCD,BD0,BE1,BF0,BF2,C0D,C0E,C0F,C1F,CBA,CBB,CCB,CCC,CCD,CD0,CDD,CDE,CE1,CF0,CF2,D00,D0C,D0D,D0E,D0F,D10,D1E,D1F,D20,D30,D40,D50,D60,D70,D80,D90,DA0,DB0,DC0,DCB,DCC,DD0,DDC,DDD,DDE,DE0,DE1,DEE,DEF,DF0,DF2,E00,E01,E0B,E0C,E0D,E0E,E0F,E10,E11,E1D,E1E,E1F,E20,E21,E2F,E30,E31,E40,E41,E50,E51,E60,E61,E70,E71,E80,E81,E90,E91,EA0,EA1,EB0,EB1,EC0,EC1,ED0,ED1,EDC,EDD,EE0,EE1,EED,EEE,EEF,EF0,EF1,EF2,EFF,F00,F01,F02,F0A,F0B,F0C,F0D,F0E,F0F,F10,F11,F12,F1C,F1D,F1E,F1F,F20,F21,F22,F2E,F2F,F30,F31,F32,F40,F41,F42,F50,F51,F52,F60,F61,F62,F70,F71,F72,F80,F81,F82,F90,F91,F92,FA0,FA1,FA2,FB0,FB1,FB2,FC0,FC1,FC2,FD0,FD1,FD2,FE0,FE1,FE2,FED,FEE,FF0,FF1,FF2,FFE,FFF
    // RISKY: DOES NOT BEGIN WITH (162 or 114 non-previously matched) 0B0,0B1,0C0,0C1,0C2,0C3,0D2,0D3,0D4,0D5,0E4,0E5,0E6,0E7,0F6,0F7,0F8,0F9,1B0,1C0,1C1,1C2,1D1,1D2,1D3,1D4,1E3,1E4,1E5,1E6,1F5,1F6,1F7,1F8,2C0,2C1,2D1,2D2,2D3,2E2,2E3,2E4,2E5,2F4,2F5,2F6,2F7,3C0,3D1,3D2,3E2,3E3,3E4,3F3,3F4,3F5,3F6,4D1,4E0,4E2,4E3,4F3,4F4,4F5,5E0,5E2,5F1,5F3,5F4,6E0,6F1,6F3,70E,7E0,7F1,80D,80E,81F,8F1,90C,90D,90E,91E,91F,A0B,A0C,A0D,A0E,A1D,A1E,A1F,A2F,B0A,B0B,B0C,B0D,B1C,B1D,B1E,B1F,B2E,B2F,C09,C0A,C0B,C0C,C1B,C1C,C1D,C1E,C2D,C2E,C2F,C3F,D08,D09,D0A,D0B,D1A,D1B,D1C,D1D,D2C,D2D,D2E,D2F,D3E,D3F,E07,E08,E09,E0A,E19,E1A,E1B,E1C,E2B,E2C,E2D,E2E,E3D,E3E,E3F,E4F,F06,F07,F08,F09,F18,F19,F1A,F1B,F2A,F2B,F2C,F2D,F3C,F3D,F3E,F3F,F4E,F4F
    hex_chars[2] = possible_chars[slot3];
    ++possible_chars_freq[slot3];
    if ((negate_sequential)&&((slot2==(slot1+1))&&(slot3==(slot2+1)))) { continue; }          // no 3 characters in a row can be sequential (does not begin with 012,123,234,345,456,567,678,789,89A,9AB,ABC,BCD,CDE,DEF) (eliminates 3,758,096,384 combinations)
    if ((negate_sequential)&&((slot2==(slot1-1))&&(slot3==(slot2-1)))) { continue; }          // no 3 characters in a row can be reverse sequential (does not begin with 210,321,432,543,654,765,876,987,A98,BA9,CBA,DCB,EDC,FED) (eliminates 3,758,096,384 combinations)
    if ((slot3==slot2)&&(slot2==slot1)) { continue; }                                         // no 3 characters in a row can be identical (holds true 97.6% of the time) (does not begin with 000,111,222,333,444,555,666,777,888,999,AAA,BBB,CCC,DDD,EEE,FFF) (eliminates 4,294,967,296 combinations) (already counted)
    if (slot3 == (slot2-15)) { continue; }                                                    // char 3 is not -15 to char 2 (does not begin with 0F0,1F0,2F0,3F0,4F0,5F0,6F0,7F0,8F0,9F0,AF0,BF0,CF0,DF0,EF0,FF0) (eliminates 4,294,967,296 combinations)
    if (slot3 == (slot2-13)) { continue; }                                                    // char 3 is not -13 to char 2 (does not begin with 0F2,1F2,2F2,3F2,4F2,5F2,6F2,7F2,8F2,9F2,AF2,BF2,CF2,DF2,EF2,FF2,0E1,1E1,2E1,3E1,4E1,5E1,6E1,7E1,8E1,9E1,AE1,BE1,CE1,DE1,EE1,FE1,0D0,1D0,2D0,3D0,4D0,5D0,6D0,7D0,8D0,9D0,AD0,BD0,CD0,DD0,ED0,FD0) (eliminates 12,884,901,888 combinations)
    if (slot3 == (slot2+15)) { continue; }                                                    // char 3 is not +15 to char 2 (does not begin with 00F,10F,20F,30F,40F,50F,60F,70F,80F,90F,A0F,B0F,C0F,D0F,E0F,F0F) (eliminates 4,294,967,296 combinations)
    if (slot3 == (slot1-15)) { continue; }                                                    // char 3 is not -15 to char 1 (does not begin with F00,F10,F20,F30,F40,F50,F60,F70,F80,F90,FA0,FB0,FC0,FD0,FE0,FF0) (eliminates 4,294,967,296 combinations)
    if (slot3 == (slot1-14)) { continue; }                                                    // char 3 is not -14 to char 1 (does not begin with F01,F11,F21,F31,F41,F51,F61,F71,F81,F91,FA1,FB1,FC1,FD1,FE1,FF1,E00,E10,E20,E30,E40,E50,E60,E70,E80,E90,EA0,EB0,EC0,ED0,EE0,EF0) (eliminates 8,589,934,592 combinations)
    if (slot3 == (slot1-13)) { continue; }                                                    // char 3 is not -13 to char 1 (does not begin with F02,F12,F22,F32,F42,F52,F62,F72,F82,F92,FA2,FB2,FC2,FD2,FE2,FF2,E01,E11,E21,E31,E41,E51,E61,E71,E81,E91,EA1,EB1,EC1,ED1,EE1,EF1,D00,D10,D20,D30,D40,D50,D60,D70,D80,D90,DA0,DB0,DC0,DD0,DE0,DF0) (eliminates 12,884,901,888 combinations)
    if (slot3 == (slot1+13)) { continue; }                                                    // char 3 is not +13 to char 1 (does not begin with 00D,01D,02D,03D,04D,05D,06D,07D,08D,09D,0AD,0BD,0CD,0DD,0ED,0FD,10E,11E,12E,13E,14E,15E,16E,17E,18E,19E,1AE,1BE,1CE,1DE,1EE,1FE,20F,21F,22F,23F,24F,25F,26F,27F,28F,29F,2AF,2BF,2CF,2DF,2EF,2FF) (eliminates 12,884,901,888 combinations)
    differential = abs(slot3-slot2) + abs(slot2-slot1);
    if ((differential < 2) || (differential > 24)) { continue; }                              // char 3 observed differentials (2 to 24) (eliminates 38,654,705,664 combinations) (does not begin with 000,111,222,333,444,555,666,777,888,999,AAA,BBB,CCC,DDD,EEE,FFF,001,011,100,110,112,122,211,221,223,233,322,332,334,344,433,443,445,455,544,554,556,566,655,665,667,677,766,776,778,788,877,887,889,899,988,998,99A,9AA,A99,AA9,AAB,ABB,BAA,BBA,BBC,BCC,CBB,CCB,CCD,CDD,DCC,DDC,DDE,DEE,EDD,EED,EEF,EFF,FEE,FFE,0D1,0E3,0F5,1D0,1E2,1F4,2E1,2F3,3E0,3F2,4F1,5F0,A0F,B0E,C0D,C1F,D0C,D1E,E0B,E1D,E2F,F0A,F1C,F2E,0D0,0E2,0F4,1E1,1F3,2E0,2F2,3F1,4F0,B0F,C0E,D0D,D1F,E0C,E1E,F0B,F1D,F2F,0E1,0F3,1E0,1F2,2F1,3F0,C0F,D0E,E0D,E1F,F0C,F1E,0E0,0F2,1F1,2F0,D0F,E0E,F0D,F1F,0F1,1F0,E0F,F0E,0F0,F0F)
    if ((risky_mode) && ((differential < 2) || (differential > 20))) { continue; }            // char 3 riskier differentials (2 to 20) (eliminates 87,509,958,656 combinations) (does not begin with 000,111,222,333,444,555,666,777,888,999,AAA,BBB,CCC,DDD,EEE,FFF,001,011,100,110,112,122,211,221,223,233,322,332,334,344,433,443,445,455,544,554,556,566,655,665,667,677,766,776,778,788,877,887,889,899,988,998,99A,9AA,A99,AA9,AAB,ABB,BAA,BBA,BBC,BCC,CBB,CCB,CCD,CDD,DCC,DDC,DDE,DEE,EDD,EED,EEF,EFF,FEE,FFE,0B1,0C3,0D5,0E7,0F9,1B0,1C2,1D4,1E6,1F8,2C1,2D3,2E5,2F7,3C0,3D2,3E4,3F6,4D1,4E3,4F5,5D0,5E2,5F4,60F,6E1,6F3,70E,7E0,7F2,80D,81F,8F1,90C,91E,9F0,A0B,A1D,A2F,B0A,B1C,B2E,C09,C1B,C2D,C3F,D08,D1A,D2C,D3E,E07,E19,E2B,E3D,E4F,F06,F18,F2A,F3C,F4E,0B0,0C2,0D4,0E6,0F8,1C1,1D3,1E5,1F7,2C0,2D2,2E4,2F6,3D1,3E3,3F5,4D0,4E2,4F4,5E1,5F3,6E0,6F2,70F,7F1,80E,8F0,90D,91F,A0C,A1E,B0B,B1D,B2F,C0A,C1C,C2E,D09,D1B,D2D,D3F,E08,E1A,E2C,E3E,F07,F19,F2B,F3D,F4F,0C1,0D3,0E5,0F7,1C0,1D2,1E4,1F6,2D1,2E3,2F5,3D0,3E2,3F4,4E1,4F3,5E0,5F2,6F1,7F0,80F,90E,A0D,A1F,B0C,B1E,C0B,C1D,C2F,D0A,D1C,D2E,E09,E1B,E2D,E3F,F08,F1A,F2C,F3E,0C0,0D2,0E4,0F6,1D1,1E3,1F5,2D0,2E2,2F4,3E1,3F3,4E0,4F2,5F1,6F0,90F,A0E,B0D,B1F,C0C,C1E,D0B,D1D,D2F,E0A,E1C,E2E,F09,F1B,F2D,F3F,0D1,0E3,0F5,1D0,1E2,1F4,2E1,2F3,3E0,3F2,4F1,5F0,A0F,B0E,C0D,C1F,D0C,D1E,E0B,E1D,E2F,F0A,F1C,F2E,0D0,0E2,0F4,1E1,1F3,2E0,2F2,3F1,4F0,B0F,C0E,D0D,D1F,E0C,E1E,F0B,F1D,F2F,0E1,0F3,1E0,1F2,2F1,3F0,C0F,D0E,E0D,E1F,F0C,F1E,0E0,0F2,1F1,2F0,D0F,E0E,F0D,F1F,0F1,1F0,E0F,F0E,0F0,F0F)

    for (int slot4=start_at;slot4<possible_chars_length;possible_chars_freq[slot4++]--) { // SLOT 4 (eliminations: 83,567,312,896 or 7.6%) (risky eliminations: 132,103,798,784 or 12%)
     // NORMAL: DOES NOT BEGIN WITH (6616 or 4981 non-previously matched) 0000,0001,0002,000D,000E,000F,0010,0011,0012,001D,001E,001F,0022,002D,002E,002F,003D,003E,003F,004D,004E,004F,005D,005E,005F,006D,006E,006F,007D,007E,007F,008D,008E,008F,009D,009E,009F,00AD,00AE,00AF,00BD,00BE,00BF,00CD,00CE,00CF,00DD,00DE,00DF,00E0,00ED,00EE,00EF,00F0,00F1,00FD,00FE,00FF,0100,0101,0102,010E,010F,0110,0111,0112,011E,011F,0122,0123,012E,012F,013E,013F,014E,014F,015E,015F,016E,016F,017E,017F,018E,018F,019E,019F,01AE,01AF,01BE,01BF,01CE,01CF,01DE,01DF,01E0,01EE,01EF,01F0,01F1,01FE,01FF,0200,0202,0203,020E,020F,0210,021E,021F,0222,022E,022F,0234,023E,023F,024E,024F,025E,025F,026E,026F,027E,027F,028E,028F,029E,029F,02AE,02AF,02BE,02BF,02CE,02CF,02DE,02DF,02E0,02EE,02EF,02F0,02F1,02FE,02FF,0300,0303,0304,030E,030F,031E,031F,0321,032E,032F,0333,033E,033F,0345,034E,034F,035E,035F,036E,036F,037E,037F,038E,038F,039E,039F,03AE,03AF,03BE,03BF,03CE,03CF,03DE,03DF,03E0,03EE,03EF,03F0,03F1,03FE,03FF,0400,0404,0405,040E,040F,041E,041F,042E,042F,0432,043E,043F,0444,044E,044F,0456,045E,045F,046E,046F,047E,047F,048E,048F,049E,049F,04AE,04AF,04BE,04BF,04CE,04CF,04DE,04DF,04E0,04EE,04EF,04F0,04F1,04FE,04FF,0500,0505,0506,050E,050F,051E,051F,052E,052F,053E,053F,0543,054E,054F,0555,055E,055F,0567,056E,056F,057E,057F,058E,058F,059E,059F,05AE,05AF,05BE,05BF,05CE,05CF,05DE,05DF,05E0,05EE,05EF,05F0,05F1,05FE,05FF,0600,0606,0607,060E,060F,061E,061F,062E,062F,063E,063F,064E,064F,0654,065E,065F,0666,066E,066F,0678,067E,067F,068E,068F,069E,069F,06AE,06AF,06BE,06BF,06CE,06CF,06DE,06DF,06E0,06EE,06EF,06F0,06F1,06FE,06FF,0700,0707,0708,070E,070F,071E,071F,072E,072F,073E,073F,074E,074F,075E,075F,0765,076E,076F,0777,077E,077F,0789,078E,078F,079E,079F,07AE,07AF,07BE,07BF,07CE,07CF,07DE,07DF,07E0,07EE,07EF,07F0,07F1,07FE,07FF,0800,0808,0809,080E,080F,081E,081F,082E,082F,083E,083F,084E,084F,085E,085F,086E,086F,0876,087E,087F,0888,088E,088F,089A,089E,089F,08AE,08AF,08BE,08BF,08CE,08CF,08DE,08DF,08E0,08EE,08EF,08F0,08F1,08FE,08FF,0900,0909,090A,090E,090F,091E,091F,092E,092F,093E,093F,094E,094F,095E,095F,096E,096F,097E,097F,0987,098E,098F,0999,099E,099F,09AB,09AE,09AF,09BE,09BF,09CE,09CF,09DE,09DF,09E0,09EE,09EF,09F0,09F1,09FE,09FF,0A00,0A0A,0A0B,0A0E,0A0F,0A1E,0A1F,0A2E,0A2F,0A3E,0A3F,0A4E,0A4F,0A5E,0A5F,0A6E,0A6F,0A7E,0A7F,0A8E,0A8F,0A98,0A9E,0A9F,0AAA,0AAE,0AAF,0ABC,0ABE,0ABF,0ACE,0ACF,0ADE,0ADF,0AE0,0AEE,0AEF,0AF0,0AF1,0AFE,0AFF,0B00,0B0B,0B0C,0B0E,0B0F,0B1E,0B1F,0B2E,0B2F,0B3E,0B3F,0B4E,0B4F,0B5E,0B5F,0B6E,0B6F,0B7E,0B7F,0B8E,0B8F,0B9E,0B9F,0BA9,0BAE,0BAF,0BBB,0BBE,0BBF,0BCD,0BCE,0BCF,0BDE,0BDF,0BE0,0BEE,0BEF,0BF0,0BF1,0BFE,0BFF,0C00,0C0C,0C0D,0C0E,0C0F,0C1E,0C1F,0C2E,0C2F,0C3E,0C3F,0C4E,0C4F,0C5E,0C5F,0C6E,0C6F,0C7E,0C7F,0C8E,0C8F,0C9E,0C9F,0CAE,0CAF,0CBA,0CBE,0CBF,0CCC,0CCE,0CCF,0CDE,0CDF,0CE0,0CEE,0CEF,0CF0,0CF1,0CFE,0CFF,0D00,0D0C,0D0D,0D0E,0D0F,0D1E,0D1F,0D2E,0D2F,0D3E,0D3F,0D4E,0D4F,0D5E,0D5F,0D6E,0D6F,0D7E,0D7F,0D8E,0D8F,0D9E,0D9F,0DAE,0DAF,0DBE,0DBF,0DCB,0DCE,0DCF,0DDD,0DDE,0DDF,0DE0,0DEE,0DEF,0DF0,0DF1,0DFE,0DFF,0E00,0E0A,0E0B,0E0C,0E0D,0E0E,0E0F,0E1C,0E1D,0E1E,0E1F,0E2E,0E2F,0E3E,0E3F,0E4E,0E4F,0E5E,0E5F,0E6E,0E6F,0E7E,0E7F,0E8E,0E8F,0E9E,0E9F,0EAE,0EAF,0EBE,0EBF,0ECE,0ECF,0EDC,0EDE,0EDF,0EE0,0EEE,0EEF,0EF0,0EF1,0EFE,0EFF,0F00,0F08,0F09,0F0A,0F0B,0F0C,0F0D,0F0E,0F0F,0F1A,0F1B,0F1C,0F1D,0F1E,0F1F,0F2C,0F2D,0F2E,0F2F,0F3E,0F3F,0F4E,0F4F,0F5E,0F5F,0F6E,0F6F,0F7E,0F7F,0F8E,0F8F,0F9E,0F9F,0FAE,0FAF,0FBE,0FBF,0FCE,0FCF,0FDE,0FDF,0FE0,0FED,0FEE,0FEF,0FF0,0FF1,0FFE,0FFF,1000,1001,100D,100E,100F,1010,1011,1012,101D,101E,101F,102D,102E,102F,103D,103E,103F,104D,104E,104F,105D,105E,105F,106D,106E,106F,107D,107E,107F,108D,108E,108F,109D,109E,109F,10AD,10AE,10AF,10BD,10BE,10BF,10CD,10CE,10CF,10DD,10DE,10DF,10E0,10ED,10EE,10EF,10F0,10F1,10FD,10FE,10FF,1100,1101,110E,110F,1110,1111,1112,1113,111E,111F,1121,1122,1123,112E,112F,1133,113E,113F,114E,114F,115E,115F,116E,116F,117E,117F,118E,118F,119E,119F,11AE,11AF,11BE,11BF,11CE,11CF,11DE,11DF,11E0,11EE,11EF,11F0,11F1,11FE,11FF,120E,120F,1210,1211,1212,1213,121F,1221,1222,1223,122F,1233,1234,123F,124F,125F,126F,127F,128F,129F,12AF,12BF,12CF,12DF,12E0,12EF,12F0,12F1,12FF,130E,130F,1311,1313,1314,131F,1321,132F,1333,133F,1345,134F,135F,136F,137F,138F,139F,13AF,13BF,13CF,13DF,13E0,13EF,13F0,13F1,13FF,140E,140F,1411,1414,1415,141F,142F,1432,143F,1444,144F,1456,145F,146F,147F,148F,149F,14AF,14BF,14CF,14DF,14E0,14EF,14F0,14F1,14FF,150E,150F,1511,1515,1516,151F,152F,153F,1543,154F,1555,155F,1567,156F,157F,158F,159F,15AF,15BF,15CF,15DF,15E0,15EF,15F0,15F1,15FF,160E,160F,1611,1616,1617,161F,162F,163F,164F,1654,165F,1666,166F,1678,167F,168F,169F,16AF,16BF,16CF,16DF,16E0,16EF,16F0,16F1,16FF,170E,170F,1711,1717,1718,171F,172F,173F,174F,175F,1765,176F,1777,177F,1789,178F,179F,17AF,17BF,17CF,17DF,17E0,17EF,17F0,17F1,17FF,180E,180F,1811,1818,1819,181F,182F,183F,184F,185F,186F,1876,187F,1888,188F,189A,189F,18AF,18BF,18CF,18DF,18E0,18EF,18F0,18F1,18FF,190E,190F,1911,1919,191A,191F,192F,193F,194F,195F,196F,197F,1987,198F,1999,199F,19AB,19AF,19BF,19CF,19DF,19E0,19EF,19F0,19F1,19FF,1A0E,1A0F,1A11,1A1A,1A1B,1A1F,1A2F,1A3F,1A4F,1A5F,1A6F,1A7F,1A8F,1A98,1A9F,1AAA,1AAF,1ABC,1ABF,1ACF,1ADF,1AE0,1AEF,1AF0,1AF1,1AFF,1B0E,1B0F,1B11,1B1B,1B1C,1B1F,1B2F,1B3F,1B4F,1B5F,1B6F,1B7F,1B8F,1B9F,1BA9,1BAF,1BBB,1BBF,1BCD,1BCF,1BDF,1BE0,1BEF,1BF0,1BF1,1BFF,1C0E,1C0F,1C11,1C1C,1C1D,1C1F,1C2F,1C3F,1C4F,1C5F,1C6F,1C7F,1C8F,1C9F,1CAF,1CBA,1CBF,1CCC,1CCF,1CDE,1CDF,1CE0,1CEF,1CF0,1CF1,1CFF,1D0D,1D0E,1D0F,1D11,1D1D,1D1E,1D1F,1D2F,1D3F,1D4F,1D5F,1D6F,1D7F,1D8F,1D9F,1DAF,1DBF,1DCB,1DCF,1DDD,1DDF,1DE0,1DEF,1DF0,1DF1,1DFF,1E0B,1E0C,1E0D,1E0E,1E0F,1E11,1E1D,1E1E,1E1F,1E2F,1E3F,1E4F,1E5F,1E6F,1E7F,1E8F,1E9F,1EAF,1EBF,1ECF,1EDC,1EDF,1EE0,1EEE,1EEF,1EF0,1EF1,1EFF,1F09,1F0A,1F0B,1F0C,1F0D,1F0E,1F0F,1F11,1F1B,1F1C,1F1D,1F1E,1F1F,1F2D,1F2E,1F2F,1F3F,1F4F,1F5F,1F6F,1F7F,1F8F,1F9F,1FAF,1FBF,1FCF,1FDF,1FE0,1FED,1FEF,1FF0,1FF1,1FFF,2000,200D,200E,200F,2012,201D,201E,201F,2020,2021,2022,202D,202E,202F,203D,203E,203F,204D,204E,204F,205D,205E,205F,206D,206E,206F,207D,207E,207F,208D,208E,208F,209D,209E,209F,20AD,20AE,20AF,20BD,20BE,20BF,20CD,20CE,20CF,20DD,20DE,20DF,20E0,20ED,20EE,20EF,20F0,20F1,20FD,20FE,20FF,2100,210E,210F,2110,2111,2112,211E,211F,2121,2122,2123,212E,212F,213E,213F,214E,214F,215E,215F,216E,216F,217E,217F,218E,218F,219E,219F,21AE,21AF,21BE,21BF,21CE,21CF,21DE,21DF,21E0,21EE,21EF,21F0,21F1,21FE,21FF,2200,220E,220F,2210,2211,2212,221F,2220,2221,2222,2223,2224,222F,2232,2233,2234,223F,2244,224F,225F,226F,227F,228F,229F,22AF,22BF,22CF,22DF,22E0,22EF,22F0,22F1,22FF,230E,230F,231F,2321,2322,2323,2324,2332,2333,2334,2344,2345,23E0,23F0,23F1,240E,240F,241F,2422,2424,2425,2432,2444,2456,24E0,24F0,24F1,250E,250F,251F,2522,2525,2526,2543,2555,2567,25E0,25F0,25F1,260E,260F,261F,2622,2626,2627,2654,2666,2678,26E0,26F0,26F1,270E,270F,271F,2722,2727,2728,2765,2777,2789,27E0,27F0,27F1,280E,280F,281F,2822,2828,2829,2876,2888,289A,28E0,28F0,28F1,290E,290F,291F,2922,2929,292A,2987,2999,29AB,29E0,29F0,29F1,2A0E,2A0F,2A1F,2A22,2A2A,2A2B,2A98,2AAA,2ABC,2AE0,2AF0,2AF1,2B0E,2B0F,2B1F,2B22,2B2B,2B2C,2BA9,2BBB,2BCD,2BE0,2BF0,2BF1,2C0E,2C0F,2C1F,2C22,2C2C,2C2D,2CBA,2CCC,2CDE,2CE0,2CF0,2CF1,2D0E,2D0F,2D1F,2D22,2D2D,2D2E,2DCB,2DDD,2DE0,2DEF,2DF0,2DF1,2E0C,2E0D,2E0E,2E0F,2E1E,2E1F,2E22,2E2E,2E2F,2EDC,2EE0,2EEE,2EF0,2EF1,2F0A,2F0B,2F0C,2F0D,2F0E,2F0F,2F1C,2F1D,2F1E,2F1F,2F22,2F2E,2F2F,2FE0,2FED,2FF0,2FF1,2FFF,3000,300D,300E,300F,3012,301D,301E,301F,302D,302E,302F,3030,3031,3033,303D,303E,303F,304D,304E,304F,305D,305E,305F,306D,306E,306F,307D,307E,307F,308D,308E,308F,309D,309E,309F,30AD,30AE,30AF,30BD,30BE,30BF,30CD,30CE,30CF,30DD,30DE,30DF,30E0,30ED,30EE,30EF,30F0,30F1,30FD,30FE,30FF,310E,310F,3111,311E,311F,3123,312E,312F,3131,3132,3133,313E,313F,314E,314F,315E,315F,316E,316F,317E,317F,318E,318F,319E,319F,31AE,31AF,31BE,31BF,31CE,31CF,31DE,31DF,31E0,31EE,31EF,31F0,31F1,31FE,31FF,320E,320F,3210,3211,321F,3221,3222,3223,322F,3232,3233,3234,323F,324F,325F,326F,327F,328F,329F,32AF,32BF,32CF,32DF,32E0,32EF,32F0,32F1,32FF,330E,330F,3311,331F,3321,3322,3323,3331,3332,3333,3334,3335,3343,3344,3345,3355,33E0,33F0,33F1,340E,340F,341F,3432,3433,3434,3435,3443,3444,3445,3455,3456,34E0,34F0,34F1,350E,350F,351F,3533,3535,3536,3543,3555,3567,35E0,35F0,35F1,360E,360F,361F,3633,3636,3637,3654,3666,3678,36E0,36F0,36F1,370E,370F,371F,3733,3737,3738,3765,3777,3789,37E0,37F0,37F1,380E,380F,381F,3833,3838,3839,3876,3888,389A,38E0,38F0,38F1,390E,390F,391F,3933,3939,393A,3987,3999,39AB,39E0,39F0,39F1,3A0E,3A0F,3A1F,3A33,3A3A,3A3B,3A98,3AAA,3ABC,3AE0,3AF0,3AF1,3B0E,3B0F,3B1F,3B33,3B3B,3B3C,3BA9,3BBB,3BCD,3BE0,3BF0,3BF1,3C0E,3C0F,3C1F,3C33,3C3C,3C3D,3CBA,3CCC,3CDE,3CE0,3CF0,3CF1,3D0E,3D0F,3D1F,3D33,3D3D,3D3E,3DCB,3DDD,3DE0,3DEF,3DF0,3DF1,3E0D,3E0E,3E0F,3E1F,3E33,3E3E,3E3F,3EDC,3EE0,3EEE,3EF0,3EF1,3F0B,3F0C,3F0D,3F0E,3F0F,3F1D,3F1E,3F1F,3F2F,3F33,3F3F,3FE0,3FED,3FF0,3FF1,3FFF,4000,400D,400E,400F,4012,401D,401E,401F,402D,402E,402F,403D,403E,403F,4040,4041,4044,404D,404E,404F,405D,405E,405F,406D,406E,406F,407D,407E,407F,408D,408E,408F,409D,409E,409F,40AD,40AE,40AF,40BD,40BE,40BF,40CD,40CE,40CF,40DD,40DE,40DF,40E0,40ED,40EE,40EF,40F0,40F1,40FD,40FE,40FF,410E,410F,4111,411E,411F,4123,412E,412F,413E,413F,4141,4142,4144,414E,414F,415E,415F,416E,416F,417E,417F,418E,418F,419E,419F,41AE,41AF,41BE,41BF,41CE,41CF,41DE,41DF,41E0,41EE,41EF,41F0,41F1,41FE,41FF,420E,420F,4210,421F,4222,422F,4234,423F,4242,4243,4244,424F,425F,426F,427F,428F,429F,42AF,42BF,42CF,42DF,42E0,42EF,42F0,42F1,42FF,430E,430F,431F,4321,4322,4332,4333,4334,4343,4344,4345,43E0,43F0,43F1,440E,440F,441F,4422,4432,4433,4434,4442,4443,4444,4445,4446,4454,4455,4456,4466,44E0,44F0,44F1,450E,450F,451F,4543,4544,4545,4546,4554,4555,4556,4566,4567,45E0,45F0,45F1,460E,460F,461F,4644,4646,4647,4654,4666,4678,46E0,46F0,46F1,470E,470F,471F,4744,4747,4748,4765,4777,4789,47E0,47F0,47F1,480E,480F,481F,4844,4848,4849,4876,4888,489A,48E0,48F0,48F1,490E,490F,491F,4944,4949,494A,4987,4999,49AB,49E0,49F0,49F1,4A0E,4A0F,4A1F,4A44,4A4A,4A4B,4A98,4AAA,4ABC,4AE0,4AF0,4AF1,4B0E,4B0F,4B1F,4B44,4B4B,4B4C,4BA9,4BBB,4BCD,4BE0,4BF0,4BF1,4C0E,4C0F,4C1F,4C44,4C4C,4C4D,4CBA,4CCC,4CDE,4CE0,4CF0,4CF1,4D0E,4D0F,4D1F,4D44,4D4D,4D4E,4DCB,4DDD,4DE0,4DEF,4DF0,4DF1,4E0E,4E0F,4E1F,4E44,4E4E,4E4F,4EDC,4EE0,4EEE,4EF0,4EF1,4F0C,4F0D,4F0E,4F0F,4F1E,4F1F,4F44,4F4F,4FE0,4FED,4FF0,4FF1,4FFF,5000,500D,500E,500F,5012,501D,501E,501F,502D,502E,502F,503D,503E,503F,504D,504E,504F,5050,5051,5055,505D,505E,505F,506D,506E,506F,507D,507E,507F,508D,508E,508F,509D,509E,509F,50AD,50AE,50AF,50BD,50BE,50BF,50CD,50CE,50CF,50DD,50DE,50DF,50E0,50ED,50EE,50EF,50F0,50F1,50FD,50FE,50FF,510E,510F,5111,511E,511F,5123,512E,512F,513E,513F,514E,514F,5151,5152,5155,515E,515F,516E,516F,517E,517F,518E,518F,519E,519F,51AE,51AF,51BE,51BF,51CE,51CF,51DE,51DF,51E0,51EE,51EF,51F0,51F1,51FE,51FF,520E,520F,5210,521F,5222,522F,5234,523F,524F,5252,5253,5255,525F,526F,527F,528F,529F,52AF,52BF,52CF,52DF,52E0,52EF,52F0,52F1,52FF,530E,530F,531F,5321,5333,5345,5353,5354,5355,53E0,53F0,53F1,540E,540F,541F,5432,5433,5443,5444,5445,5454,5455,5456,54E0,54F0,54F1,550E,550F,551F,5533,5543,5544,5545,5553,5554,5555,5556,5557,5565,5566,5567,5577,55E0,55F0,55F1,560E,560F,561F,5654,5655,5656,5657,5665,5666,5667,5677,5678,56E0,56F0,56F1,570E,570F,571F,5755,5757,5758,5765,5777,5789,57E0,57F0,57F1,580E,580F,581F,5855,5858,5859,5876,5888,589A,58E0,58F0,58F1,590E,590F,591F,5955,5959,595A,5987,5999,59AB,59E0,59F0,59F1,5A0E,5A0F,5A1F,5A55,5A5A,5A5B,5A98,5AAA,5ABC,5AE0,5AF0,5AF1,5B0E,5B0F,5B1F,5B55,5B5B,5B5C,5BA9,5BBB,5BCD,5BE0,5BF0,5BF1,5C0E,5C0F,5C1F,5C55,5C5C,5C5D,5CBA,5CCC,5CDE,5CE0,5CF0,5CF1,5D0E,5D0F,5D1F,5D55,5D5D,5D5E,5DCB,5DDD,5DE0,5DEF,5DF0,5DF1,5E0E,5E0F,5E1F,5E55,5E5E,5E5F,5EDC,5EE0,5EEE,5EF0,5EF1,5F0D,5F0E,5F0F,5F1F,5F55,5F5F,5FE0,5FED,5FF0,5FF1,5FFF,6000,600D,600E,600F,6012,601D,601E,601F,602D,602E,602F,603D,603E,603F,604D,604E,604F,605D,605E,605F,6060,6061,6066,606D,606E,606F,607D,607E,607F,608D,608E,608F,609D,609E,609F,60AD,60AE,60AF,60BD,60BE,60BF,60CD,60CE,60CF,60DD,60DE,60DF,60E0,60ED,60EE,60EF,60F0,60F1,60FD,60FE,60FF,610E,610F,6111,611E,611F,6123,612E,612F,613E,613F,614E,614F,615E,615F,6161,6162,6166,616E,616F,617E,617F,618E,618F,619E,619F,61AE,61AF,61BE,61BF,61CE,61CF,61DE,61DF,61E0,61EE,61EF,61F0,61F1,61FE,61FF,620E,620F,6210,621F,6222,622F,6234,623F,624F,625F,6262,6263,6266,626F,627F,628F,629F,62AF,62BF,62CF,62DF,62E0,62EF,62F0,62F1,62FF,630E,630F,631F,6321,6333,6345,6363,6364,6366,63E0,63F0,63F1,640E,640F,641F,6432,6444,6456,6464,6465,6466,64E0,64F0,64F1,650E,650F,651F,6543,6544,6554,6555,6556,6565,6566,6567,65E0,65F0,65F1,660E,660F,661F,6644,6654,6655,6656,6664,6665,6666,6667,6668,6676,6677,6678,6688,66E0,66F0,66F1,670E,670F,671F,6765,6766,6767,6768,6776,6777,6778,6788,6789,67E0,67F0,67F1,680E,680F,681F,6866,6868,6869,6876,6888,689A,68E0,68F0,68F1,690E,690F,691F,6966,6969,696A,6987,6999,69AB,69E0,69F0,69F1,6A0E,6A0F,6A1F,6A66,6A6A,6A6B,6A98,6AAA,6ABC,6AE0,6AF0,6AF1,6B0E,6B0F,6B1F,6B66,6B6B,6B6C,6BA9,6BBB,6BCD,6BE0,6BF0,6BF1,6C0E,6C0F,6C1F,6C66,6C6C,6C6D,6CBA,6CCC,6CDE,6CE0,6CF0,6CF1,6D0E,6D0F,6D1F,6D66,6D6D,6D6E,6DCB,6DDD,6DE0,6DEF,6DF0,6DF1,6E0E,6E0F,6E1F,6E66,6E6E,6E6F,6EDC,6EE0,6EEE,6EF0,6EF1,6F0E,6F0F,6F1F,6F66,6F6F,6FE0,6FED,6FF0,6FF1,6FFF,7000,700D,700E,700F,7012,701D,701E,701F,702D,702E,702F,703D,703E,703F,704D,704E,704F,705D,705E,705F,706D,706E,706F,7070,7071,7077,707D,707E,707F,708D,708E,708F,709D,709E,709F,70AD,70AE,70AF,70BD,70BE,70BF,70CD,70CE,70CF,70DD,70DE,70DF,70E0,70ED,70EE,70EF,70F0,70F1,70FD,70FE,70FF,710E,710F,7111,711E,711F,7123,712E,712F,713E,713F,714E,714F,715E,715F,716E,716F,7171,7172,7177,717E,717F,718E,718F,719E,719F,71AE,71AF,71BE,71BF,71CE,71CF,71DE,71DF,71E0,71EE,71EF,71F0,71F1,71FE,71FF,720E,720F,7210,721F,7222,722F,7234,723F,724F,725F,726F,7272,7273,7277,727F,728F,729F,72AF,72BF,72CF,72DF,72E0,72EF,72F0,72F1,72FF,730E,730F,731F,7321,7333,7345,7373,7374,7377,73E0,73F0,73F1,740E,740F,741F,7432,7444,7456,7474,7475,7477,74E0,74F0,74F1,750E,750F,751F,7543,7555,7567,7575,7576,7577,75E0,75F0,75F1,760E,760F,761F,7654,7655,7665,7666,7667,7676,7677,7678,76E0,76F0,76F1,770E,770F,771F,7755,7765,7766,7767,7775,7776,7777,7778,7779,7787,7788,7789,7799,77E0,77F0,77F1,780E,780F,781F,7876,7877,7878,7879,7887,7888,7889,7899,789A,78E0,78F0,78F1,790E,790F,791F,7977,7979,797A,7987,7999,79AB,79E0,79F0,79F1,7A0E,7A0F,7A1F,7A77,7A7A,7A7B,7A98,7AAA,7ABC,7AE0,7AF0,7AF1,7B0E,7B0F,7B1F,7B77,7B7B,7B7C,7BA9,7BBB,7BCD,7BE0,7BF0,7BF1,7C0E,7C0F,7C1F,7C77,7C7C,7C7D,7CBA,7CCC,7CDE,7CE0,7CF0,7CF1,7D0E,7D0F,7D1F,7D77,7D7D,7D7E,7DCB,7DDD,7DE0,7DEF,7DF0,7DF1,7E0E,7E0F,7E1F,7E77,7E7E,7E7F,7EDC,7EE0,7EEE,7EF0,7EF1,7F0E,7F0F,7F1F,7F77,7F7F,7FE0,7FED,7FF0,7FF1,7FFF,8000,800D,800E,800F,8012,801D,801E,801F,802D,802E,802F,803D,803E,803F,804D,804E,804F,805D,805E,805F,806D,806E,806F,807D,807E,807F,8080,8081,8088,808D,808E,808F,809D,809E,809F,80AD,80AE,80AF,80BD,80BE,80BF,80CD,80CE,80CF,80DD,80DE,80DF,80E0,80ED,80EE,80EF,80F0,80F1,80FD,80FE,80FF,810E,810F,8111,811E,811F,8123,812E,812F,813E,813F,814E,814F,815E,815F,816E,816F,817E,817F,8181,8182,8188,818E,818F,819E,819F,81AE,81AF,81BE,81BF,81CE,81CF,81DE,81DF,81E0,81EE,81EF,81F0,81F1,81FE,81FF,820E,820F,8210,821F,8222,822F,8234,823F,824F,825F,826F,827F,8282,8283,8288,828F,829F,82AF,82BF,82CF,82DF,82E0,82EF,82F0,82F1,82FF,830E,830F,831F,8321,8333,8345,8383,8384,8388,83E0,83F0,83F1,840E,840F,841F,8432,8444,8456,8484,8485,8488,84E0,84F0,84F1,850E,850F,851F,8543,8555,8567,8585,8586,8588,85E0,85F0,85F1,860E,860F,861F,8654,8666,8678,8686,8687,8688,86E0,86F0,86F1,870E,870F,871F,8765,8766,8776,8777,8778,8787,8788,8789,87E0,87F0,87F1,880E,880F,881F,8866,8876,8877,8878,8886,8887,8888,8889,888A,8898,8899,889A,88AA,88E0,88F0,88F1,890E,890F,891F,8987,8988,8989,898A,8998,8999,899A,89AA,89AB,89E0,89F0,89F1,8A0E,8A0F,8A1F,8A88,8A8A,8A8B,8A98,8AAA,8ABC,8AE0,8AF0,8AF1,8B0E,8B0F,8B1F,8B88,8B8B,8B8C,8BA9,8BBB,8BCD,8BE0,8BF0,8BF1,8C0E,8C0F,8C1F,8C88,8C8C,8C8D,8CBA,8CCC,8CDE,8CE0,8CF0,8CF1,8D0E,8D0F,8D1F,8D88,8D8D,8D8E,8DCB,8DDD,8DE0,8DEF,8DF0,8DF1,8E0E,8E0F,8E1F,8E88,8E8E,8E8F,8EDC,8EE0,8EEE,8EF0,8EF1,8F0E,8F0F,8F1F,8F88,8F8F,8FE0,8FED,8FF0,8FF1,8FFF,9000,900D,900E,900F,9012,901D,901E,901F,902D,902E,902F,903D,903E,903F,904D,904E,904F,905D,905E,905F,906D,906E,906F,907D,907E,907F,908D,908E,908F,9090,9091,9099,909D,909E,909F,90AD,90AE,90AF,90BD,90BE,90BF,90CD,90CE,90CF,90DD,90DE,90DF,90E0,90ED,90EE,90EF,90F0,90F1,90FD,90FE,90FF,910E,910F,9111,911E,911F,9123,912E,912F,913E,913F,914E,914F,915E,915F,916E,916F,917E,917F,918E,918F,9191,9192,9199,919E,919F,91AE,91AF,91BE,91BF,91CE,91CF,91DE,91DF,91E0,91EE,91EF,91F0,91F1,91FE,91FF,920E,920F,9210,921F,9222,922F,9234,923F,924F,925F,926F,927F,928F,9292,9293,9299,929F,92AF,92BF,92CF,92DF,92E0,92EF,92F0,92F1,92FF,930E,930F,931F,9321,9333,9345,9393,9394,9399,93E0,93F0,93F1,940E,940F,941F,9432,9444,9456,9494,9495,9499,94E0,94F0,94F1,950E,950F,951F,9543,9555,9567,9595,9596,9599,95E0,95F0,95F1,960E,960F,961F,9654,9666,9678,9696,9697,9699,96E0,96F0,96F1,970E,970F,971F,9765,9777,9789,9797,9798,9799,97E0,97F0,97F1,980E,980F,981F,9876,9877,9887,9888,9889,9898,9899,989A,98E0,98F0,98F1,990E,990F,991F,9977,9987,9988,9989,9997,9998,9999,999A,999B,99A9,99AA,99AB,99BB,99E0,99F0,99F1,9A0E,9A0F,9A1F,9A98,9A99,9A9A,9A9B,9AA9,9AAA,9AAB,9ABB,9ABC,9AE0,9AF0,9AF1,9B0E,9B0F,9B1F,9B99,9B9B,9B9C,9BA9,9BBB,9BCD,9BE0,9BF0,9BF1,9C0E,9C0F,9C1F,9C99,9C9C,9C9D,9CBA,9CCC,9CDE,9CE0,9CF0,9CF1,9D0E,9D0F,9D1F,9D99,9D9D,9D9E,9DCB,9DDD,9DE0,9DEF,9DF0,9DF1,9E0E,9E0F,9E1F,9E99,9E9E,9E9F,9EDC,9EE0,9EEE,9EF0,9EF1,9F0E,9F0F,9F1F,9F99,9F9F,9FE0,9FED,9FF0,9FF1,9FFF,A000,A00D,A00E,A00F,A012,A01D,A01E,A01F,A02D,A02E,A02F,A03D,A03E,A03F,A04D,A04E,A04F,A05D,A05E,A05F,A06D,A06E,A06F,A07D,A07E,A07F,A08D,A08E,A08F,A09D,A09E,A09F,A0A0,A0A1,A0AA,A0AD,A0AE,A0AF,A0BD,A0BE,A0BF,A0CD,A0CE,A0CF,A0DD,A0DE,A0DF,A0E0,A0ED,A0EE,A0EF,A0F0,A0F1,A0F2,A0FD,A0FE,A0FF,A10E,A10F,A111,A11E,A11F,A123,A12E,A12F,A13E,A13F,A14E,A14F,A15E,A15F,A16E,A16F,A17E,A17F,A18E,A18F,A19E,A19F,A1A1,A1A2,A1AA,A1AE,A1AF,A1BE,A1BF,A1CE,A1CF,A1DE,A1DF,A1E0,A1EE,A1EF,A1F0,A1F1,A1FE,A1FF,A20E,A20F,A210,A21F,A222,A22F,A234,A23F,A24F,A25F,A26F,A27F,A28F,A29F,A2A2,A2A3,A2AA,A2AF,A2BF,A2CF,A2DF,A2E0,A2EF,A2F0,A2F1,A2FF,A30E,A30F,A31F,A321,A333,A345,A3A3,A3A4,A3AA,A3E0,A3F0,A3F1,A40E,A40F,A41F,A432,A444,A456,A4A4,A4A5,A4AA,A4E0,A4F0,A4F1,A50E,A50F,A51F,A543,A555,A567,A5A5,A5A6,A5AA,A5E0,A5F0,A5F1,A60E,A60F,A61F,A654,A666,A678,A6A6,A6A7,A6AA,A6E0,A6F0,A6F1,A70E,A70F,A71F,A765,A777,A789,A7A7,A7A8,A7AA,A7E0,A7F0,A7F1,A80E,A80F,A81F,A876,A888,A89A,A8A8,A8A9,A8AA,A8E0,A8F0,A8F1,A90E,A90F,A91F,A987,A988,A998,A999,A99A,A9A9,A9AA,A9AB,A9E0,A9F0,A9F1,AA0E,AA0F,AA1F,AA88,AA98,AA99,AA9A,AAA8,AAA9,AAAA,AAAB,AAAC,AABA,AABB,AABC,AACC,AAE0,AAF0,AAF1,AB0E,AB0F,AB1F,ABA9,ABAA,ABAB,ABAC,ABBA,ABBB,ABBC,ABCC,ABCD,ABE0,ABF0,ABF1,AC0E,AC0F,AC1F,ACAA,ACAC,ACAD,ACBA,ACCC,ACDE,ACE0,ACF0,ACF1,AD0E,AD0F,AD1F,ADAA,ADAD,ADAE,ADCB,ADDD,ADE0,ADEF,ADF0,ADF1,AE0E,AE0F,AE1F,AEAA,AEAE,AEAF,AEDC,AEE0,AEEE,AEF0,AEF1,AF0E,AF0F,AF1F,AFAA,AFAF,AFE0,AFED,AFF0,AFF1,AFFF,B000,B00D,B00E,B00F,B012,B01D,B01E,B01F,B02D,B02E,B02F,B03D,B03E,B03F,B04D,B04E,B04F,B05D,B05E,B05F,B06D,B06E,B06F,B07D,B07E,B07F,B08D,B08E,B08F,B09D,B09E,B09F,B0AD,B0AE,B0AF,B0B0,B0B1,B0BB,B0BD,B0BE,B0BF,B0CD,B0CE,B0CF,B0DD,B0DE,B0DF,B0E0,B0E1,B0ED,B0EE,B0EF,B0F0,B0F1,B0F2,B0F3,B0FD,B0FE,B0FF,B10E,B10F,B111,B11E,B11F,B123,B12E,B12F,B13E,B13F,B14E,B14F,B15E,B15F,B16E,B16F,B17E,B17F,B18E,B18F,B19E,B19F,B1AE,B1AF,B1B1,B1B2,B1BB,B1BE,B1BF,B1CE,B1CF,B1DE,B1DF,B1E0,B1EE,B1EF,B1F0,B1F1,B1FE,B1FF,B20E,B20F,B210,B21F,B222,B22F,B234,B23F,B24F,B25F,B26F,B27F,B28F,B29F,B2AF,B2B2,B2B3,B2BB,B2BF,B2CF,B2DF,B2E0,B2EF,B2F0,B2F1,B2FF,B30E,B30F,B31F,B321,B333,B345,B3B3,B3B4,B3BB,B3E0,B3F0,B3F1,B40E,B40F,B41F,B432,B444,B456,B4B4,B4B5,B4BB,B4E0,B4F0,B4F1,B50E,B50F,B51F,B543,B555,B567,B5B5,B5B6,B5BB,B5E0,B5F0,B5F1,B60E,B60F,B61F,B654,B666,B678,B6B6,B6B7,B6BB,B6E0,B6F0,B6F1,B70E,B70F,B71F,B765,B777,B789,B7B7,B7B8,B7BB,B7E0,B7F0,B7F1,B80E,B80F,B81F,B876,B888,B89A,B8B8,B8B9,B8BB,B8E0,B8F0,B8F1,B90E,B90F,B91F,B987,B999,B9AB,B9B9,B9BA,B9BB,B9E0,B9F0,B9F1,BA0E,BA0F,BA1F,BA98,BA99,BAA9,BAAA,BAAB,BABA,BABB,BABC,BAE0,BAF0,BAF1,BB0E,BB0F,BB1F,BB99,BBA9,BBAA,BBAB,BBB9,BBBA,BBBB,BBBC,BBBD,BBCB,BBCC,BBCD,BBDD,BBE0,BBF0,BBF1,BC0E,BC0F,BC1F,BCBA,BCBB,BCBC,BCBD,BCCB,BCCC,BCCD,BCDD,BCDE,BCE0,BCF0,BCF1,BD0E,BD0F,BD1F,BDBB,BDBD,BDBE,BDCB,BDDD,BDE0,BDEF,BDF0,BDF1,BE0E,BE0F,BE1F,BEBB,BEBE,BEBF,BEDC,BEE0,BEEE,BEF0,BEF1,BF0E,BF0F,BF1F,BFBB,BFBF,BFE0,BFED,BFF0,BFF1,BFFF,C000,C00D,C00E,C00F,C012,C01D,C01E,C01F,C02D,C02E,C02F,C03D,C03E,C03F,C04D,C04E,C04F,C05D,C05E,C05F,C06D,C06E,C06F,C07D,C07E,C07F,C08D,C08E,C08F,C09D,C09E,C09F,C0AD,C0AE,C0AF,C0BD,C0BE,C0BF,C0C0,C0C1,C0CC,C0CD,C0CE,C0CF,C0D0,C0DD,C0DE,C0DF,C0E0,C0E1,C0E2,C0ED,C0EE,C0EF,C0F0,C0F1,C0F2,C0F3,C0F4,C0FD,C0FE,C0FF,C10E,C10F,C111,C11E,C11F,C123,C12E,C12F,C13E,C13F,C14E,C14F,C15E,C15F,C16E,C16F,C17E,C17F,C18E,C18F,C19E,C19F,C1AE,C1AF,C1BE,C1BF,C1C1,C1C2,C1CC,C1CE,C1CF,C1DE,C1DF,C1E0,C1EE,C1EF,C1F0,C1F1,C1F2,C1FE,C1FF,C20E,C20F,C210,C21F,C222,C22F,C234,C23F,C24F,C25F,C26F,C27F,C28F,C29F,C2AF,C2BF,C2C2,C2C3,C2CC,C2CF,C2DF,C2E0,C2EF,C2F0,C2F1,C2FF,C30E,C30F,C31F,C321,C333,C345,C3C3,C3C4,C3CC,C3E0,C3F0,C3F1,C40E,C40F,C41F,C432,C444,C456,C4C4,C4C5,C4CC,C4E0,C4F0,C4F1,C50E,C50F,C51F,C543,C555,C567,C5C5,C5C6,C5CC,C5E0,C5F0,C5F1,C60E,C60F,C61F,C654,C666,C678,C6C6,C6C7,C6CC,C6E0,C6F0,C6F1,C70E,C70F,C71F,C765,C777,C789,C7C7,C7C8,C7CC,C7E0,C7F0,C7F1,C80E,C80F,C81F,C876,C888,C89A,C8C8,C8C9,C8CC,C8E0,C8F0,C8F1,C90E,C90F,C91F,C987,C999,C9AB,C9C9,C9CA,C9CC,C9E0,C9F0,C9F1,CA0E,CA0F,CA1F,CA98,CAAA,CABC,CACA,CACB,CACC,CAE0,CAF0,CAF1,CB0E,CB0F,CB1F,CBA9,CBAA,CBBA,CBBB,CBBC,CBCB,CBCC,CBCD,CBE0,CBF0,CBF1,CC0E,CC0F,CC1F,CCAA,CCBA,CCBB,CCBC,CCCA,CCCB,CCCC,CCCD,CCCE,CCDC,CCDD,CCDE,CCE0,CCEE,CCF0,CCF1,CD0E,CD0F,CD1F,CDCB,CDCC,CDCD,CDCE,CDDC,CDDD,CDDE,CDE0,CDEE,CDEF,CDF0,CDF1,CE0E,CE0F,CE1F,CECC,CECE,CECF,CEDC,CEE0,CEEE,CEF0,CEF1,CF0E,CF0F,CF1F,CFCC,CFCF,CFE0,CFED,CFF0,CFF1,CFFF,D000,D00D,D00E,D00F,D010,D012,D01D,D01E,D01F,D020,D02D,D02E,D02F,D030,D03D,D03E,D03F,D040,D04D,D04E,D04F,D050,D05D,D05E,D05F,D060,D06D,D06E,D06F,D070,D07D,D07E,D07F,D080,D08D,D08E,D08F,D090,D09D,D09E,D09F,D0A0,D0AD,D0AE,D0AF,D0B0,D0BD,D0BE,D0BF,D0C0,D0CD,D0CE,D0CF,D0D0,D0D1,D0DD,D0DE,D0DF,D0E0,D0E1,D0E2,D0E3,D0ED,D0EE,D0EF,D0F0,D0F1,D0F2,D0F3,D0F4,D0F5,D0FD,D0FE,D0FF,D100,D10E,D10F,D110,D111,D11E,D11F,D120,D123,D12E,D12F,D130,D13E,D13F,D140,D14E,D14F,D150,D15E,D15F,D160,D16E,D16F,D170,D17E,D17F,D180,D18E,D18F,D190,D19E,D19F,D1A0,D1AE,D1AF,D1B0,D1BE,D1BF,D1C0,D1CE,D1CF,D1D0,D1D1,D1D2,D1DD,D1DE,D1DF,D1E0,D1E1,D1EE,D1EF,D1F0,D1F1,D1F2,D1F3,D1FE,D1FF,D200,D20E,D20F,D210,D21F,D220,D222,D22F,D230,D234,D23F,D240,D24F,D250,D25F,D260,D26F,D270,D27F,D280,D28F,D290,D29F,D2A0,D2AF,D2B0,D2BF,D2C0,D2CF,D2D0,D2D2,D2D3,D2DD,D2DF,D2E0,D2EF,D2F0,D2F1,D2FF,D300,D30E,D30F,D310,D31F,D320,D321,D330,D333,D340,D345,D350,D360,D370,D380,D390,D3A0,D3B0,D3C0,D3D0,D3D3,D3D4,D3DD,D3E0,D3F0,D3F1,D400,D40E,D40F,D410,D41F,D420,D430,D432,D440,D444,D450,D456,D460,D470,D480,D490,D4A0,D4B0,D4C0,D4D0,D4D4,D4D5,D4DD,D4E0,D4F0,D4F1,D500,D50E,D50F,D510,D51F,D520,D530,D540,D543,D550,D555,D560,D567,D570,D580,D590,D5A0,D5B0,D5C0,D5D0,D5D5,D5D6,D5DD,D5E0,D5F0,D5F1,D600,D60E,D60F,D610,D61F,D620,D630,D640,D650,D654,D660,D666,D670,D678,D680,D690,D6A0,D6B0,D6C0,D6D0,D6D6,D6D7,D6DD,D6E0,D6F0,D6F1,D700,D70E,D70F,D710,D71F,D720,D730,D740,D750,D760,D765,D770,D777,D780,D789,D790,D7A0,D7B0,D7C0,D7D0,D7D7,D7D8,D7DD,D7E0,D7F0,D7F1,D800,D80E,D80F,D810,D81F,D820,D830,D840,D850,D860,D870,D876,D880,D888,D890,D89A,D8A0,D8B0,D8C0,D8D0,D8D8,D8D9,D8DD,D8E0,D8F0,D8F1,D900,D90E,D90F,D910,D91F,D920,D930,D940,D950,D960,D970,D980,D987,D990,D999,D9A0,D9AB,D9B0,D9C0,D9D0,D9D9,D9DA,D9DD,D9E0,D9F0,D9F1,DA00,DA0E,DA0F,DA10,DA1F,DA20,DA30,DA40,DA50,DA60,DA70,DA80,DA90,DA98,DAA0,DAAA,DAB0,DABC,DAC0,DAD0,DADA,DADB,DADD,DAE0,DAF0,DAF1,DB00,DB0E,DB0F,DB10,DB1F,DB20,DB30,DB40,DB50,DB60,DB70,DB80,DB90,DBA0,DBA9,DBB0,DBBB,DBC0,DBCD,DBD0,DBDB,DBDC,DBDD,DBE0,DBF0,DBF1,DC00,DC0E,DC0F,DC10,DC1F,DC20,DC30,DC40,DC50,DC60,DC70,DC80,DC90,DCA0,DCB0,DCBA,DCBB,DCC0,DCCB,DCCC,DCCD,DCD0,DCDC,DCDD,DCDE,DCE0,DCF0,DCF1,DD00,DD0E,DD0F,DD10,DD1F,DD20,DD30,DD40,DD50,DD60,DD70,DD80,DD90,DDA0,DDB0,DDBB,DDC0,DDCB,DDCC,DDCD,DDD0,DDDB,DDDC,DDDD,DDDE,DDDF,DDE0,DDED,DDEE,DDEF,DDF0,DDF1,DDFF,DE00,DE0E,DE0F,DE10,DE1F,DE20,DE30,DE40,DE50,DE60,DE70,DE80,DE90,DEA0,DEB0,DEC0,DED0,DEDC,DEDD,DEDE,DEDF,DEE0,DEED,DEEE,DEEF,DEF0,DEF1,DEFF,DF00,DF0E,DF0F,DF10,DF1F,DF20,DF30,DF40,DF50,DF60,DF70,DF80,DF90,DFA0,DFB0,DFC0,DFD0,DFDD,DFDF,DFE0,DFED,DFF0,DFF1,DFFF,E000,E001,E00D,E00E,E00F,E010,E011,E012,E01D,E01E,E01F,E020,E021,E02D,E02E,E02F,E030,E031,E03D,E03E,E03F,E040,E041,E04D,E04E,E04F,E050,E051,E05D,E05E,E05F,E060,E061,E06D,E06E,E06F,E070,E071,E07D,E07E,E07F,E080,E081,E08D,E08E,E08F,E090,E091,E09D,E09E,E09F,E0A0,E0A1,E0AD,E0AE,E0AF,E0B0,E0B1,E0BD,E0BE,E0BF,E0C0,E0C1,E0CD,E0CE,E0CF,E0D0,E0D1,E0D2,E0DD,E0DE,E0DF,E0E0,E0E1,E0E2,E0E3,E0E4,E0ED,E0EE,E0EF,E0F0,E0F1,E0F2,E0F3,E0F4,E0F5,E0F6,E0FD,E0FE,E0FF,E100,E101,E10E,E10F,E110,E111,E11E,E11F,E120,E121,E123,E12E,E12F,E130,E131,E13E,E13F,E140,E141,E14E,E14F,E150,E151,E15E,E15F,E160,E161,E16E,E16F,E170,E171,E17E,E17F,E180,E181,E18E,E18F,E190,E191,E19E,E19F,E1A0,E1A1,E1AE,E1AF,E1B0,E1B1,E1BE,E1BF,E1C0,E1C1,E1CE,E1CF,E1D0,E1D1,E1DE,E1DF,E1E0,E1E1,E1E2,E1EE,E1EF,E1F0,E1F1,E1F2,E1F3,E1F4,E1FE,E1FF,E200,E201,E20E,E20F,E210,E211,E21F,E220,E221,E222,E22F,E230,E231,E234,E23F,E240,E241,E24F,E250,E251,E25F,E260,E261,E26F,E270,E271,E27F,E280,E281,E28F,E290,E291,E29F,E2A0,E2A1,E2AF,E2B0,E2B1,E2BF,E2C0,E2C1,E2CF,E2D0,E2D1,E2DF,E2E0,E2E1,E2E2,E2E3,E2EE,E2EF,E2F0,E2F1,E2F2,E2FF,E300,E301,E30E,E30F,E310,E311,E31F,E320,E321,E330,E331,E333,E340,E341,E345,E350,E351,E360,E361,E370,E371,E380,E381,E390,E391,E3A0,E3A1,E3B0,E3B1,E3C0,E3C1,E3D0,E3D1,E3E0,E3E1,E3E3,E3E4,E3EE,E3F0,E3F1,E400,E401,E40E,E40F,E410,E411,E41F,E420,E421,E430,E431,E432,E440,E441,E444,E450,E451,E456,E460,E461,E470,E471,E480,E481,E490,E491,E4A0,E4A1,E4B0,E4B1,E4C0,E4C1,E4D0,E4D1,E4E0,E4E1,E4E4,E4E5,E4EE,E4F0,E4F1,E500,E501,E50E,E50F,E510,E511,E51F,E520,E521,E530,E531,E540,E541,E543,E550,E551,E555,E560,E561,E567,E570,E571,E580,E581,E590,E591,E5A0,E5A1,E5B0,E5B1,E5C0,E5C1,E5D0,E5D1,E5E0,E5E1,E5E5,E5E6,E5EE,E5F0,E5F1,E600,E601,E60E,E60F,E610,E611,E61F,E620,E621,E630,E631,E640,E641,E650,E651,E654,E660,E661,E666,E670,E671,E678,E680,E681,E690,E691,E6A0,E6A1,E6B0,E6B1,E6C0,E6C1,E6D0,E6D1,E6E0,E6E1,E6E6,E6E7,E6EE,E6F0,E6F1,E700,E701,E70E,E70F,E710,E711,E71F,E720,E721,E730,E731,E740,E741,E750,E751,E760,E761,E765,E770,E771,E777,E780,E781,E789,E790,E791,E7A0,E7A1,E7B0,E7B1,E7C0,E7C1,E7D0,E7D1,E7E0,E7E1,E7E7,E7E8,E7EE,E7F0,E7F1,E800,E801,E80E,E80F,E810,E811,E81F,E820,E821,E830,E831,E840,E841,E850,E851,E860,E861,E870,E871,E876,E880,E881,E888,E890,E891,E89A,E8A0,E8A1,E8B0,E8B1,E8C0,E8C1,E8D0,E8D1,E8E0,E8E1,E8E8,E8E9,E8EE,E8F0,E8F1,E900,E901,E90E,E90F,E910,E911,E91F,E920,E921,E930,E931,E940,E941,E950,E951,E960,E961,E970,E971,E980,E981,E987,E990,E991,E999,E9A0,E9A1,E9AB,E9B0,E9B1,E9C0,E9C1,E9D0,E9D1,E9E0,E9E1,E9E9,E9EA,E9EE,E9F0,E9F1,EA00,EA01,EA0E,EA0F,EA10,EA11,EA1F,EA20,EA21,EA30,EA31,EA40,EA41,EA50,EA51,EA60,EA61,EA70,EA71,EA80,EA81,EA90,EA91,EA98,EAA0,EAA1,EAAA,EAB0,EAB1,EABC,EAC0,EAC1,EAD0,EAD1,EAE0,EAE1,EAEA,EAEB,EAEE,EAF0,EAF1,EB00,EB01,EB0E,EB0F,EB10,EB11,EB1F,EB20,EB21,EB30,EB31,EB40,EB41,EB50,EB51,EB60,EB61,EB70,EB71,EB80,EB81,EB90,EB91,EBA0,EBA1,EBA9,EBB0,EBB1,EBBB,EBC0,EBC1,EBCD,EBD0,EBD1,EBE0,EBE1,EBEB,EBEC,EBEE,EBF0,EBF1,EC00,EC01,EC0E,EC0F,EC10,EC11,EC1F,EC20,EC21,EC30,EC31,EC40,EC41,EC50,EC51,EC60,EC61,EC70,EC71,EC80,EC81,EC90,EC91,ECA0,ECA1,ECB0,ECB1,ECBA,ECC0,ECC1,ECCC,ECD0,ECD1,ECDE,ECE0,ECE1,ECEC,ECED,ECEE,ECF0,ECF1,ED00,ED01,ED0E,ED0F,ED10,ED11,ED1F,ED20,ED21,ED30,ED31,ED40,ED41,ED50,ED51,ED60,ED61,ED70,ED71,ED80,ED81,ED90,ED91,EDA0,EDA1,EDB0,EDB1,EDC0,EDC1,EDCB,EDCC,EDD0,EDD1,EDDC,EDDD,EDDE,EDE0,EDE1,EDED,EDEE,EDEF,EDF0,EDF1,EE00,EE01,EE0E,EE0F,EE10,EE11,EE1F,EE20,EE21,EE30,EE31,EE40,EE41,EE50,EE51,EE60,EE61,EE70,EE71,EE80,EE81,EE90,EE91,EEA0,EEA1,EEB0,EEB1,EEC0,EEC1,EECC,EED0,EED1,EEDC,EEDD,EEDE,EEE0,EEE1,EEEC,EEED,EEEE,EEEF,EEF0,EEF1,EEFE,EEFF,EF00,EF01,EF0E,EF0F,EF10,EF11,EF1F,EF20,EF21,EF30,EF31,EF40,EF41,EF50,EF51,EF60,EF61,EF70,EF71,EF80,EF81,EF90,EF91,EFA0,EFA1,EFB0,EFB1,EFC0,EFC1,EFD0,EFD1,EFE0,EFE1,EFED,EFEE,EFEF,EFF0,EFF1,EFFE,EFFF,F000,F001,F002,F00D,F00E,F00F,F010,F011,F012,F01D,F01E,F01F,F020,F021,F022,F02D,F02E,F02F,F030,F031,F032,F03D,F03E,F03F,F040,F041,F042,F04D,F04E,F04F,F050,F051,F052,F05D,F05E,F05F,F060,F061,F062,F06D,F06E,F06F,F070,F071,F072,F07D,F07E,F07F,F080,F081,F082,F08D,F08E,F08F,F090,F091,F092,F09D,F09E,F09F,F0A0,F0A1,F0A2,F0AD,F0AE,F0AF,F0B0,F0B1,F0B2,F0BD,F0BE,F0BF,F0C0,F0C1,F0C2,F0CD,F0CE,F0CF,F0D0,F0D1,F0D2,F0D3,F0DD,F0DE,F0DF,F0E0,F0E1,F0E2,F0E3,F0E4,F0E5,F0ED,F0EE,F0EF,F0F0,F0F1,F0F2,F0F3,F0F4,F0F5,F0F6,F0F7,F0FD,F0FE,F0FF,F100,F101,F102,F10E,F10F,F110,F111,F112,F11E,F11F,F120,F121,F122,F123,F12E,F12F,F130,F131,F132,F13E,F13F,F140,F141,F142,F14E,F14F,F150,F151,F152,F15E,F15F,F160,F161,F162,F16E,F16F,F170,F171,F172,F17E,F17F,F180,F181,F182,F18E,F18F,F190,F191,F192,F19E,F19F,F1A0,F1A1,F1A2,F1AE,F1AF,F1B0,F1B1,F1B2,F1BE,F1BF,F1C0,F1C1,F1C2,F1CE,F1CF,F1D0,F1D1,F1D2,F1DE,F1DF,F1E0,F1E1,F1E2,F1E3,F1EE,F1EF,F1F0,F1F1,F1F2,F1F3,F1F4,F1F5,F1FE,F1FF,F200,F201,F202,F20E,F20F,F210,F211,F212,F21F,F220,F221,F222,F22F,F230,F231,F232,F234,F23F,F240,F241,F242,F24F,F250,F251,F252,F25F,F260,F261,F262,F26F,F270,F271,F272,F27F,F280,F281,F282,F28F,F290,F291,F292,F29F,F2A0,F2A1,F2A2,F2AF,F2B0,F2B1,F2B2,F2BF,F2C0,F2C1,F2C2,F2CF,F2D0,F2D1,F2D2,F2DF,F2E0,F2E1,F2E2,F2EF,F2F0,F2F1,F2F2,F2F3,F2FF,F300,F301,F302,F30E,F30F,F310,F311,F312,F31F,F320,F321,F322,F330,F331,F332,F333,F340,F341,F342,F345,F350,F351,F352,F360,F361,F362,F370,F371,F372,F380,F381,F382,F390,F391,F392,F3A0,F3A1,F3A2,F3B0,F3B1,F3B2,F3C0,F3C1,F3C2,F3D0,F3D1,F3D2,F3E0,F3E1,F3E2,F3F0,F3F1,F3F2,F3F3,F3F4,F3FF,F400,F401,F402,F40E,F40F,F410,F411,F412,F41F,F420,F421,F422,F430,F431,F432,F440,F441,F442,F444,F450,F451,F452,F456,F460,F461,F462,F470,F471,F472,F480,F481,F482,F490,F491,F492,F4A0,F4A1,F4A2,F4B0,F4B1,F4B2,F4C0,F4C1,F4C2,F4D0,F4D1,F4D2,F4E0,F4E1,F4E2,F4F0,F4F1,F4F2,F4F4,F4F5,F4FF,F500,F501,F502,F50E,F50F,F510,F511,F512,F51F,F520,F521,F522,F530,F531,F532,F540,F541,F542,F543,F550,F551,F552,F555,F560,F561,F562,F567,F570,F571,F572,F580,F581,F582,F590,F591,F592,F5A0,F5A1,F5A2,F5B0,F5B1,F5B2,F5C0,F5C1,F5C2,F5D0,F5D1,F5D2,F5E0,F5E1,F5E2,F5F0,F5F1,F5F2,F5F5,F5F6,F5FF,F600,F601,F602,F60E,F60F,F610,F611,F612,F61F,F620,F621,F622,F630,F631,F632,F640,F641,F642,F650,F651,F652,F654,F660,F661,F662,F666,F670,F671,F672,F678,F680,F681,F682,F690,F691,F692,F6A0,F6A1,F6A2,F6B0,F6B1,F6B2,F6C0,F6C1,F6C2,F6D0,F6D1,F6D2,F6E0,F6E1,F6E2,F6F0,F6F1,F6F2,F6F6,F6F7,F6FF,F700,F701,F702,F70E,F70F,F710,F711,F712,F71F,F720,F721,F722,F730,F731,F732,F740,F741,F742,F750,F751,F752,F760,F761,F762,F765,F770,F771,F772,F777,F780,F781,F782,F789,F790,F791,F792,F7A0,F7A1,F7A2,F7B0,F7B1,F7B2,F7C0,F7C1,F7C2,F7D0,F7D1,F7D2,F7E0,F7E1,F7E2,F7F0,F7F1,F7F2,F7F7,F7F8,F7FF,F800,F801,F802,F80E,F80F,F810,F811,F812,F81F,F820,F821,F822,F830,F831,F832,F840,F841,F842,F850,F851,F852,F860,F861,F862,F870,F871,F872,F876,F880,F881,F882,F888,F890,F891,F892,F89A,F8A0,F8A1,F8A2,F8B0,F8B1,F8B2,F8C0,F8C1,F8C2,F8D0,F8D1,F8D2,F8E0,F8E1,F8E2,F8F0,F8F1,F8F2,F8F8,F8F9,F8FF,F900,F901,F902,F90E,F90F,F910,F911,F912,F91F,F920,F921,F922,F930,F931,F932,F940,F941,F942,F950,F951,F952,F960,F961,F962,F970,F971,F972,F980,F981,F982,F987,F990,F991,F992,F999,F9A0,F9A1,F9A2,F9AB,F9B0,F9B1,F9B2,F9C0,F9C1,F9C2,F9D0,F9D1,F9D2,F9E0,F9E1,F9E2,F9F0,F9F1,F9F2,F9F9,F9FA,F9FF,FA00,FA01,FA02,FA0E,FA0F,FA10,FA11,FA12,FA1F,FA20,FA21,FA22,FA30,FA31,FA32,FA40,FA41,FA42,FA50,FA51,FA52,FA60,FA61,FA62,FA70,FA71,FA72,FA80,FA81,FA82,FA90,FA91,FA92,FA98,FAA0,FAA1,FAA2,FAAA,FAB0,FAB1,FAB2,FABC,FAC0,FAC1,FAC2,FAD0,FAD1,FAD2,FAE0,FAE1,FAE2,FAF0,FAF1,FAF2,FAFA,FAFB,FAFF,FB00,FB01,FB02,FB0E,FB0F,FB10,FB11,FB12,FB1F,FB20,FB21,FB22,FB30,FB31,FB32,FB40,FB41,FB42,FB50,FB51,FB52,FB60,FB61,FB62,FB70,FB71,FB72,FB80,FB81,FB82,FB90,FB91,FB92,FBA0,FBA1,FBA2,FBA9,FBB0,FBB1,FBB2,FBBB,FBC0,FBC1,FBC2,FBCD,FBD0,FBD1,FBD2,FBE0,FBE1,FBE2,FBF0,FBF1,FBF2,FBFB,FBFC,FBFF,FC00,FC01,FC02,FC0E,FC0F,FC10,FC11,FC12,FC1F,FC20,FC21,FC22,FC30,FC31,FC32,FC40,FC41,FC42,FC50,FC51,FC52,FC60,FC61,FC62,FC70,FC71,FC72,FC80,FC81,FC82,FC90,FC91,FC92,FCA0,FCA1,FCA2,FCB0,FCB1,FCB2,FCBA,FCC0,FCC1,FCC2,FCCC,FCD0,FCD1,FCD2,FCDE,FCE0,FCE1,FCE2,FCF0,FCF1,FCF2,FCFC,FCFD,FCFF,FD00,FD01,FD02,FD0E,FD0F,FD10,FD11,FD12,FD1F,FD20,FD21,FD22,FD30,FD31,FD32,FD40,FD41,FD42,FD50,FD51,FD52,FD60,FD61,FD62,FD70,FD71,FD72,FD80,FD81,FD82,FD90,FD91,FD92,FDA0,FDA1,FDA2,FDB0,FDB1,FDB2,FDC0,FDC1,FDC2,FDCB,FDD0,FDD1,FDD2,FDDD,FDE0,FDE1,FDE2,FDEF,FDF0,FDF1,FDF2,FDFD,FDFE,FDFF,FE00,FE01,FE02,FE0E,FE0F,FE10,FE11,FE12,FE1F,FE20,FE21,FE22,FE30,FE31,FE32,FE40,FE41,FE42,FE50,FE51,FE52,FE60,FE61,FE62,FE70,FE71,FE72,FE80,FE81,FE82,FE90,FE91,FE92,FEA0,FEA1,FEA2,FEB0,FEB1,FEB2,FEC0,FEC1,FEC2,FED0,FED1,FED2,FEDC,FEDD,FEE0,FEE1,FEE2,FEED,FEEE,FEEF,FEF0,FEF1,FEF2,FEFE,FEFF,FF00,FF01,FF02,FF0E,FF0F,FF10,FF11,FF12,FF1F,FF20,FF21,FF22,FF30,FF31,FF32,FF40,FF41,FF42,FF50,FF51,FF52,FF60,FF61,FF62,FF70,FF71,FF72,FF80,FF81,FF82,FF90,FF91,FF92,FFA0,FFA1,FFA2,FFB0,FFB1,FFB2,FFC0,FFC1,FFC2,FFD0,FFD1,FFD2,FFDD,FFE0,FFE1,FFE2,FFED,FFEE,FFEF,FFF0,FFF1,FFF2,FFFD,FFFE,FFFF
     // RISKY: DOES NOT BEGIN WITH (5444 or 2893 non-previously matched) 0003,0004,0005,0006,0013,0014,0015,0016,0020,0021,0023,0024,0025,0026,0030,0031,0032,0033,0034,0035,0036,0042,0043,0044,0045,0046,0054,0055,0056,0066,0103,0104,0113,0114,0115,0116,0120,0121,0124,0125,0126,0130,0131,0132,0133,0134,0135,0136,0142,0143,0144,0145,0146,0154,0155,0156,0166,0201,0211,0212,0213,0214,0220,0221,0223,0224,0225,0226,0230,0231,0232,0233,0235,0236,0242,0243,0244,0245,0246,0254,0255,0256,0266,0310,0311,0312,0320,0322,0323,0324,0330,0331,0332,0334,0335,0336,0342,0343,0344,0346,0354,0355,0356,0366,0422,0433,0434,0442,0443,0445,0446,0454,0455,0466,0544,0554,0556,0566,090C,090D,0A0C,0A0D,0A1C,0A1D,0B08,0B09,0B0A,0B0D,0B1A,0B1B,0B1C,0B1D,0B2C,0B2D,0C06,0C07,0C08,0C09,0C0A,0C0B,0C18,0C19,0C1A,0C1B,0C1C,0C1D,0C2A,0C2B,0C2C,0C2D,0C3C,0C3D,0D04,0D05,0D06,0D07,0D08,0D09,0D0A,0D0B,0D16,0D17,0D18,0D19,0D1A,0D1B,0D1C,0D1D,0D28,0D29,0D2A,0D2B,0D2C,0D2D,0D3A,0D3B,0D3C,0D3D,0D4C,0D4D,0E02,0E03,0E04,0E05,0E06,0E07,0E08,0E09,0E14,0E15,0E16,0E17,0E18,0E19,0E1A,0E1B,0E26,0E27,0E28,0E29,0E2A,0E2B,0E2C,0E2D,0E38,0E39,0E3A,0E3B,0E3C,0E3D,0E4A,0E4B,0E4C,0E4D,0E5C,0E5D,0F01,0F02,0F03,0F04,0F05,0F06,0F07,0F10,0F12,0F13,0F14,0F15,0F16,0F17,0F18,0F19,0F20,0F24,0F25,0F26,0F27,0F28,0F29,0F2A,0F2B,0F30,0F36,0F37,0F38,0F39,0F3A,0F3B,0F3C,0F3D,0F40,0F48,0F49,0F4A,0F4B,0F4C,0F4D,0F50,0F5A,0F5B,0F5C,0F5D,0F60,0F6C,0F6D,0F70,0F80,0F90,0FA0,0FB0,0FC0,0FD0,1002,1003,1004,1005,1013,1014,1015,1020,1021,1022,1023,1024,1025,1031,1032,1033,1034,1035,1043,1044,1045,1055,1102,1103,1104,1105,1114,1115,1116,1117,1120,1124,1125,1126,1127,1130,1131,1132,1134,1135,1136,1137,1141,1142,1143,1144,1145,1146,1147,1153,1154,1155,1156,1157,1165,1166,1167,1177,1200,1201,1202,1203,1214,1215,1220,1224,1225,1226,1227,1230,1231,1232,1235,1236,1237,1241,1242,1243,1244,1245,1246,1247,1253,1254,1255,1256,1257,1265,1266,1267,1277,1300,1301,1310,1312,1320,1322,1323,1324,1325,1330,1331,1332,1334,1335,1336,1337,1341,1342,1343,1344,1346,1347,1353,1354,1355,1356,1357,1365,1366,1367,1377,1421,1422,1423,1431,1433,1434,1435,1441,1442,1443,1445,1446,1447,1453,1454,1455,1457,1465,1466,1467,1477,1533,1544,1545,1553,1554,1556,1557,1565,1566,1577,1655,1665,1667,1677,190D,1A0B,1A0C,1A0D,1A1D,1A1E,1B09,1B0A,1B0B,1B0C,1B0D,1B1D,1B1E,1B2D,1B2E,1C07,1C08,1C09,1C0A,1C0B,1C0C,1C0D,1C19,1C1A,1C1B,1C1E,1C2B,1C2C,1C2D,1C2E,1C3D,1C3E,1D05,1D06,1D07,1D08,1D09,1D0A,1D0B,1D0C,1D17,1D18,1D19,1D1A,1D1B,1D1C,1D29,1D2A,1D2B,1D2C,1D2D,1D2E,1D3B,1D3C,1D3D,1D3E,1D4D,1D4E,1E03,1E04,1E05,1E06,1E07,1E08,1E09,1E0A,1E15,1E16,1E17,1E18,1E19,1E1A,1E1B,1E1C,1E27,1E28,1E29,1E2A,1E2B,1E2C,1E2D,1E2E,1E39,1E3A,1E3B,1E3C,1E3D,1E3E,1E4B,1E4C,1E4D,1E4E,1E5D,1E5E,1F01,1F02,1F03,1F04,1F05,1F06,1F07,1F08,1F13,1F14,1F15,1F16,1F17,1F18,1F19,1F1A,1F25,1F26,1F27,1F28,1F29,1F2A,1F2B,1F2C,1F37,1F38,1F39,1F3A,1F3B,1F3C,1F3D,1F3E,1F49,1F4A,1F4B,1F4C,1F4D,1F4E,1F5B,1F5C,1F5D,1F5E,1F6D,1F6E,2001,2002,2003,2004,2010,2011,2013,2014,2023,2024,2032,2033,2034,2044,20F2,2101,2102,2103,2104,2113,2114,2115,2116,2120,2124,2125,2126,2130,2131,2132,2133,2134,2135,2136,2142,2143,2144,2145,2146,2154,2155,2156,2166,2201,2202,2203,2204,2213,2214,2215,2216,2225,2226,2227,2228,2230,2231,2235,2236,2237,2238,2240,2241,2242,2243,2245,2246,2247,2248,2252,2253,2254,2255,2256,2257,2258,2264,2265,2266,2267,2268,2276,2277,2278,2288,2300,2301,2302,2310,2311,2312,2313,2314,2320,2325,2326,2330,2331,2335,2336,2337,2338,2340,2341,2342,2343,2346,2347,2348,2352,2353,2354,2355,2356,2357,2358,2364,2365,2366,2367,2368,2376,2377,2378,2388,2400,2410,2411,2412,2420,2421,2423,2430,2431,2433,2434,2435,2436,2440,2441,2442,2443,2445,2446,2447,2448,2452,2453,2454,2455,2457,2458,2464,2465,2466,2467,2468,2476,2477,2478,2488,2532,2533,2534,2542,2544,2545,2546,2552,2553,2554,2556,2557,2558,2564,2565,2566,2568,2576,2577,2578,2588,2644,2655,2656,2664,2665,2667,2668,2676,2677,2688,2766,2776,2778,2788,2A0C,2A0D,2A1E,2B0A,2B0B,2B0C,2B0D,2B1C,2B1D,2B1E,2B2E,2B2F,2C08,2C09,2C0A,2C0B,2C0C,2C0D,2C1A,2C1B,2C1C,2C1D,2C1E,2C2E,2C2F,2C3E,2C3F,2D06,2D07,2D08,2D09,2D0A,2D0B,2D0C,2D0D,2D18,2D19,2D1A,2D1B,2D1C,2D1D,2D1E,2D2A,2D2B,2D2C,2D2F,2D3C,2D3D,2D3E,2D3F,2D4E,2D4F,2E04,2E05,2E06,2E07,2E08,2E09,2E0A,2E0B,2E16,2E17,2E18,2E19,2E1A,2E1B,2E1C,2E1D,2E28,2E29,2E2A,2E2B,2E2C,2E2D,2E3A,2E3B,2E3C,2E3D,2E3E,2E3F,2E4C,2E4D,2E4E,2E4F,2E5E,2E5F,2F02,2F03,2F04,2F05,2F06,2F07,2F08,2F09,2F14,2F15,2F16,2F17,2F18,2F19,2F1A,2F1B,2F26,2F27,2F28,2F29,2F2A,2F2B,2F2C,2F2D,2F38,2F39,2F3A,2F3B,2F3C,2F3D,2F3E,2F3F,2F4A,2F4B,2F4C,2F4D,2F4E,2F4F,2F5C,2F5D,2F5E,2F5F,2F6E,2F6F,3001,3002,3003,3010,3011,3013,3021,3022,3023,30E1,30F2,30F3,3100,3101,3102,3103,3110,3112,3113,3114,3115,3120,3121,3122,3124,3125,3134,3135,3143,3144,3145,3155,3200,3201,3202,3203,3212,3213,3214,3215,3220,3224,3225,3226,3227,3230,3231,3235,3236,3237,3241,3242,3243,3244,3245,3246,3247,3253,3254,3255,3256,3257,3265,3266,3267,3277,3300,3301,3302,3303,3310,3312,3313,3314,3315,3320,3324,3325,3326,3327,3330,3336,3337,3338,3339,3340,3341,3342,3346,3347,3348,3349,3351,3352,3353,3354,3356,3357,3358,3359,3363,3364,3365,3366,3367,3368,3369,3375,3376,3377,3378,3379,3387,3388,3389,3399,3400,3401,3410,3411,3412,3413,3420,3421,3422,3423,3424,3425,3430,3431,3436,3437,3440,3441,3442,3446,3447,3448,3449,3451,3452,3453,3454,3457,3458,3459,3463,3464,3465,3466,3467,3468,3469,3475,3476,3477,3478,3479,3487,3488,3489,3499,3511,3521,3522,3523,3531,3532,3534,3541,3542,3544,3545,3546,3547,3551,3552,3553,3554,3556,3557,3558,3559,3563,3564,3565,3566,3568,3569,3575,3576,3577,3578,3579,3587,3588,3589,3599,3643,3644,3645,3653,3655,3656,3657,3663,3664,3665,3667,3668,3669,3675,3676,3677,3679,3687,3688,3689,3699,3755,3766,3767,3775,3776,3778,3779,3787,3788,3799,3877,3887,3889,3899,3A0D,3B0B,3B0C,3B0D,3B1D,3B1E,3B2F,3C09,3C0A,3C0B,3C0C,3C0D,3C1B,3C1C,3C1D,3C1E,3C2D,3C2E,3C2F,3C3F,3D07,3D08,3D09,3D0A,3D0B,3D0C,3D0D,3D19,3D1A,3D1B,3D1C,3D1D,3D1E,3D2B,3D2C,3D2D,3D2E,3D2F,3D3F,3D4F,3E05,3E06,3E07,3E08,3E09,3E0A,3E0B,3E0C,3E17,3E18,3E19,3E1A,3E1B,3E1C,3E1D,3E1E,3E29,3E2A,3E2B,3E2C,3E2D,3E2E,3E2F,3E3B,3E3C,3E3D,3E4D,3E4E,3E4F,3E5F,3F03,3F04,3F05,3F06,3F07,3F08,3F09,3F0A,3F15,3F16,3F17,3F18,3F19,3F1A,3F1B,3F1C,3F27,3F28,3F29,3F2A,3F2B,3F2C,3F2D,3F2E,3F39,3F3A,3F3B,3F3C,3F3D,3F3E,3F4B,3F4C,3F4D,3F4E,3F4F,3F5D,3F5E,3F5F,3F6F,4001,4002,4010,4011,4022,40D0,40E1,40E2,40F2,40F3,40F4,4100,4101,4102,4110,4112,4113,4114,4120,4121,4122,4124,4132,4133,4134,41F2,4200,4201,4202,4211,4212,4213,4214,4220,4221,4223,4224,4225,4226,4230,4231,4232,4233,4235,4236,4245,4246,4254,4255,4256,4266,4300,4301,4302,4310,4311,4312,4313,4314,4320,4323,4324,4325,4326,4330,4331,4335,4336,4337,4338,4340,4341,4342,4346,4347,4348,4352,4353,4354,4355,4356,4357,4358,4364,4365,4366,4367,4368,4376,4377,4378,4388,4400,4401,4402,4410,4411,4412,4413,4414,4420,4421,4423,4424,4425,4426,4430,4431,4435,4436,4437,4438,4440,4441,4447,4448,4449,444A,4450,4451,4452,4453,4457,4458,4459,445A,4462,4463,4464,4465,4467,4468,4469,446A,4474,4475,4476,4477,4478,4479,447A,4486,4487,4488,4489,448A,4498,4499,449A,44AA,4500,4510,4511,4512,4520,4521,4522,4523,4524,4530,4531,4532,4533,4534,4535,4536,4540,4541,4542,4547,4548,4550,4551,4552,4553,4557,4558,4559,455A,4562,4563,4564,4565,4568,4569,456A,4574,4575,4576,4577,4578,4579,457A,4586,4587,4588,4589,458A,4598,4599,459A,45AA,4622,4632,4633,4634,4642,4643,4645,4652,4653,4655,4656,4657,4658,4662,4663,4664,4665,4667,4668,4669,466A,4674,4675,4676,4677,4679,467A,4686,4687,4688,4689,468A,4698,4699,469A,46AA,4754,4755,4756,4764,4766,4767,4768,4774,4775,4776,4778,4779,477A,4786,4787,4788,478A,4798,4799,479A,47AA,4866,4877,4878,4886,4887,4889,488A,4898,4899,48AA,4988,4998,499A,49AA,4B0C,4B0D,4B1E,4C0A,4C0B,4C0C,4C0D,4C1C,4C1D,4C1E,4C2E,4C2F,4D08,4D09,4D0A,4D0B,4D0C,4D0D,4D1A,4D1B,4D1C,4D1D,4D1E,4D2C,4D2D,4D2E,4D2F,4D3E,4D3F,4E06,4E07,4E08,4E09,4E0A,4E0B,4E0C,4E0D,4E18,4E19,4E1A,4E1B,4E1C,4E1D,4E1E,4E2A,4E2B,4E2C,4E2D,4E2E,4E2F,4E3C,4E3D,4E3E,4E3F,4F04,4F05,4F06,4F07,4F08,4F09,4F0A,4F0B,4F16,4F17,4F18,4F19,4F1A,4F1B,4F1C,4F1D,4F28,4F29,4F2A,4F2B,4F2C,4F2D,4F2E,4F2F,4F3A,4F3B,4F3C,4F3D,4F3E,4F3F,4F4C,4F4D,4F4E,4F5E,4F5F,5001,5011,50D0,50D1,50E1,50E2,50E3,50F2,50F3,50F4,50F5,5100,5101,5110,5112,5113,5121,5122,5133,51E1,51F2,51F3,5200,5201,5211,5212,5213,5220,5221,5223,5224,5225,5231,5232,5233,5235,5243,5244,5245,5300,5301,5310,5311,5312,5313,5320,5322,5323,5324,5325,5330,5331,5332,5334,5335,5336,5337,5341,5342,5343,5344,5346,5347,5356,5357,5365,5366,5367,5377,5400,5401,5410,5411,5412,5413,5420,5421,5422,5423,5424,5425,5430,5431,5434,5435,5436,5437,5440,5441,5442,5446,5447,5448,5449,5451,5452,5453,5457,5458,5459,5463,5464,5465,5466,5467,5468,5469,5475,5476,5477,5478,5479,5487,5488,5489,5499,5500,5501,5510,5511,5512,5513,5520,5521,5522,5523,5524,5525,5530,5531,5532,5534,5535,5536,5537,5540,5541,5542,5546,5547,5548,5549,5550,5551,5552,5558,5559,555A,555B,5561,5562,5563,5564,5568,5569,556A,556B,5573,5574,5575,5576,5578,5579,557A,557B,5585,5586,5587,5588,5589,558A,558B,5597,5598,5599,559A,559B,55A9,55AA,55AB,55BB,5611,5621,5622,5623,5631,5632,5633,5634,5635,5641,5642,5643,5644,5645,5646,5647,5651,5652,5653,5658,5659,5661,5662,5663,5664,5668,5669,566A,566B,5673,5674,5675,5676,5679,567A,567B,5685,5686,5687,5688,5689,568A,568B,5697,5698,5699,569A,569B,56A9,56AA,56AB,56BB,5733,5743,5744,5745,5753,5754,5756,5763,5764,5766,5767,5768,5769,5773,5774,5775,5776,5778,5779,577A,577B,5785,5786,5787,5788,578A,578B,5797,5798,5799,579A,579B,57A9,57AA,57AB,57BB,5865,5866,5867,5875,5877,5878,5879,5885,5886,5887,5889,588A,588B,5897,5898,5899,589B,58A9,58AA,58AB,58BB,5977,5988,5989,5997,5998,599A,599B,59A9,59AA,59BB,5A99,5AA9,5AAB,5ABB,5B0D,5C0B,5C0C,5C0D,5C1D,5C1E,5C2F,5D09,5D0A,5D0B,5D0C,5D0D,5D1B,5D1C,5D1D,5D1E,5D2D,5D2E,5D2F,5D3F,5E07,5E08,5E09,5E0A,5E0B,5E0C,5E0D,5E19,5E1A,5E1B,5E1C,5E1D,5E1E,5E2B,5E2C,5E2D,5E2E,5E2F,5E3D,5E3E,5E3F,5E4F,5F05,5F06,5F07,5F08,5F09,5F0A,5F0B,5F0C,5F17,5F18,5F19,5F1A,5F1B,5F1C,5F1D,5F1E,5F29,5F2A,5F2B,5F2C,5F2D,5F2E,5F2F,5F3B,5F3C,5F3D,5F3E,5F3F,5F4D,5F4E,5F4F,60C0,60D0,60D1,60D2,60E1,60E2,60E3,60E4,60F2,60F3,60F4,60F5,60F6,6100,6110,6112,6122,61D0,61E1,61E2,61F2,61F3,61F4,6200,6211,6212,6220,6221,6223,6224,6232,6233,6244,62F2,6300,6310,6311,6312,6320,6322,6323,6324,6330,6331,6332,6334,6335,6336,6342,6343,6344,6346,6354,6355,6356,6400,6410,6411,6412,6420,6421,6422,6423,6424,6430,6431,6433,6434,6435,6436,6440,6441,6442,6443,6445,6446,6447,6448,6452,6453,6454,6455,6457,6458,6467,6468,6476,6477,6478,6488,6500,6510,6511,6512,6520,6521,6522,6523,6524,6530,6531,6532,6533,6534,6535,6536,6540,6541,6542,6545,6546,6547,6548,6550,6551,6552,6553,6557,6558,6559,655A,6562,6563,6564,6568,6569,656A,6574,6575,6576,6577,6578,6579,657A,6586,6587,6588,6589,658A,6598,6599,659A,65AA,6600,6610,6611,6612,6620,6621,6622,6623,6624,6630,6631,6632,6633,6634,6635,6636,6640,6641,6642,6643,6645,6646,6647,6648,6650,6651,6652,6653,6657,6658,6659,665A,6660,6661,6662,6663,6669,666A,666B,666C,6672,6673,6674,6675,6679,667A,667B,667C,6684,6685,6686,6687,6689,668A,668B,668C,6696,6697,6698,6699,669A,669B,669C,66A8,66A9,66AA,66AB,66AC,66BA,66BB,66BC,66CC,6722,6732,6733,6734,6742,6743,6744,6745,6746,6752,6753,6754,6755,6756,6757,6758,6762,6763,6764,6769,676A,6772,6773,6774,6775,6779,677A,677B,677C,6784,6785,6786,6787,678A,678B,678C,6796,6797,6798,6799,679A,679B,679C,67A8,67A9,67AA,67AB,67AC,67BA,67BB,67BC,67CC,6844,6854,6855,6856,6864,6865,6867,6874,6875,6877,6878,6879,687A,6884,6885,6886,6887,6889,688A,688B,688C,6896,6897,6898,6899,689B,689C,68A8,68A9,68AA,68AB,68AC,68BA,68BB,68BC,68CC,6976,6977,6978,6986,6988,6989,698A,6996,6997,6998,699A,699B,699C,69A8,69A9,69AA,69AC,69BA,69BB,69BC,69CC,6A88,6A99,6A9A,6AA8,6AA9,6AAB,6AAC,6ABA,6ABB,6ACC,6BAA,6BBA,6BBC,6BCC,6C0C,6C0D,6C1E,6D0A,6D0B,6D0C,6D0D,6D1C,6D1D,6D1E,6D2E,6D2F,6E08,6E09,6E0A,6E0B,6E0C,6E0D,6E1A,6E1B,6E1C,6E1D,6E1E,6E2C,6E2D,6E2E,6E2F,6E3E,6E3F,6F06,6F07,6F08,6F09,6F0A,6F0B,6F0C,6F0D,6F18,6F19,6F1A,6F1B,6F1C,6F1D,6F1E,6F2A,6F2B,6F2C,6F2D,6F2E,6F2F,6F3C,6F3D,6F3E,6F3F,6F4E,6F4F,70C0,70C1,70D0,70D1,70D2,70D3,70E1,70E2,70E3,70E4,70E5,70F2,70F3,70F4,70F5,70F6,70F7,71D0,71D1,71E1,71E2,71E3,71F2,71F3,71F4,71F5,7211,7221,7223,7233,72E1,72F2,72F3,7311,7322,7323,7331,7332,7334,7335,7343,7344,7355,7411,7421,7422,7423,7431,7433,7434,7435,7441,7442,7443,7445,7446,7447,7453,7454,7455,7457,7465,7466,7467,7511,7521,7522,7523,7531,7532,7533,7534,7535,7541,7542,7544,7545,7546,7547,7551,7552,7553,7554,7556,7557,7558,7559,7563,7564,7565,7566,7568,7569,7578,7579,7587,7588,7589,7599,7611,7621,7622,7623,7631,7632,7633,7634,7635,7641,7642,7643,7644,7645,7646,7647,7651,7652,7653,7656,7657,7658,7659,7661,7662,7663,7664,7668,7669,766A,766B,7673,7674,7675,7679,767A,767B,7685,7686,7687,7688,7689,768A,768B,7697,7698,7699,769A,769B,76A9,76AA,76AB,76BB,7711,7721,7722,7723,7731,7732,7733,7734,7735,7741,7742,7743,7744,7745,7746,7747,7751,7752,7753,7754,7756,7757,7758,7759,7761,7762,7763,7764,7768,7769,776A,776B,7771,7772,7773,7774,777A,777B,777C,777D,7783,7784,7785,7786,778A,778B,778C,778D,7795,7796,7797,7798,779A,779B,779C,779D,77A7,77A8,77A9,77AA,77AB,77AC,77AD,77B9,77BA,77BB,77BC,77BD,77CB,77CC,77CD,77DD,7833,7843,7844,7845,7853,7854,7855,7856,7857,7863,7864,7865,7866,7867,7868,7869,7873,7874,7875,787A,787B,7883,7884,7885,7886,788A,788B,788C,788D,7895,7896,7897,7898,789B,789C,789D,78A7,78A8,78A9,78AA,78AB,78AC,78AD,78B9,78BA,78BB,78BC,78BD,78CB,78CC,78CD,78DD,7955,7965,7966,7967,7975,7976,7978,7985,7986,7988,7989,798A,798B,7995,7996,7997,7998,799A,799B,799C,799D,79A7,79A8,79A9,79AA,79AC,79AD,79B9,79BA,79BB,79BC,79BD,79CB,79CC,79CD,79DD,7A87,7A88,7A89,7A97,7A99,7A9A,7A9B,7AA7,7AA8,7AA9,7AAB,7AAC,7AAD,7AB9,7ABA,7ABB,7ABD,7ACB,7ACC,7ACD,7ADD,7B99,7BAA,7BAB,7BB9,7BBA,7BBC,7BBD,7BCB,7BCC,7BDD,7C0D,7CBB,7CCB,7CCD,7CDD,7D0B,7D0C,7D0D,7D1D,7D1E,7D2F,7E09,7E0A,7E0B,7E0C,7E0D,7E1B,7E1C,7E1D,7E1E,7E2D,7E2E,7E2F,7E3F,7F07,7F08,7F09,7F0A,7F0B,7F0C,7F0D,7F19,7F1A,7F1B,7F1C,7F1D,7F1E,7F2B,7F2C,7F2D,7F2E,7F2F,7F3D,7F3E,7F3F,7F4F,80B0,80C0,80C1,80C2,80D0,80D1,80D2,80D3,80D4,80E1,80E2,80E3,80E4,80E5,80E6,80F2,80F3,80F4,80F5,80F6,80F7,80F8,81C0,81D0,81D1,81D2,81E1,81E2,81E3,81E4,81F2,81F3,81F4,81F5,81F6,82D0,82E1,82E2,82F2,82F3,82F4,8322,8332,8334,8344,83F2,8422,8433,8434,8442,8443,8445,8446,8454,8455,8466,8522,8532,8533,8534,8542,8544,8545,8546,8552,8553,8554,8556,8557,8558,8564,8565,8566,8568,8576,8577,8578,8622,8632,8633,8634,8642,8643,8644,8645,8646,8652,8653,8655,8656,8657,8658,8662,8663,8664,8665,8667,8668,8669,866A,8674,8675,8676,8677,8679,867A,8689,868A,8698,8699,869A,86AA,8722,8732,8733,8734,8742,8743,8744,8745,8746,8752,8753,8754,8755,8756,8757,8758,8762,8763,8764,8767,8768,8769,876A,8772,8773,8774,8775,8779,877A,877B,877C,8784,8785,8786,878A,878B,878C,8796,8797,8798,8799,879A,879B,879C,87A8,87A9,87AA,87AB,87AC,87BA,87BB,87BC,87CC,8822,8832,8833,8834,8842,8843,8844,8845,8846,8852,8853,8854,8855,8856,8857,8858,8862,8863,8864,8865,8867,8868,8869,886A,8872,8873,8874,8875,8879,887A,887B,887C,8882,8883,8884,8885,888B,888C,888D,888E,8894,8895,8896,8897,889B,889C,889D,889E,88A6,88A7,88A8,88A9,88AB,88AC,88AD,88AE,88B8,88B9,88BA,88BB,88BC,88BD,88BE,88CA,88CB,88CC,88CD,88CE,88DC,88DD,88DE,88EE,8944,8954,8955,8956,8964,8965,8966,8967,8968,8974,8975,8976,8977,8978,8979,897A,8984,8985,8986,898B,898C,8994,8995,8996,8997,899B,899C,899D,899E,89A6,89A7,89A8,89A9,89AC,89AD,89AE,89B8,89B9,89BA,89BB,89BC,89BD,89BE,89CA,89CB,89CC,89CD,89CE,89DC,89DD,89DE,89EE,8A66,8A76,8A77,8A78,8A86,8A87,8A89,8A96,8A97,8A99,8A9A,8A9B,8A9C,8AA6,8AA7,8AA8,8AA9,8AAB,8AAC,8AAD,8AAE,8AB8,8AB9,8ABA,8ABB,8ABD,8ABE,8ACA,8ACB,8ACC,8ACD,8ACE,8ADC,8ADD,8ADE,8AEE,8B98,8B99,8B9A,8BA8,8BAA,8BAB,8BAC,8BB8,8BB9,8BBA,8BBC,8BBD,8BBE,8BCA,8BCB,8BCC,8BCE,8BDC,8BDD,8BDE,8BEE,8CAA,8CBB,8CBC,8CCA,8CCB,8CCD,8CCE,8CDC,8CDD,8CEE,8D0C,8D0D,8D1E,8DCC,8DDC,8DDE,8DEE,8E0A,8E0B,8E0C,8E0D,8E1C,8E1D,8E1E,8E2E,8E2F,8F08,8F09,8F0A,8F0B,8F0C,8F0D,8F1A,8F1B,8F1C,8F1D,8F1E,8F2C,8F2D,8F2E,8F2F,8F3E,8F3F,90B0,90B1,90C0,90C1,90C2,90C3,90D0,90D1,90D2,90D3,90D4,90D5,90E1,90E2,90E3,90E4,90E5,90E6,90E7,90F2,90F3,90F4,90F5,90F6,90F7,90F8,90F9,91C0,91C1,91D0,91D1,91D2,91D3,91E1,91E2,91E3,91E4,91E5,91F2,91F3,91F4,91F5,91F6,91F7,92D0,92D1,92E1,92E2,92E3,92F2,92F3,92F4,92F5,93E1,93F2,93F3,9433,9443,9445,9455,9533,9544,9545,9553,9554,9556,9557,9565,9566,9577,9633,9643,9644,9645,9653,9655,9656,9657,9663,9664,9665,9667,9668,9669,9675,9676,9677,9679,9687,9688,9689,9733,9743,9744,9745,9753,9754,9755,9756,9757,9763,9764,9766,9767,9768,9769,9773,9774,9775,9776,9778,9779,977A,977B,9785,9786,9787,9788,978A,978B,979A,979B,97A9,97AA,97AB,97BB,9833,9843,9844,9845,9853,9854,9855,9856,9857,9863,9864,9865,9866,9867,9868,9869,9873,9874,9875,9878,9879,987A,987B,9883,9884,9885,9886,988A,988B,988C,988D,9895,9896,9897,989B,989C,989D,98A7,98A8,98A9,98AA,98AB,98AC,98AD,98B9,98BA,98BB,98BC,98BD,98CB,98CC,98CD,98DD,9933,9943,9944,9945,9953,9954,9955,9956,9957,9963,9964,9965,9966,9967,9968,9969,9973,9974,9975,9976,9978,9979,997A,997B,9983,9984,9985,9986,998A,998B,998C,998D,9993,9994,9995,9996,999C,999D,999E,999F,99A5,99A6,99A7,99A8,99AC,99AD,99AE,99AF,99B7,99B8,99B9,99BA,99BC,99BD,99BE,99BF,99C9,99CA,99CB,99CC,99CD,99CE,99CF,99DB,99DC,99DD,99DE,99DF,99ED,99EE,99EF,99FF,9A55,9A65,9A66,9A67,9A75,9A76,9A77,9A78,9A79,9A85,9A86,9A87,9A88,9A89,9A8A,9A8B,9A95,9A96,9A97,9A9C,9A9D,9AA5,9AA6,9AA7,9AA8,9AAC,9AAD,9AAE,9AAF,9AB7,9AB8,9AB9,9ABA,9ABD,9ABE,9ABF,9AC9,9ACA,9ACB,9ACC,9ACD,9ACE,9ACF,9ADB,9ADC,9ADD,9ADE,9ADF,9AED,9AEE,9AEF,9AFF,9B77,9B87,9B88,9B89,9B97,9B98,9B9A,9BA7,9BA8,9BAA,9BAB,9BAC,9BAD,9BB7,9BB8,9BB9,9BBA,9BBC,9BBD,9BBE,9BBF,9BC9,9BCA,9BCB,9BCC,9BCE,9BCF,9BDB,9BDC,9BDD,9BDE,9BDF,9BED,9BEE,9BEF,9BFF,9CA9,9CAA,9CAB,9CB9,9CBB,9CBC,9CBD,9CC9,9CCA,9CCB,9CCD,9CCE,9CCF,9CDB,9CDC,9CDD,9CDF,9CED,9CEE,9CEF,9CFF,9D0D,9DBB,9DCC,9DCD,9DDB,9DDC,9DDE,9DDF,9DED,9DEE,9DFF,9E0B,9E0C,9E0D,9E1D,9E1E,9E2F,9EDD,9EED,9EEF,9EFF,9F09,9F0A,9F0B,9F0C,9F0D,9F1B,9F1C,9F1D,9F1E,9F2D,9F2E,9F2F,9F3F,A0B0,A0B1,A0B2,A0C0,A0C1,A0C2,A0C3,A0C4,A0D0,A0D1,A0D2,A0D3,A0D4,A0D5,A0D6,A0E1,A0E2,A0E3,A0E4,A0E5,A0E6,A0E7,A0E8,A0F3,A0F4,A0F5,A0F6,A0F7,A0F8,A0F9,A0FA,A1B0,A1C0,A1C1,A1C2,A1D0,A1D1,A1D2,A1D3,A1D4,A1E1,A1E2,A1E3,A1E4,A1E5,A1E6,A1F2,A1F3,A1F4,A1F5,A1F6,A1F7,A1F8,A2C0,A2D0,A2D1,A2D2,A2E1,A2E2,A2E3,A2E4,A2F2,A2F3,A2F4,A2F5,A2F6,A3D0,A3E1,A3E2,A3F2,A3F3,A3F4,A4F2,A544,A554,A556,A566,A644,A655,A656,A664,A665,A667,A668,A676,A677,A688,A744,A754,A755,A756,A764,A766,A767,A768,A774,A775,A776,A778,A779,A77A,A786,A787,A788,A78A,A798,A799,A79A,A844,A854,A855,A856,A864,A865,A866,A867,A868,A874,A875,A877,A878,A879,A87A,A884,A885,A886,A887,A889,A88A,A88B,A88C,A896,A897,A898,A899,A89B,A89C,A8AB,A8AC,A8BA,A8BB,A8BC,A8CC,A944,A954,A955,A956,A964,A965,A966,A967,A968,A974,A975,A976,A977,A978,A979,A97A,A984,A985,A986,A989,A98A,A98B,A98C,A994,A995,A996,A997,A99B,A99C,A99D,A99E,A9A6,A9A7,A9A8,A9AC,A9AD,A9AE,A9B8,A9B9,A9BA,A9BB,A9BC,A9BD,A9BE,A9CA,A9CB,A9CC,A9CD,A9CE,A9DC,A9DD,A9DE,A9EE,AA44,AA54,AA55,AA56,AA64,AA65,AA66,AA67,AA68,AA74,AA75,AA76,AA77,AA78,AA79,AA7A,AA84,AA85,AA86,AA87,AA89,AA8A,AA8B,AA8C,AA94,AA95,AA96,AA97,AA9B,AA9C,AA9D,AA9E,AAA4,AAA5,AAA6,AAA7,AAAD,AAAE,AAAF,AAB6,AAB7,AAB8,AAB9,AABD,AABE,AABF,AAC8,AAC9,AACA,AACB,AACD,AACE,AACF,AADA,AADB,AADC,AADD,AADE,AADF,AAEC,AAED,AAEE,AAEF,AAFE,AAFF,AB66,AB76,AB77,AB78,AB86,AB87,AB88,AB89,AB8A,AB96,AB97,AB98,AB99,AB9A,AB9B,AB9C,ABA6,ABA7,ABA8,ABAD,ABAE,ABB6,ABB7,ABB8,ABB9,ABBD,ABBE,ABBF,ABC8,ABC9,ABCA,ABCB,ABCE,ABCF,ABDA,ABDB,ABDC,ABDD,ABDE,ABDF,ABEC,ABED,ABEE,ABEF,ABFE,ABFF,AC88,AC98,AC99,AC9A,ACA8,ACA9,ACAB,ACB8,ACB9,ACBB,ACBC,ACBD,ACBE,ACC8,ACC9,ACCA,ACCB,ACCD,ACCE,ACCF,ACDA,ACDB,ACDC,ACDD,ACDF,ACEC,ACED,ACEE,ACEF,ACFE,ACFF,ADBA,ADBB,ADBC,ADCA,ADCC,ADCD,ADCE,ADDA,ADDB,ADDC,ADDE,ADDF,ADEC,ADED,ADEE,ADFE,ADFF,AE0C,AE0D,AE1E,AECC,AEDD,AEDE,AEEC,AEED,AEEF,AEFE,AEFF,AF0A,AF0B,AF0C,AF0D,AF1C,AF1D,AF1E,AF2E,AF2F,AFEE,AFFE,B0A0,B0A1,B0B2,B0B3,B0C0,B0C1,B0C2,B0C3,B0C4,B0C5,B0D0,B0D1,B0D2,B0D3,B0D4,B0D5,B0D6,B0D7,B0E2,B0E3,B0E4,B0E5,B0E6,B0E7,B0E8,B0E9,B0F4,B0F5,B0F6,B0F7,B0F8,B0F9,B0FA,B0FB,B1B0,B1C0,B1C1,B1C2,B1C3,B1D0,B1D1,B1D2,B1D3,B1D4,B1D5,B1E1,B1E2,B1E3,B1E4,B1E5,B1E6,B1E7,B1F2,B1F3,B1F4,B1F5,B1F6,B1F7,B1F8,B1F9,B2C0,B2C1,B2D0,B2D1,B2D2,B2D3,B2E1,B2E2,B2E3,B2E4,B2E5,B2F2,B2F3,B2F4,B2F5,B2F6,B2F7,B3D0,B3D1,B3E1,B3E2,B3E3,B3F2,B3F3,B3F4,B3F5,B4E1,B4F2,B4F3,B655,B665,B667,B677,B755,B766,B767,B775,B776,B778,B779,B787,B788,B799,B855,B865,B866,B867,B875,B877,B878,B879,B885,B886,B887,B889,B88A,B88B,B897,B898,B899,B89B,B8A9,B8AA,B8AB,B955,B965,B966,B967,B975,B976,B977,B978,B979,B985,B986,B988,B989,B98A,B98B,B995,B996,B997,B998,B99A,B99B,B99C,B99D,B9A7,B9A8,B9A9,B9AA,B9AC,B9AD,B9BC,B9BD,B9CB,B9CC,B9CD,B9DD,BA55,BA65,BA66,BA67,BA75,BA76,BA77,BA78,BA79,BA85,BA86,BA87,BA88,BA89,BA8A,BA8B,BA95,BA96,BA97,BA9A,BA9B,BA9C,BA9D,BAA5,BAA6,BAA7,BAA8,BAAC,BAAD,BAAE,BAAF,BAB7,BAB8,BAB9,BABD,BABE,BABF,BAC9,BACA,BACB,BACC,BACD,BACE,BACF,BADB,BADC,BADD,BADE,BADF,BAED,BAEE,BAEF,BAFF,BB55,BB65,BB66,BB67,BB75,BB76,BB77,BB78,BB79,BB85,BB86,BB87,BB88,BB89,BB8A,BB8B,BB95,BB96,BB97,BB98,BB9A,BB9B,BB9C,BB9D,BBA5,BBA6,BBA7,BBA8,BBAC,BBAD,BBAE,BBAF,BBB5,BBB6,BBB7,BBB8,BBBE,BBBF,BBC7,BBC8,BBC9,BBCA,BBCE,BBCF,BBD9,BBDA,BBDB,BBDC,BBDE,BBDF,BBEB,BBEC,BBED,BBEE,BBEF,BBFD,BBFE,BBFF,BC77,BC87,BC88,BC89,BC97,BC98,BC99,BC9A,BC9B,BCA7,BCA8,BCA9,BCAA,BCAB,BCAC,BCAD,BCB7,BCB8,BCB9,BCBE,BCBF,BCC7,BCC8,BCC9,BCCA,BCCE,BCCF,BCD9,BCDA,BCDB,BCDC,BCDF,BCEB,BCEC,BCED,BCEE,BCEF,BCFD,BCFE,BCFF,BD99,BDA9,BDAA,BDAB,BDB9,BDBA,BDBC,BDC9,BDCA,BDCC,BDCD,BDCE,BDCF,BDD9,BDDA,BDDB,BDDC,BDDE,BDDF,BDEB,BDEC,BDED,BDEE,BDFD,BDFE,BDFF,BE0D,BECB,BECC,BECD,BEDB,BEDD,BEDE,BEDF,BEEB,BEEC,BEED,BEEF,BEFD,BEFE,BEFF,BF0B,BF0C,BF0D,BF1D,BF1E,BF2F,BFDD,BFEE,BFEF,BFFD,BFFE,C090,C0A0,C0A1,C0A2,C0B0,C0B1,C0B2,C0B3,C0B4,C0C2,C0C3,C0C4,C0C5,C0C6,C0D1,C0D2,C0D3,C0D4,C0D5,C0D6,C0D7,C0D8,C0E3,C0E4,C0E5,C0E6,C0E7,C0E8,C0E9,C0EA,C0F5,C0F6,C0F7,C0F8,C0F9,C0FA,C0FB,C0FC,C1A0,C1B0,C1B1,C1B2,C1C0,C1C3,C1C4,C1D0,C1D1,C1D2,C1D3,C1D4,C1D5,C1D6,C1E1,C1E2,C1E3,C1E4,C1E5,C1E6,C1E7,C1E8,C1F3,C1F4,C1F5,C1F6,C1F7,C1F8,C1F9,C1FA,C2B0,C2C0,C2C1,C2D0,C2D1,C2D2,C2D3,C2D4,C2E1,C2E2,C2E3,C2E4,C2E5,C2E6,C2F2,C2F3,C2F4,C2F5,C2F6,C2F7,C2F8,C3C0,C3D0,C3D1,C3D2,C3E1,C3E2,C3E3,C3E4,C3F2,C3F3,C3F4,C3F5,C3F6,C4D0,C4E1,C4E2,C4F2,C4F3,C4F4,C5F2,C766,C776,C778,C788,C866,C877,C878,C886,C887,C889,C88A,C898,C899,C8AA,C966,C976,C977,C978,C986,C988,C989,C98A,C996,C997,C998,C99A,C99B,C99C,C9A8,C9A9,C9AA,C9AC,C9BA,C9BB,C9BC,CA66,CA76,CA77,CA78,CA86,CA87,CA88,CA89,CA8A,CA96,CA97,CA99,CA9A,CA9B,CA9C,CAA6,CAA7,CAA8,CAA9,CAAB,CAAC,CAAD,CAAE,CAB8,CAB9,CABA,CABB,CABD,CABE,CACD,CACE,CADC,CADD,CADE,CAEE,CB66,CB76,CB77,CB78,CB86,CB87,CB88,CB89,CB8A,CB96,CB97,CB98,CB99,CB9A,CB9B,CB9C,CBA6,CBA7,CBA8,CBAB,CBAC,CBAD,CBAE,CBB6,CBB7,CBB8,CBB9,CBBD,CBBE,CBBF,CBC8,CBC9,CBCA,CBCE,CBCF,CBDA,CBDB,CBDC,CBDD,CBDE,CBDF,CBEC,CBED,CBEE,CBEF,CBFE,CBFF,CC66,CC76,CC77,CC78,CC86,CC87,CC88,CC89,CC8A,CC96,CC97,CC98,CC99,CC9A,CC9B,CC9C,CCA6,CCA7,CCA8,CCA9,CCAB,CCAC,CCAD,CCAE,CCB6,CCB7,CCB8,CCB9,CCBD,CCBE,CCBF,CCC6,CCC7,CCC8,CCC9,CCCF,CCD8,CCD9,CCDA,CCDB,CCDF,CCEA,CCEB,CCEC,CCED,CCEF,CCFC,CCFD,CCFE,CCFF,CD88,CD98,CD99,CD9A,CDA8,CDA9,CDAA,CDAB,CDAC,CDB8,CDB9,CDBA,CDBB,CDBC,CDBD,CDBE,CDC8,CDC9,CDCA,CDCF,CDD8,CDD9,CDDA,CDDB,CDDF,CDEA,CDEB,CDEC,CDED,CDFC,CDFD,CDFE,CDFF,CEAA,CEBA,CEBB,CEBC,CECA,CECB,CECD,CEDA,CEDB,CEDD,CEDE,CEDF,CEEA,CEEB,CEEC,CEED,CEEF,CEFC,CEFD,CEFE,CEFF,CF0C,CF0D,CF1E,CFDC,CFDD,CFDE,CFEC,CFEE,CFEF,CFFC,CFFD,CFFE,D091,D0A1,D0A2,D0A3,D0B1,D0B2,D0B3,D0B4,D0B5,D0C1,D0C2,D0C3,D0C4,D0C5,D0C6,D0C7,D0D2,D0D3,D0D4,D0D5,D0D6,D0D7,D0D8,D0D9,D0E4,D0E5,D0E6,D0E7,D0E8,D0E9,D0EA,D0EB,D0F6,D0F7,D0F8,D0F9,D0FA,D0FB,D0FC,D1A1,D1B1,D1B2,D1B3,D1C1,D1C2,D1C3,D1C4,D1C5,D1D3,D1D4,D1D5,D1D6,D1D7,D1E2,D1E3,D1E4,D1E5,D1E6,D1E7,D1E8,D1E9,D1F4,D1F5,D1F6,D1F7,D1F8,D1F9,D1FA,D1FB,D2B1,D2C1,D2C2,D2C3,D2D1,D2D4,D2D5,D2E1,D2E2,D2E3,D2E4,D2E5,D2E6,D2E7,D2F2,D2F3,D2F4,D2F5,D2F6,D2F7,D2F8,D2F9,D3C1,D3D1,D3D2,D3E1,D3E2,D3E3,D3E4,D3E5,D3F2,D3F3,D3F4,D3F5,D3F6,D3F7,D4D1,D4E1,D4E2,D4E3,D4F2,D4F3,D4F4,D4F5,D5E1,D5F2,D5F3,D877,D887,D889,D899,D977,D988,D989,D997,D998,D99A,D99B,D9A9,D9AA,D9BB,DA77,DA87,DA88,DA89,DA97,DA99,DA9A,DA9B,DAA7,DAA8,DAA9,DAAB,DAAC,DAAD,DAB9,DABA,DABB,DABD,DACB,DACC,DACD,DB77,DB87,DB88,DB89,DB97,DB98,DB99,DB9A,DB9B,DBA7,DBA8,DBAA,DBAB,DBAC,DBAD,DBB7,DBB8,DBB9,DBBA,DBBC,DBBD,DBBE,DBBF,DBC9,DBCA,DBCB,DBCC,DBCE,DBCF,DBDE,DBDF,DBED,DBEE,DBEF,DBFF,DC77,DC87,DC88,DC89,DC97,DC98,DC99,DC9A,DC9B,DCA7,DCA8,DCA9,DCAA,DCAB,DCAC,DCAD,DCB7,DCB8,DCB9,DCBC,DCBD,DCBE,DCBF,DCC7,DCC8,DCC9,DCCA,DCCE,DCCF,DCD9,DCDA,DCDB,DCDF,DCEB,DCEC,DCED,DCEE,DCEF,DCFD,DCFE,DCFF,DD77,DD87,DD88,DD89,DD97,DD98,DD99,DD9A,DD9B,DDA7,DDA8,DDA9,DDAA,DDAB,DDAC,DDAD,DDB7,DDB8,DDB9,DDBA,DDBC,DDBD,DDBE,DDBF,DDC7,DDC8,DDC9,DDCA,DDCE,DDCF,DDD7,DDD8,DDD9,DDDA,DDE9,DDEA,DDEB,DDEC,DDFB,DDFC,DDFD,DDFE,DE99,DEA9,DEAA,DEAB,DEB9,DEBA,DEBB,DEBC,DEBD,DEC9,DECA,DECB,DECC,DECD,DECE,DECF,DED9,DEDA,DEDB,DEE9,DEEA,DEEB,DEEC,DEFB,DEFC,DEFD,DEFE,DF0D,DFBB,DFCB,DFCC,DFCD,DFDB,DFDC,DFDE,DFEB,DFEC,DFEE,DFEF,DFFB,DFFC,DFFD,DFFE,E092,E0A2,E0A3,E0A4,E0B2,E0B3,E0B4,E0B5,E0B6,E0C2,E0C3,E0C4,E0C5,E0C6,E0C7,E0C8,E0D3,E0D4,E0D5,E0D6,E0D7,E0D8,E0D9,E0DA,E0E5,E0E6,E0E7,E0E8,E0E9,E0EA,E0EB,E0EC,E0F7,E0F8,E0F9,E0FA,E0FB,E0FC,E1A2,E1B2,E1B3,E1B4,E1C2,E1C3,E1C4,E1C5,E1C6,E1D2,E1D3,E1D4,E1D5,E1D6,E1D7,E1D8,E1E3,E1E4,E1E5,E1E6,E1E7,E1E8,E1E9,E1EA,E1F5,E1F6,E1F7,E1F8,E1F9,E1FA,E1FB,E1FC,E2B2,E2C2,E2C3,E2C4,E2D2,E2D3,E2D4,E2D5,E2D6,E2E4,E2E5,E2E6,E2E7,E2E8,E2F3,E2F4,E2F5,E2F6,E2F7,E2F8,E2F9,E2FA,E3C2,E3D2,E3D3,E3D4,E3E2,E3E5,E3E6,E3F2,E3F3,E3F4,E3F5,E3F6,E3F7,E3F8,E4D2,E4E2,E4E3,E4F2,E4F3,E4F4,E4F5,E4F6,E5E2,E5F2,E5F3,E5F4,E6F2,E988,E998,E99A,E9AA,EA88,EA99,EA9A,EAA8,EAA9,EAAB,EAAC,EABA,EABB,EACC,EB88,EB98,EB99,EB9A,EBA8,EBAA,EBAB,EBAC,EBB8,EBB9,EBBA,EBBC,EBBD,EBBE,EBCA,EBCB,EBCC,EBCE,EBDC,EBDD,EBDE,EC88,EC98,EC99,EC9A,ECA8,ECA9,ECAA,ECAB,ECAC,ECB8,ECB9,ECBB,ECBC,ECBD,ECBE,ECC8,ECC9,ECCA,ECCB,ECCD,ECCE,ECCF,ECDA,ECDB,ECDC,ECDD,ECDF,ECEF,ECFE,ECFF,ED88,ED98,ED99,ED9A,EDA8,EDA9,EDAA,EDAB,EDAC,EDB8,EDB9,EDBA,EDBB,EDBC,EDBD,EDBE,EDC8,EDC9,EDCA,EDCD,EDCE,EDCF,EDD8,EDD9,EDDA,EDDB,EDDF,EDEA,EDEB,EDEC,EDFC,EDFD,EDFE,EDFF,EE88,EE98,EE99,EE9A,EEA8,EEA9,EEAA,EEAB,EEAC,EEB8,EEB9,EEBA,EEBB,EEBC,EEBD,EEBE,EEC8,EEC9,EECA,EECB,EECD,EECE,EECF,EED8,EED9,EEDA,EEDB,EEDF,EEE8,EEE9,EEEA,EEEB,EEFA,EEFB,EEFC,EEFD,EFAA,EFBA,EFBB,EFBC,EFCA,EFCB,EFCC,EFCD,EFCE,EFDA,EFDB,EFDC,EFDD,EFDE,EFDF,EFEA,EFEB,EFEC,EFFA,EFFB,EFFC,EFFD,F093,F0A3,F0A4,F0A5,F0B3,F0B4,F0B5,F0B6,F0B7,F0C3,F0C4,F0C5,F0C6,F0C7,F0C8,F0C9,F0D4,F0D5,F0D6,F0D7,F0D8,F0D9,F0DA,F0DB,F0E6,F0E7,F0E8,F0E9,F0EA,F0EB,F0EC,F0F8,F0F9,F0FA,F0FB,F0FC,F1A3,F1B3,F1B4,F1B5,F1C3,F1C4,F1C5,F1C6,F1C7,F1D3,F1D4,F1D5,F1D6,F1D7,F1D8,F1D9,F1E4,F1E5,F1E6,F1E7,F1E8,F1E9,F1EA,F1EB,F1F6,F1F7,F1F8,F1F9,F1FA,F1FB,F1FC,F1FD,F2B3,F2C3,F2C4,F2C5,F2D3,F2D4,F2D5,F2D6,F2D7,F2E3,F2E4,F2E5,F2E6,F2E7,F2E8,F2E9,F2F4,F2F5,F2F6,F2F7,F2F8,F2F9,F2FA,F2FB,F3C3,F3D3,F3D4,F3D5,F3E3,F3E4,F3E5,F3E6,F3E7,F3F5,F3F6,F3F7,F3F8,F3F9,F4D3,F4E3,F4E4,F4E5,F4F3,F4F6,F4F7,F5E3,F5F3,F5F4,F6F3,FA99,FAA9,FAAB,FABB,FB99,FBAA,FBAB,FBB9,FBBA,FBBC,FBBD,FBCB,FBCC,FBDD,FC99,FCA9,FCAA,FCAB,FCB9,FCBB,FCBC,FCBD,FCC9,FCCA,FCCB,FCCD,FCCE,FCCF,FCDB,FCDC,FCDD,FCDF,FCED,FCEE,FCEF,FD99,FDA9,FDAA,FDAB,FDB9,FDBA,FDBB,FDBC,FDBD,FDC9,FDCA,FDCC,FDCD,FDCE,FDCF,FDD9,FDDA,FDDB,FDDC,FDDE,FDDF,FDEB,FDEC,FDED,FDEE,FE99,FEA9,FEAA,FEAB,FEB9,FEBA,FEBB,FEBC,FEBD,FEC9,FECA,FECB,FECC,FECD,FECE,FECF,FED9,FEDA,FEDB,FEDE,FEDF,FEE9,FEEA,FEEB,FEEC,FEFB,FEFC,FEFD,FF99,FFA9,FFAA,FFAB,FFB9,FFBA,FFBB,FFBC,FFBD,FFC9,FFCA,FFCB,FFCC,FFCD,FFCE,FFCF,FFD9,FFDA,FFDB,FFDC,FFDE,FFDF,FFE9,FFEA,FFEB,FFEC,FFF9,FFFA,FFFB,FFFC
     hex_chars[3] = possible_chars[slot4];
     if (++possible_chars_freq[slot4] > 3) { continue; }                                      // each character cannot appear more than 3 times (holds true 94.61% of the time) (eliminates 268,435,456 combinations) (does not begin with 0000,1111,2222,3333,4444,5555,6666,7777,8888,9999,AAAA,BBBB,CCCC,DDDD,EEEE,FFFF) (already accounted for)
     if ((slot1==slot3)&&(slot2==slot4)) { continue; }                                        // when c1 equals c3, c4 is not equal to c2 (eliminates 4,294,967,296 combinations) (does not begin with 0000,0101,0202,0303,0404,0505,0606,0707,0808,0909,0A0A,0B0B,0C0C,0D0D,0E0E,0F0F,1010,1111,1212,1313,1414,1515,1616,1717,1818,1919,1A1A,1B1B,1C1C,1D1D,1E1E,1F1F,2020,2121,2222,2323,2424,2525,2626,2727,2828,2929,2A2A,2B2B,2C2C,2D2D,2E2E,2F2F,3030,3131,3232,3333,3434,3535,3636,3737,3838,3939,3A3A,3B3B,3C3C,3D3D,3E3E,3F3F,4040,4141,4242,4343,4444,4545,4646,4747,4848,4949,4A4A,4B4B,4C4C,4D4D,4E4E,4F4F,5050,5151,5252,5353,5454,5555,5656,5757,5858,5959,5A5A,5B5B,5C5C,5D5D,5E5E,5F5F,6060,6161,6262,6363,6464,6565,6666,6767,6868,6969,6A6A,6B6B,6C6C,6D6D,6E6E,6F6F,7070,7171,7272,7373,7474,7575,7676,7777,7878,7979,7A7A,7B7B,7C7C,7D7D,7E7E,7F7F,8080,8181,8282,8383,8484,8585,8686,8787,8888,8989,8A8A,8B8B,8C8C,8D8D,8E8E,8F8F,9090,9191,9292,9393,9494,9595,9696,9797,9898,9999,9A9A,9B9B,9C9C,9D9D,9E9E,9F9F,A0A0,A1A1,A2A2,A3A3,A4A4,A5A5,A6A6,A7A7,A8A8,A9A9,AAAA,ABAB,ACAC,ADAD,AEAE,AFAF,B0B0,B1B1,B2B2,B3B3,B4B4,B5B5,B6B6,B7B7,B8B8,B9B9,BABA,BBBB,BCBC,BDBD,BEBE,BFBF,C0C0,C1C1,C2C2,C3C3,C4C4,C5C5,C6C6,C7C7,C8C8,C9C9,CACA,CBCB,CCCC,CDCD,CECE,CFCF,D0D0,D1D1,D2D2,D3D3,D4D4,D5D5,D6D6,D7D7,D8D8,D9D9,DADA,DBDB,DCDC,DDDD,DEDE,DFDF,E0E0,E1E1,E2E2,E3E3,E4E4,E5E5,E6E6,E7E7,E8E8,E9E9,EAEA,EBEB,ECEC,EDED,EEEE,EFEF,F0F0,F1F1,F2F2,F3F3,F4F4,F5F5,F6F6,F7F7,F8F8,F9F9,FAFA,FBFB,FCFC,FDFD,FEFE,FFFF)
     if ((slot1==slot3)&&(slot3==slot4)) { continue; }                                        // characters 1 and 3 and 4 are not identical (eliminates 4,294,967,296 combinations) (does not begin with 0000,0100,0200,0300,0400,0500,0600,0700,0800,0900,0A00,0B00,0C00,0D00,0E00,0F00,1011,1111,1211,1311,1411,1511,1611,1711,1811,1911,1A11,1B11,1C11,1D11,1E11,1F11,2022,2122,2222,2322,2422,2522,2622,2722,2822,2922,2A22,2B22,2C22,2D22,2E22,2F22,3033,3133,3233,3333,3433,3533,3633,3733,3833,3933,3A33,3B33,3C33,3D33,3E33,3F33,4044,4144,4244,4344,4444,4544,4644,4744,4844,4944,4A44,4B44,4C44,4D44,4E44,4F44,5055,5155,5255,5355,5455,5555,5655,5755,5855,5955,5A55,5B55,5C55,5D55,5E55,5F55,6066,6166,6266,6366,6466,6566,6666,6766,6866,6966,6A66,6B66,6C66,6D66,6E66,6F66,7077,7177,7277,7377,7477,7577,7677,7777,7877,7977,7A77,7B77,7C77,7D77,7E77,7F77,8088,8188,8288,8388,8488,8588,8688,8788,8888,8988,8A88,8B88,8C88,8D88,8E88,8F88,9099,9199,9299,9399,9499,9599,9699,9799,9899,9999,9A99,9B99,9C99,9D99,9E99,9F99,A0AA,A1AA,A2AA,A3AA,A4AA,A5AA,A6AA,A7AA,A8AA,A9AA,AAAA,ABAA,ACAA,ADAA,AEAA,AFAA,B0BB,B1BB,B2BB,B3BB,B4BB,B5BB,B6BB,B7BB,B8BB,B9BB,BABB,BBBB,BCBB,BDBB,BEBB,BFBB,C0CC,C1CC,C2CC,C3CC,C4CC,C5CC,C6CC,C7CC,C8CC,C9CC,CACC,CBCC,CCCC,CDCC,CECC,CFCC,D0DD,D1DD,D2DD,D3DD,D4DD,D5DD,D6DD,D7DD,D8DD,D9DD,DADD,DBDD,DCDD,DDDD,DEDD,DFDD,E0EE,E1EE,E2EE,E3EE,E4EE,E5EE,E6EE,E7EE,E8EE,E9EE,EAEE,EBEE,ECEE,EDEE,EEEE,EFEE,F0FF,F1FF,F2FF,F3FF,F4FF,F5FF,F6FF,F7FF,F8FF,F9FF,FAFF,FBFF,FCFF,FDFF,FEFF,FFFF)
     if ((slot1==slot3)&&(slot4==(slot2+1))) { continue; }                                    // when characters 1 and 3 are equal, character 4 is not +1 to character 2 (eliminates 4,026,531,840 combinations) (does not begin with 0001,0102,0203,0304,0405,0506,0607,0708,0809,090A,0A0B,0B0C,0C0D,0D0E,0E0F,1011,1112,1213,1314,1415,1516,1617,1718,1819,191A,1A1B,1B1C,1C1D,1D1E,1E1F,2021,2122,2223,2324,2425,2526,2627,2728,2829,292A,2A2B,2B2C,2C2D,2D2E,2E2F,3031,3132,3233,3334,3435,3536,3637,3738,3839,393A,3A3B,3B3C,3C3D,3D3E,3E3F,4041,4142,4243,4344,4445,4546,4647,4748,4849,494A,4A4B,4B4C,4C4D,4D4E,4E4F,5051,5152,5253,5354,5455,5556,5657,5758,5859,595A,5A5B,5B5C,5C5D,5D5E,5E5F,6061,6162,6263,6364,6465,6566,6667,6768,6869,696A,6A6B,6B6C,6C6D,6D6E,6E6F,7071,7172,7273,7374,7475,7576,7677,7778,7879,797A,7A7B,7B7C,7C7D,7D7E,7E7F,8081,8182,8283,8384,8485,8586,8687,8788,8889,898A,8A8B,8B8C,8C8D,8D8E,8E8F,9091,9192,9293,9394,9495,9596,9697,9798,9899,999A,9A9B,9B9C,9C9D,9D9E,9E9F,A0A1,A1A2,A2A3,A3A4,A4A5,A5A6,A6A7,A7A8,A8A9,A9AA,AAAB,ABAC,ACAD,ADAE,AEAF,B0B1,B1B2,B2B3,B3B4,B4B5,B5B6,B6B7,B7B8,B8B9,B9BA,BABB,BBBC,BCBD,BDBE,BEBF,C0C1,C1C2,C2C3,C3C4,C4C5,C5C6,C6C7,C7C8,C8C9,C9CA,CACB,CBCC,CCCD,CDCE,CECF,D0D1,D1D2,D2D3,D3D4,D4D5,D5D6,D6D7,D7D8,D8D9,D9DA,DADB,DBDC,DCDD,DDDE,DEDF,E0E1,E1E2,E2E3,E3E4,E4E5,E5E6,E6E7,E7E8,E8E9,E9EA,EAEB,EBEC,ECED,EDEE,EEEF,F0F1,F1F2,F2F3,F3F4,F4F5,F5F6,F6F7,F7F8,F8F9,F9FA,FAFB,FBFC,FCFD,FDFE,FEFF)
     if ((negate_sequential)&&((slot3==(slot2+1))&&(slot4==(slot3+1)))) { continue; }         // no 3 characters in a row can be sequential (eliminates 3,758,096,384 combinations) (does not begin with 0012,0123,0234,0345,0456,0567,0678,0789,089A,09AB,0ABC,0BCD,0CDE,0DEF,1012,1123,1234,1345,1456,1567,1678,1789,189A,19AB,1ABC,1BCD,1CDE,1DEF,2012,2123,2234,2345,2456,2567,2678,2789,289A,29AB,2ABC,2BCD,2CDE,2DEF,3012,3123,3234,3345,3456,3567,3678,3789,389A,39AB,3ABC,3BCD,3CDE,3DEF,4012,4123,4234,4345,4456,4567,4678,4789,489A,49AB,4ABC,4BCD,4CDE,4DEF,5012,5123,5234,5345,5456,5567,5678,5789,589A,59AB,5ABC,5BCD,5CDE,5DEF,6012,6123,6234,6345,6456,6567,6678,6789,689A,69AB,6ABC,6BCD,6CDE,6DEF,7012,7123,7234,7345,7456,7567,7678,7789,789A,79AB,7ABC,7BCD,7CDE,7DEF,8012,8123,8234,8345,8456,8567,8678,8789,889A,89AB,8ABC,8BCD,8CDE,8DEF,9012,9123,9234,9345,9456,9567,9678,9789,989A,99AB,9ABC,9BCD,9CDE,9DEF,A012,A123,A234,A345,A456,A567,A678,A789,A89A,A9AB,AABC,ABCD,ACDE,ADEF,B012,B123,B234,B345,B456,B567,B678,B789,B89A,B9AB,BABC,BBCD,BCDE,BDEF,C012,C123,C234,C345,C456,C567,C678,C789,C89A,C9AB,CABC,CBCD,CCDE,CDEF,D012,D123,D234,D345,D456,D567,D678,D789,D89A,D9AB,DABC,DBCD,DCDE,DDEF,E012,E123,E234,E345,E456,E567,E678,E789,E89A,E9AB,EABC,EBCD,ECDE,EDEF,F012,F123,F234,F345,F456,F567,F678,F789,F89A,F9AB,FABC,FBCD,FCDE,FDEF)
     if ((negate_sequential)&&((slot3==(slot2-1))&&(slot4==(slot3-1)))) { continue; }         // no 3 characters in a row can be reverse sequential (eliminates 3,758,096,384 combinations) (does not begin with 0210,0321,0432,0543,0654,0765,0876,0987,0A98,0BA9,0CBA,0DCB,0EDC,0FED,1210,1321,1432,1543,1654,1765,1876,1987,1A98,1BA9,1CBA,1DCB,1EDC,1FED,2210,2321,2432,2543,2654,2765,2876,2987,2A98,2BA9,2CBA,2DCB,2EDC,2FED,3210,3321,3432,3543,3654,3765,3876,3987,3A98,3BA9,3CBA,3DCB,3EDC,3FED,4210,4321,4432,4543,4654,4765,4876,4987,4A98,4BA9,4CBA,4DCB,4EDC,4FED,5210,5321,5432,5543,5654,5765,5876,5987,5A98,5BA9,5CBA,5DCB,5EDC,5FED,6210,6321,6432,6543,6654,6765,6876,6987,6A98,6BA9,6CBA,6DCB,6EDC,6FED,7210,7321,7432,7543,7654,7765,7876,7987,7A98,7BA9,7CBA,7DCB,7EDC,7FED,8210,8321,8432,8543,8654,8765,8876,8987,8A98,8BA9,8CBA,8DCB,8EDC,8FED,9210,9321,9432,9543,9654,9765,9876,9987,9A98,9BA9,9CBA,9DCB,9EDC,9FED,A210,A321,A432,A543,A654,A765,A876,A987,AA98,ABA9,ACBA,ADCB,AEDC,AFED,B210,B321,B432,B543,B654,B765,B876,B987,BA98,BBA9,BCBA,BDCB,BEDC,BFED,C210,C321,C432,C543,C654,C765,C876,C987,CA98,CBA9,CCBA,CDCB,CEDC,CFED,D210,D321,D432,D543,D654,D765,D876,D987,DA98,DBA9,DCBA,DDCB,DEDC,DFED,E210,E321,E432,E543,E654,E765,E876,E987,EA98,EBA9,ECBA,EDCB,EEDC,EFED,F210,F321,F432,F543,F654,F765,F876,F987,FA98,FBA9,FCBA,FDCB,FEDC,FFED)
     if ((slot4==slot3)&&(slot3==slot2)) { continue; }                                        // no 3 characters in a row can be identical (holds true 97.6% of the time) (eliminates 4,294,967,296 combinations) (does not begin with 0000,0111,0222,0333,0444,0555,0666,0777,0888,0999,0AAA,0BBB,0CCC,0DDD,0EEE,0FFF,1000,1111,1222,1333,1444,1555,1666,1777,1888,1999,1AAA,1BBB,1CCC,1DDD,1EEE,1FFF,2000,2111,2222,2333,2444,2555,2666,2777,2888,2999,2AAA,2BBB,2CCC,2DDD,2EEE,2FFF,3000,3111,3222,3333,3444,3555,3666,3777,3888,3999,3AAA,3BBB,3CCC,3DDD,3EEE,3FFF,4000,4111,4222,4333,4444,4555,4666,4777,4888,4999,4AAA,4BBB,4CCC,4DDD,4EEE,4FFF,5000,5111,5222,5333,5444,5555,5666,5777,5888,5999,5AAA,5BBB,5CCC,5DDD,5EEE,5FFF,6000,6111,6222,6333,6444,6555,6666,6777,6888,6999,6AAA,6BBB,6CCC,6DDD,6EEE,6FFF,7000,7111,7222,7333,7444,7555,7666,7777,7888,7999,7AAA,7BBB,7CCC,7DDD,7EEE,7FFF,8000,8111,8222,8333,8444,8555,8666,8777,8888,8999,8AAA,8BBB,8CCC,8DDD,8EEE,8FFF,9000,9111,9222,9333,9444,9555,9666,9777,9888,9999,9AAA,9BBB,9CCC,9DDD,9EEE,9FFF,A000,A111,A222,A333,A444,A555,A666,A777,A888,A999,AAAA,ABBB,ACCC,ADDD,AEEE,AFFF,B000,B111,B222,B333,B444,B555,B666,B777,B888,B999,BAAA,BBBB,BCCC,BDDD,BEEE,BFFF,C000,C111,C222,C333,C444,C555,C666,C777,C888,C999,CAAA,CBBB,CCCC,CDDD,CEEE,CFFF,D000,D111,D222,D333,D444,D555,D666,D777,D888,D999,DAAA,DBBB,DCCC,DDDD,DEEE,DFFF,E000,E111,E222,E333,E444,E555,E666,E777,E888,E999,EAAA,EBBB,ECCC,EDDD,EEEE,EFFF,F000,F111,F222,F333,F444,F555,F666,F777,F888,F999,FAAA,FBBB,FCCC,FDDD,FEEE,FFFF)
     if (slot4 == (slot3-15)) { continue; }                                                   // char 4 is not -15 to char 3 (eliminates 4,294,967,296 combinations) (does not begin with 00F0,01F0,02F0,03F0,04F0,05F0,06F0,07F0,08F0,09F0,0AF0,0BF0,0CF0,0DF0,0EF0,0FF0,10F0,11F0,12F0,13F0,14F0,15F0,16F0,17F0,18F0,19F0,1AF0,1BF0,1CF0,1DF0,1EF0,1FF0,20F0,21F0,22F0,23F0,24F0,25F0,26F0,27F0,28F0,29F0,2AF0,2BF0,2CF0,2DF0,2EF0,2FF0,30F0,31F0,32F0,33F0,34F0,35F0,36F0,37F0,38F0,39F0,3AF0,3BF0,3CF0,3DF0,3EF0,3FF0,40F0,41F0,42F0,43F0,44F0,45F0,46F0,47F0,48F0,49F0,4AF0,4BF0,4CF0,4DF0,4EF0,4FF0,50F0,51F0,52F0,53F0,54F0,55F0,56F0,57F0,58F0,59F0,5AF0,5BF0,5CF0,5DF0,5EF0,5FF0,60F0,61F0,62F0,63F0,64F0,65F0,66F0,67F0,68F0,69F0,6AF0,6BF0,6CF0,6DF0,6EF0,6FF0,70F0,71F0,72F0,73F0,74F0,75F0,76F0,77F0,78F0,79F0,7AF0,7BF0,7CF0,7DF0,7EF0,7FF0,80F0,81F0,82F0,83F0,84F0,85F0,86F0,87F0,88F0,89F0,8AF0,8BF0,8CF0,8DF0,8EF0,8FF0,90F0,91F0,92F0,93F0,94F0,95F0,96F0,97F0,98F0,99F0,9AF0,9BF0,9CF0,9DF0,9EF0,9FF0,A0F0,A1F0,A2F0,A3F0,A4F0,A5F0,A6F0,A7F0,A8F0,A9F0,AAF0,ABF0,ACF0,ADF0,AEF0,AFF0,B0F0,B1F0,B2F0,B3F0,B4F0,B5F0,B6F0,B7F0,B8F0,B9F0,BAF0,BBF0,BCF0,BDF0,BEF0,BFF0,C0F0,C1F0,C2F0,C3F0,C4F0,C5F0,C6F0,C7F0,C8F0,C9F0,CAF0,CBF0,CCF0,CDF0,CEF0,CFF0,D0F0,D1F0,D2F0,D3F0,D4F0,D5F0,D6F0,D7F0,D8F0,D9F0,DAF0,DBF0,DCF0,DDF0,DEF0,DFF0,E0F0,E1F0,E2F0,E3F0,E4F0,E5F0,E6F0,E7F0,E8F0,E9F0,EAF0,EBF0,ECF0,EDF0,EEF0,EFF0,F0F0,F1F0,F2F0,F3F0,F4F0,F5F0,F6F0,F7F0,F8F0,F9F0,FAF0,FBF0,FCF0,FDF0,FEF0,FFF0)
     if (slot4 == (slot3-14)) { continue; }                                                   // char 4 is not -14 to char 3 (eliminates 8,589,934,592 combinations) (does not begin with 00F1,01F1,02F1,03F1,04F1,05F1,06F1,07F1,08F1,09F1,0AF1,0BF1,0CF1,0DF1,0EF1,0FF1,10F1,11F1,12F1,13F1,14F1,15F1,16F1,17F1,18F1,19F1,1AF1,1BF1,1CF1,1DF1,1EF1,1FF1,20F1,21F1,22F1,23F1,24F1,25F1,26F1,27F1,28F1,29F1,2AF1,2BF1,2CF1,2DF1,2EF1,2FF1,30F1,31F1,32F1,33F1,34F1,35F1,36F1,37F1,38F1,39F1,3AF1,3BF1,3CF1,3DF1,3EF1,3FF1,40F1,41F1,42F1,43F1,44F1,45F1,46F1,47F1,48F1,49F1,4AF1,4BF1,4CF1,4DF1,4EF1,4FF1,50F1,51F1,52F1,53F1,54F1,55F1,56F1,57F1,58F1,59F1,5AF1,5BF1,5CF1,5DF1,5EF1,5FF1,60F1,61F1,62F1,63F1,64F1,65F1,66F1,67F1,68F1,69F1,6AF1,6BF1,6CF1,6DF1,6EF1,6FF1,70F1,71F1,72F1,73F1,74F1,75F1,76F1,77F1,78F1,79F1,7AF1,7BF1,7CF1,7DF1,7EF1,7FF1,80F1,81F1,82F1,83F1,84F1,85F1,86F1,87F1,88F1,89F1,8AF1,8BF1,8CF1,8DF1,8EF1,8FF1,90F1,91F1,92F1,93F1,94F1,95F1,96F1,97F1,98F1,99F1,9AF1,9BF1,9CF1,9DF1,9EF1,9FF1,A0F1,A1F1,A2F1,A3F1,A4F1,A5F1,A6F1,A7F1,A8F1,A9F1,AAF1,ABF1,ACF1,ADF1,AEF1,AFF1,B0F1,B1F1,B2F1,B3F1,B4F1,B5F1,B6F1,B7F1,B8F1,B9F1,BAF1,BBF1,BCF1,BDF1,BEF1,BFF1,C0F1,C1F1,C2F1,C3F1,C4F1,C5F1,C6F1,C7F1,C8F1,C9F1,CAF1,CBF1,CCF1,CDF1,CEF1,CFF1,D0F1,D1F1,D2F1,D3F1,D4F1,D5F1,D6F1,D7F1,D8F1,D9F1,DAF1,DBF1,DCF1,DDF1,DEF1,DFF1,E0F1,E1F1,E2F1,E3F1,E4F1,E5F1,E6F1,E7F1,E8F1,E9F1,EAF1,EBF1,ECF1,EDF1,EEF1,EFF1,F0F1,F1F1,F2F1,F3F1,F4F1,F5F1,F6F1,F7F1,F8F1,F9F1,FAF1,FBF1,FCF1,FDF1,FEF1,FFF1,00E0,01E0,02E0,03E0,04E0,05E0,06E0,07E0,08E0,09E0,0AE0,0BE0,0CE0,0DE0,0EE0,0FE0,10E0,11E0,12E0,13E0,14E0,15E0,16E0,17E0,18E0,19E0,1AE0,1BE0,1CE0,1DE0,1EE0,1FE0,20E0,21E0,22E0,23E0,24E0,25E0,26E0,27E0,28E0,29E0,2AE0,2BE0,2CE0,2DE0,2EE0,2FE0,30E0,31E0,32E0,33E0,34E0,35E0,36E0,37E0,38E0,39E0,3AE0,3BE0,3CE0,3DE0,3EE0,3FE0,40E0,41E0,42E0,43E0,44E0,45E0,46E0,47E0,48E0,49E0,4AE0,4BE0,4CE0,4DE0,4EE0,4FE0,50E0,51E0,52E0,53E0,54E0,55E0,56E0,57E0,58E0,59E0,5AE0,5BE0,5CE0,5DE0,5EE0,5FE0,60E0,61E0,62E0,63E0,64E0,65E0,66E0,67E0,68E0,69E0,6AE0,6BE0,6CE0,6DE0,6EE0,6FE0,70E0,71E0,72E0,73E0,74E0,75E0,76E0,77E0,78E0,79E0,7AE0,7BE0,7CE0,7DE0,7EE0,7FE0,80E0,81E0,82E0,83E0,84E0,85E0,86E0,87E0,88E0,89E0,8AE0,8BE0,8CE0,8DE0,8EE0,8FE0,90E0,91E0,92E0,93E0,94E0,95E0,96E0,97E0,98E0,99E0,9AE0,9BE0,9CE0,9DE0,9EE0,9FE0,A0E0,A1E0,A2E0,A3E0,A4E0,A5E0,A6E0,A7E0,A8E0,A9E0,AAE0,ABE0,ACE0,ADE0,AEE0,AFE0,B0E0,B1E0,B2E0,B3E0,B4E0,B5E0,B6E0,B7E0,B8E0,B9E0,BAE0,BBE0,BCE0,BDE0,BEE0,BFE0,C0E0,C1E0,C2E0,C3E0,C4E0,C5E0,C6E0,C7E0,C8E0,C9E0,CAE0,CBE0,CCE0,CDE0,CEE0,CFE0,D0E0,D1E0,D2E0,D3E0,D4E0,D5E0,D6E0,D7E0,D8E0,D9E0,DAE0,DBE0,DCE0,DDE0,DEE0,DFE0,E0E0,E1E0,E2E0,E3E0,E4E0,E5E0,E6E0,E7E0,E8E0,E9E0,EAE0,EBE0,ECE0,EDE0,EEE0,EFE0,F0E0,F1E0,F2E0,F3E0,F4E0,F5E0,F6E0,F7E0,F8E0,F9E0,FAE0,FBE0,FCE0,FDE0,FEE0,FFE0)
     if (slot4 == (slot3+14)) { continue; }                                                   // char 4 is not +14 to char 3 (eliminates 8,589,934,592 combinations) (does not begin with 001F,011F,021F,031F,041F,051F,061F,071F,081F,091F,0A1F,0B1F,0C1F,0D1F,0E1F,0F1F,101F,111F,121F,131F,141F,151F,161F,171F,181F,191F,1A1F,1B1F,1C1F,1D1F,1E1F,1F1F,201F,211F,221F,231F,241F,251F,261F,271F,281F,291F,2A1F,2B1F,2C1F,2D1F,2E1F,2F1F,301F,311F,321F,331F,341F,351F,361F,371F,381F,391F,3A1F,3B1F,3C1F,3D1F,3E1F,3F1F,401F,411F,421F,431F,441F,451F,461F,471F,481F,491F,4A1F,4B1F,4C1F,4D1F,4E1F,4F1F,501F,511F,521F,531F,541F,551F,561F,571F,581F,591F,5A1F,5B1F,5C1F,5D1F,5E1F,5F1F,601F,611F,621F,631F,641F,651F,661F,671F,681F,691F,6A1F,6B1F,6C1F,6D1F,6E1F,6F1F,701F,711F,721F,731F,741F,751F,761F,771F,781F,791F,7A1F,7B1F,7C1F,7D1F,7E1F,7F1F,801F,811F,821F,831F,841F,851F,861F,871F,881F,891F,8A1F,8B1F,8C1F,8D1F,8E1F,8F1F,901F,911F,921F,931F,941F,951F,961F,971F,981F,991F,9A1F,9B1F,9C1F,9D1F,9E1F,9F1F,A01F,A11F,A21F,A31F,A41F,A51F,A61F,A71F,A81F,A91F,AA1F,AB1F,AC1F,AD1F,AE1F,AF1F,B01F,B11F,B21F,B31F,B41F,B51F,B61F,B71F,B81F,B91F,BA1F,BB1F,BC1F,BD1F,BE1F,BF1F,C01F,C11F,C21F,C31F,C41F,C51F,C61F,C71F,C81F,C91F,CA1F,CB1F,CC1F,CD1F,CE1F,CF1F,D01F,D11F,D21F,D31F,D41F,D51F,D61F,D71F,D81F,D91F,DA1F,DB1F,DC1F,DD1F,DE1F,DF1F,E01F,E11F,E21F,E31F,E41F,E51F,E61F,E71F,E81F,E91F,EA1F,EB1F,EC1F,ED1F,EE1F,EF1F,F01F,F11F,F21F,F31F,F41F,F51F,F61F,F71F,F81F,F91F,FA1F,FB1F,FC1F,FD1F,FE1F,FF1F,000E,010E,020E,030E,040E,050E,060E,070E,080E,090E,0A0E,0B0E,0C0E,0D0E,0E0E,0F0E,100E,110E,120E,130E,140E,150E,160E,170E,180E,190E,1A0E,1B0E,1C0E,1D0E,1E0E,1F0E,200E,210E,220E,230E,240E,250E,260E,270E,280E,290E,2A0E,2B0E,2C0E,2D0E,2E0E,2F0E,300E,310E,320E,330E,340E,350E,360E,370E,380E,390E,3A0E,3B0E,3C0E,3D0E,3E0E,3F0E,400E,410E,420E,430E,440E,450E,460E,470E,480E,490E,4A0E,4B0E,4C0E,4D0E,4E0E,4F0E,500E,510E,520E,530E,540E,550E,560E,570E,580E,590E,5A0E,5B0E,5C0E,5D0E,5E0E,5F0E,600E,610E,620E,630E,640E,650E,660E,670E,680E,690E,6A0E,6B0E,6C0E,6D0E,6E0E,6F0E,700E,710E,720E,730E,740E,750E,760E,770E,780E,790E,7A0E,7B0E,7C0E,7D0E,7E0E,7F0E,800E,810E,820E,830E,840E,850E,860E,870E,880E,890E,8A0E,8B0E,8C0E,8D0E,8E0E,8F0E,900E,910E,920E,930E,940E,950E,960E,970E,980E,990E,9A0E,9B0E,9C0E,9D0E,9E0E,9F0E,A00E,A10E,A20E,A30E,A40E,A50E,A60E,A70E,A80E,A90E,AA0E,AB0E,AC0E,AD0E,AE0E,AF0E,B00E,B10E,B20E,B30E,B40E,B50E,B60E,B70E,B80E,B90E,BA0E,BB0E,BC0E,BD0E,BE0E,BF0E,C00E,C10E,C20E,C30E,C40E,C50E,C60E,C70E,C80E,C90E,CA0E,CB0E,CC0E,CD0E,CE0E,CF0E,D00E,D10E,D20E,D30E,D40E,D50E,D60E,D70E,D80E,D90E,DA0E,DB0E,DC0E,DD0E,DE0E,DF0E,E00E,E10E,E20E,E30E,E40E,E50E,E60E,E70E,E80E,E90E,EA0E,EB0E,EC0E,ED0E,EE0E,EF0E,F00E,F10E,F20E,F30E,F40E,F50E,F60E,F70E,F80E,F90E,FA0E,FB0E,FC0E,FD0E,FE0E,FF0E)
     if (slot4 == (slot3+15)) { continue; }                                                   // char 4 is not +15 to char 3 (eliminates 4,294,967,296 combinations) (does not begin with 000F,010F,020F,030F,040F,050F,060F,070F,080F,090F,0A0F,0B0F,0C0F,0D0F,0E0F,0F0F,100F,110F,120F,130F,140F,150F,160F,170F,180F,190F,1A0F,1B0F,1C0F,1D0F,1E0F,1F0F,200F,210F,220F,230F,240F,250F,260F,270F,280F,290F,2A0F,2B0F,2C0F,2D0F,2E0F,2F0F,300F,310F,320F,330F,340F,350F,360F,370F,380F,390F,3A0F,3B0F,3C0F,3D0F,3E0F,3F0F,400F,410F,420F,430F,440F,450F,460F,470F,480F,490F,4A0F,4B0F,4C0F,4D0F,4E0F,4F0F,500F,510F,520F,530F,540F,550F,560F,570F,580F,590F,5A0F,5B0F,5C0F,5D0F,5E0F,5F0F,600F,610F,620F,630F,640F,650F,660F,670F,680F,690F,6A0F,6B0F,6C0F,6D0F,6E0F,6F0F,700F,710F,720F,730F,740F,750F,760F,770F,780F,790F,7A0F,7B0F,7C0F,7D0F,7E0F,7F0F,800F,810F,820F,830F,840F,850F,860F,870F,880F,890F,8A0F,8B0F,8C0F,8D0F,8E0F,8F0F,900F,910F,920F,930F,940F,950F,960F,970F,980F,990F,9A0F,9B0F,9C0F,9D0F,9E0F,9F0F,A00F,A10F,A20F,A30F,A40F,A50F,A60F,A70F,A80F,A90F,AA0F,AB0F,AC0F,AD0F,AE0F,AF0F,B00F,B10F,B20F,B30F,B40F,B50F,B60F,B70F,B80F,B90F,BA0F,BB0F,BC0F,BD0F,BE0F,BF0F,C00F,C10F,C20F,C30F,C40F,C50F,C60F,C70F,C80F,C90F,CA0F,CB0F,CC0F,CD0F,CE0F,CF0F,D00F,D10F,D20F,D30F,D40F,D50F,D60F,D70F,D80F,D90F,DA0F,DB0F,DC0F,DD0F,DE0F,DF0F,E00F,E10F,E20F,E30F,E40F,E50F,E60F,E70F,E80F,E90F,EA0F,EB0F,EC0F,ED0F,EE0F,EF0F,F00F,F10F,F20F,F30F,F40F,F50F,F60F,F70F,F80F,F90F,FA0F,FB0F,FC0F,FD0F,FE0F,FF0F)
     if (slot4 == (slot2+13)) { continue; }                                                   // char 4 is not +13 to char 2 (eliminates 12,884,901,888 combinations) (does not begin with 000D,001D,002D,003D,004D,005D,006D,007D,008D,009D,00AD,00BD,00CD,00DD,00ED,00FD,100D,101D,102D,103D,104D,105D,106D,107D,108D,109D,10AD,10BD,10CD,10DD,10ED,10FD,200D,201D,202D,203D,204D,205D,206D,207D,208D,209D,20AD,20BD,20CD,20DD,20ED,20FD,300D,301D,302D,303D,304D,305D,306D,307D,308D,309D,30AD,30BD,30CD,30DD,30ED,30FD,400D,401D,402D,403D,404D,405D,406D,407D,408D,409D,40AD,40BD,40CD,40DD,40ED,40FD,500D,501D,502D,503D,504D,505D,506D,507D,508D,509D,50AD,50BD,50CD,50DD,50ED,50FD,600D,601D,602D,603D,604D,605D,606D,607D,608D,609D,60AD,60BD,60CD,60DD,60ED,60FD,700D,701D,702D,703D,704D,705D,706D,707D,708D,709D,70AD,70BD,70CD,70DD,70ED,70FD,800D,801D,802D,803D,804D,805D,806D,807D,808D,809D,80AD,80BD,80CD,80DD,80ED,80FD,900D,901D,902D,903D,904D,905D,906D,907D,908D,909D,90AD,90BD,90CD,90DD,90ED,90FD,A00D,A01D,A02D,A03D,A04D,A05D,A06D,A07D,A08D,A09D,A0AD,A0BD,A0CD,A0DD,A0ED,A0FD,B00D,B01D,B02D,B03D,B04D,B05D,B06D,B07D,B08D,B09D,B0AD,B0BD,B0CD,B0DD,B0ED,B0FD,C00D,C01D,C02D,C03D,C04D,C05D,C06D,C07D,C08D,C09D,C0AD,C0BD,C0CD,C0DD,C0ED,C0FD,D00D,D01D,D02D,D03D,D04D,D05D,D06D,D07D,D08D,D09D,D0AD,D0BD,D0CD,D0DD,D0ED,D0FD,E00D,E01D,E02D,E03D,E04D,E05D,E06D,E07D,E08D,E09D,E0AD,E0BD,E0CD,E0DD,E0ED,E0FD,F00D,F01D,F02D,F03D,F04D,F05D,F06D,F07D,F08D,F09D,F0AD,F0BD,F0CD,F0DD,F0ED,F0FD,010E,011E,012E,013E,014E,015E,016E,017E,018E,019E,01AE,01BE,01CE,01DE,01EE,01FE,110E,111E,112E,113E,114E,115E,116E,117E,118E,119E,11AE,11BE,11CE,11DE,11EE,11FE,210E,211E,212E,213E,214E,215E,216E,217E,218E,219E,21AE,21BE,21CE,21DE,21EE,21FE,310E,311E,312E,313E,314E,315E,316E,317E,318E,319E,31AE,31BE,31CE,31DE,31EE,31FE,410E,411E,412E,413E,414E,415E,416E,417E,418E,419E,41AE,41BE,41CE,41DE,41EE,41FE,510E,511E,512E,513E,514E,515E,516E,517E,518E,519E,51AE,51BE,51CE,51DE,51EE,51FE,610E,611E,612E,613E,614E,615E,616E,617E,618E,619E,61AE,61BE,61CE,61DE,61EE,61FE,710E,711E,712E,713E,714E,715E,716E,717E,718E,719E,71AE,71BE,71CE,71DE,71EE,71FE,810E,811E,812E,813E,814E,815E,816E,817E,818E,819E,81AE,81BE,81CE,81DE,81EE,81FE,910E,911E,912E,913E,914E,915E,916E,917E,918E,919E,91AE,91BE,91CE,91DE,91EE,91FE,A10E,A11E,A12E,A13E,A14E,A15E,A16E,A17E,A18E,A19E,A1AE,A1BE,A1CE,A1DE,A1EE,A1FE,B10E,B11E,B12E,B13E,B14E,B15E,B16E,B17E,B18E,B19E,B1AE,B1BE,B1CE,B1DE,B1EE,B1FE,C10E,C11E,C12E,C13E,C14E,C15E,C16E,C17E,C18E,C19E,C1AE,C1BE,C1CE,C1DE,C1EE,C1FE,D10E,D11E,D12E,D13E,D14E,D15E,D16E,D17E,D18E,D19E,D1AE,D1BE,D1CE,D1DE,D1EE,D1FE,E10E,E11E,E12E,E13E,E14E,E15E,E16E,E17E,E18E,E19E,E1AE,E1BE,E1CE,E1DE,E1EE,E1FE,F10E,F11E,F12E,F13E,F14E,F15E,F16E,F17E,F18E,F19E,F1AE,F1BE,F1CE,F1DE,F1EE,F1FE,020F,021F,022F,023F,024F,025F,026F,027F,028F,029F,02AF,02BF,02CF,02DF,02EF,02FF,120F,121F,122F,123F,124F,125F,126F,127F,128F,129F,12AF,12BF,12CF,12DF,12EF,12FF,220F,221F,222F,223F,224F,225F,226F,227F,228F,229F,22AF,22BF,22CF,22DF,22EF,22FF,320F,321F,322F,323F,324F,325F,326F,327F,328F,329F,32AF,32BF,32CF,32DF,32EF,32FF,420F,421F,422F,423F,424F,425F,426F,427F,428F,429F,42AF,42BF,42CF,42DF,42EF,42FF,520F,521F,522F,523F,524F,525F,526F,527F,528F,529F,52AF,52BF,52CF,52DF,52EF,52FF,620F,621F,622F,623F,624F,625F,626F,627F,628F,629F,62AF,62BF,62CF,62DF,62EF,62FF,720F,721F,722F,723F,724F,725F,726F,727F,728F,729F,72AF,72BF,72CF,72DF,72EF,72FF,820F,821F,822F,823F,824F,825F,826F,827F,828F,829F,82AF,82BF,82CF,82DF,82EF,82FF,920F,921F,922F,923F,924F,925F,926F,927F,928F,929F,92AF,92BF,92CF,92DF,92EF,92FF,A20F,A21F,A22F,A23F,A24F,A25F,A26F,A27F,A28F,A29F,A2AF,A2BF,A2CF,A2DF,A2EF,A2FF,B20F,B21F,B22F,B23F,B24F,B25F,B26F,B27F,B28F,B29F,B2AF,B2BF,B2CF,B2DF,B2EF,B2FF,C20F,C21F,C22F,C23F,C24F,C25F,C26F,C27F,C28F,C29F,C2AF,C2BF,C2CF,C2DF,C2EF,C2FF,D20F,D21F,D22F,D23F,D24F,D25F,D26F,D27F,D28F,D29F,D2AF,D2BF,D2CF,D2DF,D2EF,D2FF,E20F,E21F,E22F,E23F,E24F,E25F,E26F,E27F,E28F,E29F,E2AF,E2BF,E2CF,E2DF,E2EF,E2FF,F20F,F21F,F22F,F23F,F24F,F25F,F26F,F27F,F28F,F29F,F2AF,F2BF,F2CF,F2DF,F2EF,F2FF)
     if (slot4 == (slot2+14)) { continue; }                                                   // char 4 is not +14 to char 2 (eliminates 8,589,934,592 combinations) (does not begin with 000E,001E,002E,003E,004E,005E,006E,007E,008E,009E,00AE,00BE,00CE,00DE,00EE,00FE,100E,101E,102E,103E,104E,105E,106E,107E,108E,109E,10AE,10BE,10CE,10DE,10EE,10FE,200E,201E,202E,203E,204E,205E,206E,207E,208E,209E,20AE,20BE,20CE,20DE,20EE,20FE,300E,301E,302E,303E,304E,305E,306E,307E,308E,309E,30AE,30BE,30CE,30DE,30EE,30FE,400E,401E,402E,403E,404E,405E,406E,407E,408E,409E,40AE,40BE,40CE,40DE,40EE,40FE,500E,501E,502E,503E,504E,505E,506E,507E,508E,509E,50AE,50BE,50CE,50DE,50EE,50FE,600E,601E,602E,603E,604E,605E,606E,607E,608E,609E,60AE,60BE,60CE,60DE,60EE,60FE,700E,701E,702E,703E,704E,705E,706E,707E,708E,709E,70AE,70BE,70CE,70DE,70EE,70FE,800E,801E,802E,803E,804E,805E,806E,807E,808E,809E,80AE,80BE,80CE,80DE,80EE,80FE,900E,901E,902E,903E,904E,905E,906E,907E,908E,909E,90AE,90BE,90CE,90DE,90EE,90FE,A00E,A01E,A02E,A03E,A04E,A05E,A06E,A07E,A08E,A09E,A0AE,A0BE,A0CE,A0DE,A0EE,A0FE,B00E,B01E,B02E,B03E,B04E,B05E,B06E,B07E,B08E,B09E,B0AE,B0BE,B0CE,B0DE,B0EE,B0FE,C00E,C01E,C02E,C03E,C04E,C05E,C06E,C07E,C08E,C09E,C0AE,C0BE,C0CE,C0DE,C0EE,C0FE,D00E,D01E,D02E,D03E,D04E,D05E,D06E,D07E,D08E,D09E,D0AE,D0BE,D0CE,D0DE,D0EE,D0FE,E00E,E01E,E02E,E03E,E04E,E05E,E06E,E07E,E08E,E09E,E0AE,E0BE,E0CE,E0DE,E0EE,E0FE,F00E,F01E,F02E,F03E,F04E,F05E,F06E,F07E,F08E,F09E,F0AE,F0BE,F0CE,F0DE,F0EE,F0FE,010F,011F,012F,013F,014F,015F,016F,017F,018F,019F,01AF,01BF,01CF,01DF,01EF,01FF,110F,111F,112F,113F,114F,115F,116F,117F,118F,119F,11AF,11BF,11CF,11DF,11EF,11FF,210F,211F,212F,213F,214F,215F,216F,217F,218F,219F,21AF,21BF,21CF,21DF,21EF,21FF,310F,311F,312F,313F,314F,315F,316F,317F,318F,319F,31AF,31BF,31CF,31DF,31EF,31FF,410F,411F,412F,413F,414F,415F,416F,417F,418F,419F,41AF,41BF,41CF,41DF,41EF,41FF,510F,511F,512F,513F,514F,515F,516F,517F,518F,519F,51AF,51BF,51CF,51DF,51EF,51FF,610F,611F,612F,613F,614F,615F,616F,617F,618F,619F,61AF,61BF,61CF,61DF,61EF,61FF,710F,711F,712F,713F,714F,715F,716F,717F,718F,719F,71AF,71BF,71CF,71DF,71EF,71FF,810F,811F,812F,813F,814F,815F,816F,817F,818F,819F,81AF,81BF,81CF,81DF,81EF,81FF,910F,911F,912F,913F,914F,915F,916F,917F,918F,919F,91AF,91BF,91CF,91DF,91EF,91FF,A10F,A11F,A12F,A13F,A14F,A15F,A16F,A17F,A18F,A19F,A1AF,A1BF,A1CF,A1DF,A1EF,A1FF,B10F,B11F,B12F,B13F,B14F,B15F,B16F,B17F,B18F,B19F,B1AF,B1BF,B1CF,B1DF,B1EF,B1FF,C10F,C11F,C12F,C13F,C14F,C15F,C16F,C17F,C18F,C19F,C1AF,C1BF,C1CF,C1DF,C1EF,C1FF,D10F,D11F,D12F,D13F,D14F,D15F,D16F,D17F,D18F,D19F,D1AF,D1BF,D1CF,D1DF,D1EF,D1FF,E10F,E11F,E12F,E13F,E14F,E15F,E16F,E17F,E18F,E19F,E1AF,E1BF,E1CF,E1DF,E1EF,E1FF,F10F,F11F,F12F,F13F,F14F,F15F,F16F,F17F,F18F,F19F,F1AF,F1BF,F1CF,F1DF,F1EF,F1FF)
     if (slot4 == (slot2+15)) { continue; }                                                   // char 4 is not +15 to char 2 (eliminates 4,294,967,296 combinations) (does not begin with 000F,001F,002F,003F,004F,005F,006F,007F,008F,009F,00AF,00BF,00CF,00DF,00EF,00FF,100F,101F,102F,103F,104F,105F,106F,107F,108F,109F,10AF,10BF,10CF,10DF,10EF,10FF,200F,201F,202F,203F,204F,205F,206F,207F,208F,209F,20AF,20BF,20CF,20DF,20EF,20FF,300F,301F,302F,303F,304F,305F,306F,307F,308F,309F,30AF,30BF,30CF,30DF,30EF,30FF,400F,401F,402F,403F,404F,405F,406F,407F,408F,409F,40AF,40BF,40CF,40DF,40EF,40FF,500F,501F,502F,503F,504F,505F,506F,507F,508F,509F,50AF,50BF,50CF,50DF,50EF,50FF,600F,601F,602F,603F,604F,605F,606F,607F,608F,609F,60AF,60BF,60CF,60DF,60EF,60FF,700F,701F,702F,703F,704F,705F,706F,707F,708F,709F,70AF,70BF,70CF,70DF,70EF,70FF,800F,801F,802F,803F,804F,805F,806F,807F,808F,809F,80AF,80BF,80CF,80DF,80EF,80FF,900F,901F,902F,903F,904F,905F,906F,907F,908F,909F,90AF,90BF,90CF,90DF,90EF,90FF,A00F,A01F,A02F,A03F,A04F,A05F,A06F,A07F,A08F,A09F,A0AF,A0BF,A0CF,A0DF,A0EF,A0FF,B00F,B01F,B02F,B03F,B04F,B05F,B06F,B07F,B08F,B09F,B0AF,B0BF,B0CF,B0DF,B0EF,B0FF,C00F,C01F,C02F,C03F,C04F,C05F,C06F,C07F,C08F,C09F,C0AF,C0BF,C0CF,C0DF,C0EF,C0FF,D00F,D01F,D02F,D03F,D04F,D05F,D06F,D07F,D08F,D09F,D0AF,D0BF,D0CF,D0DF,D0EF,D0FF,E00F,E01F,E02F,E03F,E04F,E05F,E06F,E07F,E08F,E09F,E0AF,E0BF,E0CF,E0DF,E0EF,E0FF,F00F,F01F,F02F,F03F,F04F,F05F,F06F,F07F,F08F,F09F,F0AF,F0BF,F0CF,F0DF,F0EF,F0FF)
     if (slot4 == (slot1-15)) { continue; }                                                   // char 4 is not -15 to char 1 (eliminates 4,294,967,296 combinations) (does not begin with F000,F010,F020,F030,F040,F050,F060,F070,F080,F090,F0A0,F0B0,F0C0,F0D0,F0E0,F0F0,F100,F110,F120,F130,F140,F150,F160,F170,F180,F190,F1A0,F1B0,F1C0,F1D0,F1E0,F1F0,F200,F210,F220,F230,F240,F250,F260,F270,F280,F290,F2A0,F2B0,F2C0,F2D0,F2E0,F2F0,F300,F310,F320,F330,F340,F350,F360,F370,F380,F390,F3A0,F3B0,F3C0,F3D0,F3E0,F3F0,F400,F410,F420,F430,F440,F450,F460,F470,F480,F490,F4A0,F4B0,F4C0,F4D0,F4E0,F4F0,F500,F510,F520,F530,F540,F550,F560,F570,F580,F590,F5A0,F5B0,F5C0,F5D0,F5E0,F5F0,F600,F610,F620,F630,F640,F650,F660,F670,F680,F690,F6A0,F6B0,F6C0,F6D0,F6E0,F6F0,F700,F710,F720,F730,F740,F750,F760,F770,F780,F790,F7A0,F7B0,F7C0,F7D0,F7E0,F7F0,F800,F810,F820,F830,F840,F850,F860,F870,F880,F890,F8A0,F8B0,F8C0,F8D0,F8E0,F8F0,F900,F910,F920,F930,F940,F950,F960,F970,F980,F990,F9A0,F9B0,F9C0,F9D0,F9E0,F9F0,FA00,FA10,FA20,FA30,FA40,FA50,FA60,FA70,FA80,FA90,FAA0,FAB0,FAC0,FAD0,FAE0,FAF0,FB00,FB10,FB20,FB30,FB40,FB50,FB60,FB70,FB80,FB90,FBA0,FBB0,FBC0,FBD0,FBE0,FBF0,FC00,FC10,FC20,FC30,FC40,FC50,FC60,FC70,FC80,FC90,FCA0,FCB0,FCC0,FCD0,FCE0,FCF0,FD00,FD10,FD20,FD30,FD40,FD50,FD60,FD70,FD80,FD90,FDA0,FDB0,FDC0,FDD0,FDE0,FDF0,FE00,FE10,FE20,FE30,FE40,FE50,FE60,FE70,FE80,FE90,FEA0,FEB0,FEC0,FED0,FEE0,FEF0,FF00,FF10,FF20,FF30,FF40,FF50,FF60,FF70,FF80,FF90,FFA0,FFB0,FFC0,FFD0,FFE0,FFF0)
     if (slot4 == (slot1-14)) { continue; }                                                   // char 4 is not -14 to char 1 (eliminates 8,589,934,592 combinations) (does not begin with F001,F011,F021,F031,F041,F051,F061,F071,F081,F091,F0A1,F0B1,F0C1,F0D1,F0E1,F0F1,F101,F111,F121,F131,F141,F151,F161,F171,F181,F191,F1A1,F1B1,F1C1,F1D1,F1E1,F1F1,F201,F211,F221,F231,F241,F251,F261,F271,F281,F291,F2A1,F2B1,F2C1,F2D1,F2E1,F2F1,F301,F311,F321,F331,F341,F351,F361,F371,F381,F391,F3A1,F3B1,F3C1,F3D1,F3E1,F3F1,F401,F411,F421,F431,F441,F451,F461,F471,F481,F491,F4A1,F4B1,F4C1,F4D1,F4E1,F4F1,F501,F511,F521,F531,F541,F551,F561,F571,F581,F591,F5A1,F5B1,F5C1,F5D1,F5E1,F5F1,F601,F611,F621,F631,F641,F651,F661,F671,F681,F691,F6A1,F6B1,F6C1,F6D1,F6E1,F6F1,F701,F711,F721,F731,F741,F751,F761,F771,F781,F791,F7A1,F7B1,F7C1,F7D1,F7E1,F7F1,F801,F811,F821,F831,F841,F851,F861,F871,F881,F891,F8A1,F8B1,F8C1,F8D1,F8E1,F8F1,F901,F911,F921,F931,F941,F951,F961,F971,F981,F991,F9A1,F9B1,F9C1,F9D1,F9E1,F9F1,FA01,FA11,FA21,FA31,FA41,FA51,FA61,FA71,FA81,FA91,FAA1,FAB1,FAC1,FAD1,FAE1,FAF1,FB01,FB11,FB21,FB31,FB41,FB51,FB61,FB71,FB81,FB91,FBA1,FBB1,FBC1,FBD1,FBE1,FBF1,FC01,FC11,FC21,FC31,FC41,FC51,FC61,FC71,FC81,FC91,FCA1,FCB1,FCC1,FCD1,FCE1,FCF1,FD01,FD11,FD21,FD31,FD41,FD51,FD61,FD71,FD81,FD91,FDA1,FDB1,FDC1,FDD1,FDE1,FDF1,FE01,FE11,FE21,FE31,FE41,FE51,FE61,FE71,FE81,FE91,FEA1,FEB1,FEC1,FED1,FEE1,FEF1,FF01,FF11,FF21,FF31,FF41,FF51,FF61,FF71,FF81,FF91,FFA1,FFB1,FFC1,FFD1,FFE1,FFF1,E000,E010,E020,E030,E040,E050,E060,E070,E080,E090,E0A0,E0B0,E0C0,E0D0,E0E0,E0F0,E100,E110,E120,E130,E140,E150,E160,E170,E180,E190,E1A0,E1B0,E1C0,E1D0,E1E0,E1F0,E200,E210,E220,E230,E240,E250,E260,E270,E280,E290,E2A0,E2B0,E2C0,E2D0,E2E0,E2F0,E300,E310,E320,E330,E340,E350,E360,E370,E380,E390,E3A0,E3B0,E3C0,E3D0,E3E0,E3F0,E400,E410,E420,E430,E440,E450,E460,E470,E480,E490,E4A0,E4B0,E4C0,E4D0,E4E0,E4F0,E500,E510,E520,E530,E540,E550,E560,E570,E580,E590,E5A0,E5B0,E5C0,E5D0,E5E0,E5F0,E600,E610,E620,E630,E640,E650,E660,E670,E680,E690,E6A0,E6B0,E6C0,E6D0,E6E0,E6F0,E700,E710,E720,E730,E740,E750,E760,E770,E780,E790,E7A0,E7B0,E7C0,E7D0,E7E0,E7F0,E800,E810,E820,E830,E840,E850,E860,E870,E880,E890,E8A0,E8B0,E8C0,E8D0,E8E0,E8F0,E900,E910,E920,E930,E940,E950,E960,E970,E980,E990,E9A0,E9B0,E9C0,E9D0,E9E0,E9F0,EA00,EA10,EA20,EA30,EA40,EA50,EA60,EA70,EA80,EA90,EAA0,EAB0,EAC0,EAD0,EAE0,EAF0,EB00,EB10,EB20,EB30,EB40,EB50,EB60,EB70,EB80,EB90,EBA0,EBB0,EBC0,EBD0,EBE0,EBF0,EC00,EC10,EC20,EC30,EC40,EC50,EC60,EC70,EC80,EC90,ECA0,ECB0,ECC0,ECD0,ECE0,ECF0,ED00,ED10,ED20,ED30,ED40,ED50,ED60,ED70,ED80,ED90,EDA0,EDB0,EDC0,EDD0,EDE0,EDF0,EE00,EE10,EE20,EE30,EE40,EE50,EE60,EE70,EE80,EE90,EEA0,EEB0,EEC0,EED0,EEE0,EEF0,EF00,EF10,EF20,EF30,EF40,EF50,EF60,EF70,EF80,EF90,EFA0,EFB0,EFC0,EFD0,EFE0,EFF0)
     if (slot4 == (slot1-13)) { continue; }                                                   // char 4 is not -13 to char 1 (eliminates 12,884,901,888 combinations) (does not begin with D000,D010,D020,D030,D040,D050,D060,D070,D080,D090,D0A0,D0B0,D0C0,D0D0,D0E0,D0F0,D100,D110,D120,D130,D140,D150,D160,D170,D180,D190,D1A0,D1B0,D1C0,D1D0,D1E0,D1F0,D200,D210,D220,D230,D240,D250,D260,D270,D280,D290,D2A0,D2B0,D2C0,D2D0,D2E0,D2F0,D300,D310,D320,D330,D340,D350,D360,D370,D380,D390,D3A0,D3B0,D3C0,D3D0,D3E0,D3F0,D400,D410,D420,D430,D440,D450,D460,D470,D480,D490,D4A0,D4B0,D4C0,D4D0,D4E0,D4F0,D500,D510,D520,D530,D540,D550,D560,D570,D580,D590,D5A0,D5B0,D5C0,D5D0,D5E0,D5F0,D600,D610,D620,D630,D640,D650,D660,D670,D680,D690,D6A0,D6B0,D6C0,D6D0,D6E0,D6F0,D700,D710,D720,D730,D740,D750,D760,D770,D780,D790,D7A0,D7B0,D7C0,D7D0,D7E0,D7F0,D800,D810,D820,D830,D840,D850,D860,D870,D880,D890,D8A0,D8B0,D8C0,D8D0,D8E0,D8F0,D900,D910,D920,D930,D940,D950,D960,D970,D980,D990,D9A0,D9B0,D9C0,D9D0,D9E0,D9F0,DA00,DA10,DA20,DA30,DA40,DA50,DA60,DA70,DA80,DA90,DAA0,DAB0,DAC0,DAD0,DAE0,DAF0,DB00,DB10,DB20,DB30,DB40,DB50,DB60,DB70,DB80,DB90,DBA0,DBB0,DBC0,DBD0,DBE0,DBF0,DC00,DC10,DC20,DC30,DC40,DC50,DC60,DC70,DC80,DC90,DCA0,DCB0,DCC0,DCD0,DCE0,DCF0,DD00,DD10,DD20,DD30,DD40,DD50,DD60,DD70,DD80,DD90,DDA0,DDB0,DDC0,DDD0,DDE0,DDF0,DE00,DE10,DE20,DE30,DE40,DE50,DE60,DE70,DE80,DE90,DEA0,DEB0,DEC0,DED0,DEE0,DEF0,DF00,DF10,DF20,DF30,DF40,DF50,DF60,DF70,DF80,DF90,DFA0,DFB0,DFC0,DFD0,DFE0,DFF0,E001,E011,E021,E031,E041,E051,E061,E071,E081,E091,E0A1,E0B1,E0C1,E0D1,E0E1,E0F1,E101,E111,E121,E131,E141,E151,E161,E171,E181,E191,E1A1,E1B1,E1C1,E1D1,E1E1,E1F1,E201,E211,E221,E231,E241,E251,E261,E271,E281,E291,E2A1,E2B1,E2C1,E2D1,E2E1,E2F1,E301,E311,E321,E331,E341,E351,E361,E371,E381,E391,E3A1,E3B1,E3C1,E3D1,E3E1,E3F1,E401,E411,E421,E431,E441,E451,E461,E471,E481,E491,E4A1,E4B1,E4C1,E4D1,E4E1,E4F1,E501,E511,E521,E531,E541,E551,E561,E571,E581,E591,E5A1,E5B1,E5C1,E5D1,E5E1,E5F1,E601,E611,E621,E631,E641,E651,E661,E671,E681,E691,E6A1,E6B1,E6C1,E6D1,E6E1,E6F1,E701,E711,E721,E731,E741,E751,E761,E771,E781,E791,E7A1,E7B1,E7C1,E7D1,E7E1,E7F1,E801,E811,E821,E831,E841,E851,E861,E871,E881,E891,E8A1,E8B1,E8C1,E8D1,E8E1,E8F1,E901,E911,E921,E931,E941,E951,E961,E971,E981,E991,E9A1,E9B1,E9C1,E9D1,E9E1,E9F1,EA01,EA11,EA21,EA31,EA41,EA51,EA61,EA71,EA81,EA91,EAA1,EAB1,EAC1,EAD1,EAE1,EAF1,EB01,EB11,EB21,EB31,EB41,EB51,EB61,EB71,EB81,EB91,EBA1,EBB1,EBC1,EBD1,EBE1,EBF1,EC01,EC11,EC21,EC31,EC41,EC51,EC61,EC71,EC81,EC91,ECA1,ECB1,ECC1,ECD1,ECE1,ECF1,ED01,ED11,ED21,ED31,ED41,ED51,ED61,ED71,ED81,ED91,EDA1,EDB1,EDC1,EDD1,EDE1,EDF1,EE01,EE11,EE21,EE31,EE41,EE51,EE61,EE71,EE81,EE91,EEA1,EEB1,EEC1,EED1,EEE1,EEF1,EF01,EF11,EF21,EF31,EF41,EF51,EF61,EF71,EF81,EF91,EFA1,EFB1,EFC1,EFD1,EFE1,EFF1,F002,F012,F022,F032,F042,F052,F062,F072,F082,F092,F0A2,F0B2,F0C2,F0D2,F0E2,F0F2,F102,F112,F122,F132,F142,F152,F162,F172,F182,F192,F1A2,F1B2,F1C2,F1D2,F1E2,F1F2,F202,F212,F222,F232,F242,F252,F262,F272,F282,F292,F2A2,F2B2,F2C2,F2D2,F2E2,F2F2,F302,F312,F322,F332,F342,F352,F362,F372,F382,F392,F3A2,F3B2,F3C2,F3D2,F3E2,F3F2,F402,F412,F422,F432,F442,F452,F462,F472,F482,F492,F4A2,F4B2,F4C2,F4D2,F4E2,F4F2,F502,F512,F522,F532,F542,F552,F562,F572,F582,F592,F5A2,F5B2,F5C2,F5D2,F5E2,F5F2,F602,F612,F622,F632,F642,F652,F662,F672,F682,F692,F6A2,F6B2,F6C2,F6D2,F6E2,F6F2,F702,F712,F722,F732,F742,F752,F762,F772,F782,F792,F7A2,F7B2,F7C2,F7D2,F7E2,F7F2,F802,F812,F822,F832,F842,F852,F862,F872,F882,F892,F8A2,F8B2,F8C2,F8D2,F8E2,F8F2,F902,F912,F922,F932,F942,F952,F962,F972,F982,F992,F9A2,F9B2,F9C2,F9D2,F9E2,F9F2,FA02,FA12,FA22,FA32,FA42,FA52,FA62,FA72,FA82,FA92,FAA2,FAB2,FAC2,FAD2,FAE2,FAF2,FB02,FB12,FB22,FB32,FB42,FB52,FB62,FB72,FB82,FB92,FBA2,FBB2,FBC2,FBD2,FBE2,FBF2,FC02,FC12,FC22,FC32,FC42,FC52,FC62,FC72,FC82,FC92,FCA2,FCB2,FCC2,FCD2,FCE2,FCF2,FD02,FD12,FD22,FD32,FD42,FD52,FD62,FD72,FD82,FD92,FDA2,FDB2,FDC2,FDD2,FDE2,FDF2,FE02,FE12,FE22,FE32,FE42,FE52,FE62,FE72,FE82,FE92,FEA2,FEB2,FEC2,FED2,FEE2,FEF2,FF02,FF12,FF22,FF32,FF42,FF52,FF62,FF72,FF82,FF92,FFA2,FFB2,FFC2,FFD2,FFE2,FFF2)
     if (slot4 == (slot1+14)) { continue; }                                                   // char 4 is not +14 to char 1 (eliminates 8,589,934,592 combinations) (does not begin with 000E,001E,002E,003E,004E,005E,006E,007E,008E,009E,00AE,00BE,00CE,00DE,00EE,00FE,010E,011E,012E,013E,014E,015E,016E,017E,018E,019E,01AE,01BE,01CE,01DE,01EE,01FE,020E,021E,022E,023E,024E,025E,026E,027E,028E,029E,02AE,02BE,02CE,02DE,02EE,02FE,030E,031E,032E,033E,034E,035E,036E,037E,038E,039E,03AE,03BE,03CE,03DE,03EE,03FE,040E,041E,042E,043E,044E,045E,046E,047E,048E,049E,04AE,04BE,04CE,04DE,04EE,04FE,050E,051E,052E,053E,054E,055E,056E,057E,058E,059E,05AE,05BE,05CE,05DE,05EE,05FE,060E,061E,062E,063E,064E,065E,066E,067E,068E,069E,06AE,06BE,06CE,06DE,06EE,06FE,070E,071E,072E,073E,074E,075E,076E,077E,078E,079E,07AE,07BE,07CE,07DE,07EE,07FE,080E,081E,082E,083E,084E,085E,086E,087E,088E,089E,08AE,08BE,08CE,08DE,08EE,08FE,090E,091E,092E,093E,094E,095E,096E,097E,098E,099E,09AE,09BE,09CE,09DE,09EE,09FE,0A0E,0A1E,0A2E,0A3E,0A4E,0A5E,0A6E,0A7E,0A8E,0A9E,0AAE,0ABE,0ACE,0ADE,0AEE,0AFE,0B0E,0B1E,0B2E,0B3E,0B4E,0B5E,0B6E,0B7E,0B8E,0B9E,0BAE,0BBE,0BCE,0BDE,0BEE,0BFE,0C0E,0C1E,0C2E,0C3E,0C4E,0C5E,0C6E,0C7E,0C8E,0C9E,0CAE,0CBE,0CCE,0CDE,0CEE,0CFE,0D0E,0D1E,0D2E,0D3E,0D4E,0D5E,0D6E,0D7E,0D8E,0D9E,0DAE,0DBE,0DCE,0DDE,0DEE,0DFE,0E0E,0E1E,0E2E,0E3E,0E4E,0E5E,0E6E,0E7E,0E8E,0E9E,0EAE,0EBE,0ECE,0EDE,0EEE,0EFE,0F0E,0F1E,0F2E,0F3E,0F4E,0F5E,0F6E,0F7E,0F8E,0F9E,0FAE,0FBE,0FCE,0FDE,0FEE,0FFE,100F,101F,102F,103F,104F,105F,106F,107F,108F,109F,10AF,10BF,10CF,10DF,10EF,10FF,110F,111F,112F,113F,114F,115F,116F,117F,118F,119F,11AF,11BF,11CF,11DF,11EF,11FF,120F,121F,122F,123F,124F,125F,126F,127F,128F,129F,12AF,12BF,12CF,12DF,12EF,12FF,130F,131F,132F,133F,134F,135F,136F,137F,138F,139F,13AF,13BF,13CF,13DF,13EF,13FF,140F,141F,142F,143F,144F,145F,146F,147F,148F,149F,14AF,14BF,14CF,14DF,14EF,14FF,150F,151F,152F,153F,154F,155F,156F,157F,158F,159F,15AF,15BF,15CF,15DF,15EF,15FF,160F,161F,162F,163F,164F,165F,166F,167F,168F,169F,16AF,16BF,16CF,16DF,16EF,16FF,170F,171F,172F,173F,174F,175F,176F,177F,178F,179F,17AF,17BF,17CF,17DF,17EF,17FF,180F,181F,182F,183F,184F,185F,186F,187F,188F,189F,18AF,18BF,18CF,18DF,18EF,18FF,190F,191F,192F,193F,194F,195F,196F,197F,198F,199F,19AF,19BF,19CF,19DF,19EF,19FF,1A0F,1A1F,1A2F,1A3F,1A4F,1A5F,1A6F,1A7F,1A8F,1A9F,1AAF,1ABF,1ACF,1ADF,1AEF,1AFF,1B0F,1B1F,1B2F,1B3F,1B4F,1B5F,1B6F,1B7F,1B8F,1B9F,1BAF,1BBF,1BCF,1BDF,1BEF,1BFF,1C0F,1C1F,1C2F,1C3F,1C4F,1C5F,1C6F,1C7F,1C8F,1C9F,1CAF,1CBF,1CCF,1CDF,1CEF,1CFF,1D0F,1D1F,1D2F,1D3F,1D4F,1D5F,1D6F,1D7F,1D8F,1D9F,1DAF,1DBF,1DCF,1DDF,1DEF,1DFF,1E0F,1E1F,1E2F,1E3F,1E4F,1E5F,1E6F,1E7F,1E8F,1E9F,1EAF,1EBF,1ECF,1EDF,1EEF,1EFF,1F0F,1F1F,1F2F,1F3F,1F4F,1F5F,1F6F,1F7F,1F8F,1F9F,1FAF,1FBF,1FCF,1FDF,1FEF,1FFF)
     if (slot4 == (slot1+15)) { continue; }                                                   // char 4 is not +15 to char 1 (eliminates 4,294,967,296 combinations) (does not begin with 000F,001F,002F,003F,004F,005F,006F,007F,008F,009F,00AF,00BF,00CF,00DF,00EF,00FF,010F,011F,012F,013F,014F,015F,016F,017F,018F,019F,01AF,01BF,01CF,01DF,01EF,01FF,020F,021F,022F,023F,024F,025F,026F,027F,028F,029F,02AF,02BF,02CF,02DF,02EF,02FF,030F,031F,032F,033F,034F,035F,036F,037F,038F,039F,03AF,03BF,03CF,03DF,03EF,03FF,040F,041F,042F,043F,044F,045F,046F,047F,048F,049F,04AF,04BF,04CF,04DF,04EF,04FF,050F,051F,052F,053F,054F,055F,056F,057F,058F,059F,05AF,05BF,05CF,05DF,05EF,05FF,060F,061F,062F,063F,064F,065F,066F,067F,068F,069F,06AF,06BF,06CF,06DF,06EF,06FF,070F,071F,072F,073F,074F,075F,076F,077F,078F,079F,07AF,07BF,07CF,07DF,07EF,07FF,080F,081F,082F,083F,084F,085F,086F,087F,088F,089F,08AF,08BF,08CF,08DF,08EF,08FF,090F,091F,092F,093F,094F,095F,096F,097F,098F,099F,09AF,09BF,09CF,09DF,09EF,09FF,0A0F,0A1F,0A2F,0A3F,0A4F,0A5F,0A6F,0A7F,0A8F,0A9F,0AAF,0ABF,0ACF,0ADF,0AEF,0AFF,0B0F,0B1F,0B2F,0B3F,0B4F,0B5F,0B6F,0B7F,0B8F,0B9F,0BAF,0BBF,0BCF,0BDF,0BEF,0BFF,0C0F,0C1F,0C2F,0C3F,0C4F,0C5F,0C6F,0C7F,0C8F,0C9F,0CAF,0CBF,0CCF,0CDF,0CEF,0CFF,0D0F,0D1F,0D2F,0D3F,0D4F,0D5F,0D6F,0D7F,0D8F,0D9F,0DAF,0DBF,0DCF,0DDF,0DEF,0DFF,0E0F,0E1F,0E2F,0E3F,0E4F,0E5F,0E6F,0E7F,0E8F,0E9F,0EAF,0EBF,0ECF,0EDF,0EEF,0EFF,0F0F,0F1F,0F2F,0F3F,0F4F,0F5F,0F6F,0F7F,0F8F,0F9F,0FAF,0FBF,0FCF,0FDF,0FEF,0FFF)
     differential = abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
     if ((differential < 3) || (differential > 37)) { continue; }                             // char 4 observed differentials (3 to 37) (eliminates 10,133,438,464 combinations) (does not begin with 0000,0001,0002,0010,0011,0012,0022,0100,0110,0111,0112,0122,0222,0C0E,0C0F,0D0C,0D0D,0D0E,0D0F,0D1E,0D1F,0E0A,0E0B,0E0C,0E0D,0E0E,0E0F,0E1C,0E1D,0E1E,0E1F,0E2E,0E2F,0F08,0F09,0F0A,0F0B,0F0C,0F0D,0F0E,0F0F,0F1A,0F1B,0F1C,0F1D,0F1E,0F1F,0F2C,0F2D,0F2E,0F2F,0F3E,0F3F,1000,1001,1011,1100,1101,1110,1111,1112,1113,1121,1122,1123,1133,1211,1221,1222,1223,1233,1333,1C0F,1D0D,1D0E,1D0F,1D1F,1E0B,1E0C,1E0D,1E0E,1E0F,1E1D,1E1E,1E1F,1E2F,1F09,1F0A,1F0B,1F0C,1F0D,1F0E,1F0F,1F1B,1F1C,1F1D,1F1E,1F1F,1F2D,1F2E,1F2F,1F3F,2000,2100,2110,2111,2112,2122,2200,2210,2211,2212,2220,2221,2222,2223,2224,2232,2233,2234,2244,2322,2332,2333,2334,2344,2444,2D0E,2D0F,2E0C,2E0D,2E0E,2E0F,2E1E,2E1F,2F0A,2F0B,2F0C,2F0D,2F0E,2F0F,2F1C,2F1D,2F1E,2F1F,2F2E,2F2F,3111,3211,3221,3222,3223,3233,3311,3321,3322,3323,3331,3332,3333,3334,3335,3343,3344,3345,3355,3433,3443,3444,3445,3455,3555,3D0F,3E0D,3E0E,3E0F,3E1F,3F0B,3F0C,3F0D,3F0E,3F0F,3F1D,3F1E,3F1F,3F2F,4222,4322,4332,4333,4334,4344,4422,4432,4433,4434,4442,4443,4444,4445,4446,4454,4455,4456,4466,4544,4554,4555,4556,4566,4666,4E0E,4E0F,4F0C,4F0D,4F0E,4F0F,4F1E,4F1F,5333,5433,5443,5444,5445,5455,5533,5543,5544,5545,5553,5554,5555,5556,5557,5565,5566,5567,5577,5655,5665,5666,5667,5677,5777,5E0F,5F0D,5F0E,5F0F,5F1F,6444,6544,6554,6555,6556,6566,6644,6654,6655,6656,6664,6665,6666,6667,6668,6676,6677,6678,6688,6766,6776,6777,6778,6788,6888,6F0E,6F0F,7555,7655,7665,7666,7667,7677,7755,7765,7766,7767,7775,7776,7777,7778,7779,7787,7788,7789,7799,7877,7887,7888,7889,7899,7999,7F0F,80F0,8666,8766,8776,8777,8778,8788,8866,8876,8877,8878,8886,8887,8888,8889,888A,8898,8899,889A,88AA,8988,8998,8999,899A,89AA,8AAA,90F0,90F1,9777,9877,9887,9888,9889,9899,9977,9987,9988,9989,9997,9998,9999,999A,999B,99A9,99AA,99AB,99BB,9A99,9AA9,9AAA,9AAB,9ABB,9BBB,A0E0,A0F0,A0F1,A0F2,A1F0,A888,A988,A998,A999,A99A,A9AA,AA88,AA98,AA99,AA9A,AAA8,AAA9,AAAA,AAAB,AAAC,AABA,AABB,AABC,AACC,ABAA,ABBA,ABBB,ABBC,ABCC,ACCC,B0E0,B0E1,B0F0,B0F1,B0F2,B0F3,B1F0,B1F1,B999,BA99,BAA9,BAAA,BAAB,BABB,BB99,BBA9,BBAA,BBAB,BBB9,BBBA,BBBB,BBBC,BBBD,BBCB,BBCC,BBCD,BBDD,BCBB,BCCB,BCCC,BCCD,BCDD,BDDD,C0D0,C0E0,C0E1,C0E2,C0F0,C0F1,C0F2,C0F3,C0F4,C1E0,C1F0,C1F1,C1F2,C2F0,CAAA,CBAA,CBBA,CBBB,CBBC,CBCC,CCAA,CCBA,CCBB,CCBC,CCCA,CCCB,CCCC,CCCD,CCCE,CCDC,CCDD,CCDE,CCEE,CDCC,CDDC,CDDD,CDDE,CDEE,CEEE,D0D0,D0D1,D0E0,D0E1,D0E2,D0E3,D0F0,D0F1,D0F2,D0F3,D0F4,D0F5,D1E0,D1E1,D1F0,D1F1,D1F2,D1F3,D2F0,D2F1,DBBB,DCBB,DCCB,DCCC,DCCD,DCDD,DDBB,DDCB,DDCC,DDCD,DDDB,DDDC,DDDD,DDDE,DDDF,DDED,DDEE,DDEF,DDFF,DEDD,DEED,DEEE,DEEF,DEFF,DFFF,E0C0,E0D0,E0D1,E0D2,E0E0,E0E1,E0E2,E0E3,E0E4,E0F0,E0F1,E0F2,E0F3,E0F4,E0F5,E0F6,E1D0,E1E0,E1E1,E1E2,E1F0,E1F1,E1F2,E1F3,E1F4,E2E0,E2F0,E2F1,E2F2,E3F0,ECCC,EDCC,EDDC,EDDD,EDDE,EDEE,EECC,EEDC,EEDD,EEDE,EEEC,EEED,EEEE,EEEF,EEFE,EEFF,EFEE,EFFE,EFFF,F0C0,F0C1,F0D0,F0D1,F0D2,F0D3,F0E0,F0E1,F0E2,F0E3,F0E4,F0E5,F0F0,F0F1,F0F2,F0F3,F0F4,F0F5,F0F6,F0F7,F1D0,F1D1,F1E0,F1E1,F1E2,F1E3,F1F0,F1F1,F1F2,F1F3,F1F4,F1F5,F2E0,F2E1,F2F0,F2F1,F2F2,F2F3,F3F0,F3F1,FDDD,FEDD,FEED,FEEE,FEEF,FEFF,FFDD,FFED,FFEE,FFEF,FFFD,FFFE,FFFF)
     if ((risky_mode) && ((differential < 7) || (differential > 29))) { continue; }           // char 4 riskier differentials (7 to 29) (eliminates 118,111,600,640 combinations) (does not begin with 0000,0001,0002,0003,0004,0005,0006,0010,0011,0012,0013,0014,0015,0016,0020,0021,0022,0023,0024,0025,0026,0030,0031,0032,0033,0034,0035,0036,0042,0043,0044,0045,0046,0054,0055,0056,0066,00F0,0100,0101,0102,0103,0104,0110,0111,0112,0113,0114,0115,0116,0120,0121,0122,0123,0124,0125,0126,0130,0131,0132,0133,0134,0135,0136,0142,0143,0144,0145,0146,0154,0155,0156,0166,01F0,0200,0201,0202,0210,0211,0212,0213,0214,0220,0221,0222,0223,0224,0225,0226,0230,0231,0232,0233,0234,0235,0236,0242,0243,0244,0245,0246,0254,0255,0256,0266,02F0,0300,0310,0311,0312,0320,0321,0322,0323,0324,0330,0331,0332,0333,0334,0335,0336,0342,0343,0344,0345,0346,0354,0355,0356,0366,03F0,0422,0432,0433,0434,0442,0443,0444,0445,0446,0454,0455,0456,0466,04F0,0544,0554,0555,0556,0566,05F0,0666,06F0,07F0,080E,080F,08F0,090C,090D,090E,090F,091E,091F,09F0,0A0A,0A0B,0A0C,0A0D,0A0E,0A0F,0A1C,0A1D,0A1E,0A1F,0A2E,0A2F,0AF0,0B08,0B09,0B0A,0B0B,0B0C,0B0D,0B0E,0B0F,0B1A,0B1B,0B1C,0B1D,0B1E,0B1F,0B2C,0B2D,0B2E,0B2F,0B3E,0B3F,0BF0,0C06,0C07,0C08,0C09,0C0A,0C0B,0C0C,0C0D,0C0E,0C0F,0C18,0C19,0C1A,0C1B,0C1C,0C1D,0C1E,0C1F,0C2A,0C2B,0C2C,0C2D,0C2E,0C2F,0C3C,0C3D,0C3E,0C3F,0C4E,0C4F,0CF0,0D04,0D05,0D06,0D07,0D08,0D09,0D0A,0D0B,0D0C,0D0D,0D0E,0D0F,0D16,0D17,0D18,0D19,0D1A,0D1B,0D1C,0D1D,0D1E,0D1F,0D28,0D29,0D2A,0D2B,0D2C,0D2D,0D2E,0D2F,0D3A,0D3B,0D3C,0D3D,0D3E,0D3F,0D4C,0D4D,0D4E,0D4F,0D5E,0D5F,0DF0,0E02,0E03,0E04,0E05,0E06,0E07,0E08,0E09,0E0A,0E0B,0E0C,0E0D,0E0E,0E0F,0E14,0E15,0E16,0E17,0E18,0E19,0E1A,0E1B,0E1C,0E1D,0E1E,0E1F,0E26,0E27,0E28,0E29,0E2A,0E2B,0E2C,0E2D,0E2E,0E2F,0E38,0E39,0E3A,0E3B,0E3C,0E3D,0E3E,0E3F,0E4A,0E4B,0E4C,0E4D,0E4E,0E4F,0E5C,0E5D,0E5E,0E5F,0E6E,0E6F,0EF0,0F00,0F01,0F02,0F03,0F04,0F05,0F06,0F07,0F08,0F09,0F0A,0F0B,0F0C,0F0D,0F0E,0F0F,0F10,0F12,0F13,0F14,0F15,0F16,0F17,0F18,0F19,0F1A,0F1B,0F1C,0F1D,0F1E,0F1F,0F20,0F24,0F25,0F26,0F27,0F28,0F29,0F2A,0F2B,0F2C,0F2D,0F2E,0F2F,0F30,0F36,0F37,0F38,0F39,0F3A,0F3B,0F3C,0F3D,0F3E,0F3F,0F40,0F48,0F49,0F4A,0F4B,0F4C,0F4D,0F4E,0F4F,0F50,0F5A,0F5B,0F5C,0F5D,0F5E,0F5F,0F60,0F6C,0F6D,0F6E,0F6F,0F70,0F7E,0F7F,0F80,0F90,0FA0,0FB0,0FC0,0FD0,0FE0,0FF0,1000,1001,1002,1003,1004,1005,1010,1011,1012,1013,1014,1015,1020,1021,1022,1023,1024,1025,1031,1032,1033,1034,1035,1043,1044,1045,1055,10F0,10F1,1100,1101,1102,1103,1104,1105,1110,1111,1112,1113,1114,1115,1116,1117,1120,1121,1122,1123,1124,1125,1126,1127,1130,1131,1132,1133,1134,1135,1136,1137,1141,1142,1143,1144,1145,1146,1147,1153,1154,1155,1156,1157,1165,1166,1167,1177,1200,1201,1202,1203,1210,1211,1212,1213,1214,1215,1220,1221,1222,1223,1224,1225,1226,1227,1230,1231,1232,1233,1234,1235,1236,1237,1241,1242,1243,1244,1245,1246,1247,1253,1254,1255,1256,1257,1265,1266,1267,1277,1300,1301,1310,1311,1312,1313,1320,1321,1322,1323,1324,1325,1330,1331,1332,1333,1334,1335,1336,1337,1341,1342,1343,1344,1345,1346,1347,1353,1354,1355,1356,1357,1365,1366,1367,1377,1411,1421,1422,1423,1431,1432,1433,1434,1435,1441,1442,1443,1444,1445,1446,1447,1453,1454,1455,1456,1457,1465,1466,1467,1477,1533,1543,1544,1545,1553,1554,1555,1556,1557,1565,1566,1567,1577,1655,1665,1666,1667,1677,1777,180F,190D,190E,190F,191F,1A0B,1A0C,1A0D,1A0E,1A0F,1A1D,1A1E,1A1F,1A2F,1B09,1B0A,1B0B,1B0C,1B0D,1B0E,1B0F,1B1B,1B1C,1B1D,1B1E,1B1F,1B2D,1B2E,1B2F,1B3F,1C07,1C08,1C09,1C0A,1C0B,1C0C,1C0D,1C0E,1C0F,1C19,1C1A,1C1B,1C1C,1C1D,1C1E,1C1F,1C2B,1C2C,1C2D,1C2E,1C2F,1C3D,1C3E,1C3F,1C4F,1D05,1D06,1D07,1D08,1D09,1D0A,1D0B,1D0C,1D0D,1D0E,1D0F,1D17,1D18,1D19,1D1A,1D1B,1D1C,1D1D,1D1E,1D1F,1D29,1D2A,1D2B,1D2C,1D2D,1D2E,1D2F,1D3B,1D3C,1D3D,1D3E,1D3F,1D4D,1D4E,1D4F,1D5F,1E03,1E04,1E05,1E06,1E07,1E08,1E09,1E0A,1E0B,1E0C,1E0D,1E0E,1E0F,1E15,1E16,1E17,1E18,1E19,1E1A,1E1B,1E1C,1E1D,1E1E,1E1F,1E27,1E28,1E29,1E2A,1E2B,1E2C,1E2D,1E2E,1E2F,1E39,1E3A,1E3B,1E3C,1E3D,1E3E,1E3F,1E4B,1E4C,1E4D,1E4E,1E4F,1E5D,1E5E,1E5F,1E6F,1F01,1F02,1F03,1F04,1F05,1F06,1F07,1F08,1F09,1F0A,1F0B,1F0C,1F0D,1F0E,1F0F,1F13,1F14,1F15,1F16,1F17,1F18,1F19,1F1A,1F1B,1F1C,1F1D,1F1E,1F1F,1F25,1F26,1F27,1F28,1F29,1F2A,1F2B,1F2C,1F2D,1F2E,1F2F,1F37,1F38,1F39,1F3A,1F3B,1F3C,1F3D,1F3E,1F3F,1F49,1F4A,1F4B,1F4C,1F4D,1F4E,1F4F,1F5B,1F5C,1F5D,1F5E,1F5F,1F6D,1F6E,1F6F,1F7F,2000,2001,2002,2003,2004,2010,2011,2012,2013,2014,2020,2021,2022,2023,2024,2032,2033,2034,2044,20E0,20F0,20F1,20F2,2100,2101,2102,2103,2104,2110,2111,2112,2113,2114,2115,2116,2120,2121,2122,2123,2124,2125,2126,2130,2131,2132,2133,2134,2135,2136,2142,2143,2144,2145,2146,2154,2155,2156,2166,21F0,2200,2201,2202,2203,2204,2210,2211,2212,2213,2214,2215,2216,2220,2221,2222,2223,2224,2225,2226,2227,2228,2230,2231,2232,2233,2234,2235,2236,2237,2238,2240,2241,2242,2243,2244,2245,2246,2247,2248,2252,2253,2254,2255,2256,2257,2258,2264,2265,2266,2267,2268,2276,2277,2278,2288,2300,2301,2302,2310,2311,2312,2313,2314,2320,2321,2322,2323,2324,2325,2326,2330,2331,2332,2333,2334,2335,2336,2337,2338,2340,2341,2342,2343,2344,2345,2346,2347,2348,2352,2353,2354,2355,2356,2357,2358,2364,2365,2366,2367,2368,2376,2377,2378,2388,2400,2410,2411,2412,2420,2421,2422,2423,2424,2430,2431,2432,2433,2434,2435,2436,2440,2441,2442,2443,2444,2445,2446,2447,2448,2452,2453,2454,2455,2456,2457,2458,2464,2465,2466,2467,2468,2476,2477,2478,2488,2522,2532,2533,2534,2542,2543,2544,2545,2546,2552,2553,2554,2555,2556,2557,2558,2564,2565,2566,2567,2568,2576,2577,2578,2588,2644,2654,2655,2656,2664,2665,2666,2667,2668,2676,2677,2678,2688,2766,2776,2777,2778,2788,2888,290E,290F,2A0C,2A0D,2A0E,2A0F,2A1E,2A1F,2B0A,2B0B,2B0C,2B0D,2B0E,2B0F,2B1C,2B1D,2B1E,2B1F,2B2E,2B2F,2C08,2C09,2C0A,2C0B,2C0C,2C0D,2C0E,2C0F,2C1A,2C1B,2C1C,2C1D,2C1E,2C1F,2C2C,2C2D,2C2E,2C2F,2C3E,2C3F,2D06,2D07,2D08,2D09,2D0A,2D0B,2D0C,2D0D,2D0E,2D0F,2D18,2D19,2D1A,2D1B,2D1C,2D1D,2D1E,2D1F,2D2A,2D2B,2D2C,2D2D,2D2E,2D2F,2D3C,2D3D,2D3E,2D3F,2D4E,2D4F,2E04,2E05,2E06,2E07,2E08,2E09,2E0A,2E0B,2E0C,2E0D,2E0E,2E0F,2E16,2E17,2E18,2E19,2E1A,2E1B,2E1C,2E1D,2E1E,2E1F,2E28,2E29,2E2A,2E2B,2E2C,2E2D,2E2E,2E2F,2E3A,2E3B,2E3C,2E3D,2E3E,2E3F,2E4C,2E4D,2E4E,2E4F,2E5E,2E5F,2F02,2F03,2F04,2F05,2F06,2F07,2F08,2F09,2F0A,2F0B,2F0C,2F0D,2F0E,2F0F,2F14,2F15,2F16,2F17,2F18,2F19,2F1A,2F1B,2F1C,2F1D,2F1E,2F1F,2F26,2F27,2F28,2F29,2F2A,2F2B,2F2C,2F2D,2F2E,2F2F,2F38,2F39,2F3A,2F3B,2F3C,2F3D,2F3E,2F3F,2F4A,2F4B,2F4C,2F4D,2F4E,2F4F,2F5C,2F5D,2F5E,2F5F,2F6E,2F6F,3000,3001,3002,3003,3010,3011,3012,3013,3021,3022,3023,3033,30E0,30E1,30F0,30F1,30F2,30F3,3100,3101,3102,3103,3110,3111,3112,3113,3114,3115,3120,3121,3122,3123,3124,3125,3131,3132,3133,3134,3135,3143,3144,3145,3155,31F0,31F1,3200,3201,3202,3203,3210,3211,3212,3213,3214,3215,3220,3221,3222,3223,3224,3225,3226,3227,3230,3231,3232,3233,3234,3235,3236,3237,3241,3242,3243,3244,3245,3246,3247,3253,3254,3255,3256,3257,3265,3266,3267,3277,3300,3301,3302,3303,3310,3311,3312,3313,3314,3315,3320,3321,3322,3323,3324,3325,3326,3327,3330,3331,3332,3333,3334,3335,3336,3337,3338,3339,3340,3341,3342,3343,3344,3345,3346,3347,3348,3349,3351,3352,3353,3354,3355,3356,3357,3358,3359,3363,3364,3365,3366,3367,3368,3369,3375,3376,3377,3378,3379,3387,3388,3389,3399,3400,3401,3410,3411,3412,3413,3420,3421,3422,3423,3424,3425,3430,3431,3432,3433,3434,3435,3436,3437,3440,3441,3442,3443,3444,3445,3446,3447,3448,3449,3451,3452,3453,3454,3455,3456,3457,3458,3459,3463,3464,3465,3466,3467,3468,3469,3475,3476,3477,3478,3479,3487,3488,3489,3499,3511,3521,3522,3523,3531,3532,3533,3534,3535,3541,3542,3543,3544,3545,3546,3547,3551,3552,3553,3554,3555,3556,3557,3558,3559,3563,3564,3565,3566,3567,3568,3569,3575,3576,3577,3578,3579,3587,3588,3589,3599,3633,3643,3644,3645,3653,3654,3655,3656,3657,3663,3664,3665,3666,3667,3668,3669,3675,3676,3677,3678,3679,3687,3688,3689,3699,3755,3765,3766,3767,3775,3776,3777,3778,3779,3787,3788,3789,3799,3877,3887,3888,3889,3899,390F,3999,3A0D,3A0E,3A0F,3A1F,3B0B,3B0C,3B0D,3B0E,3B0F,3B1D,3B1E,3B1F,3B2F,3C09,3C0A,3C0B,3C0C,3C0D,3C0E,3C0F,3C1B,3C1C,3C1D,3C1E,3C1F,3C2D,3C2E,3C2F,3C3F,3D07,3D08,3D09,3D0A,3D0B,3D0C,3D0D,3D0E,3D0F,3D19,3D1A,3D1B,3D1C,3D1D,3D1E,3D1F,3D2B,3D2C,3D2D,3D2E,3D2F,3D3D,3D3E,3D3F,3D4F,3E05,3E06,3E07,3E08,3E09,3E0A,3E0B,3E0C,3E0D,3E0E,3E0F,3E17,3E18,3E19,3E1A,3E1B,3E1C,3E1D,3E1E,3E1F,3E29,3E2A,3E2B,3E2C,3E2D,3E2E,3E2F,3E3B,3E3C,3E3D,3E3E,3E3F,3E4D,3E4E,3E4F,3E5F,3F03,3F04,3F05,3F06,3F07,3F08,3F09,3F0A,3F0B,3F0C,3F0D,3F0E,3F0F,3F15,3F16,3F17,3F18,3F19,3F1A,3F1B,3F1C,3F1D,3F1E,3F1F,3F27,3F28,3F29,3F2A,3F2B,3F2C,3F2D,3F2E,3F2F,3F39,3F3A,3F3B,3F3C,3F3D,3F3E,3F3F,3F4B,3F4C,3F4D,3F4E,3F4F,3F5D,3F5E,3F5F,3F6F,4000,4001,4002,4010,4011,4012,4022,40D0,40E0,40E1,40E2,40F0,40F1,40F2,40F3,40F4,4100,4101,4102,4110,4111,4112,4113,4114,4120,4121,4122,4123,4124,4132,4133,4134,4144,41E0,41F0,41F1,41F2,4200,4201,4202,4210,4211,4212,4213,4214,4220,4221,4222,4223,4224,4225,4226,4230,4231,4232,4233,4234,4235,4236,4242,4243,4244,4245,4246,4254,4255,4256,4266,42F0,4300,4301,4302,4310,4311,4312,4313,4314,4320,4321,4322,4323,4324,4325,4326,4330,4331,4332,4333,4334,4335,4336,4337,4338,4340,4341,4342,4343,4344,4345,4346,4347,4348,4352,4353,4354,4355,4356,4357,4358,4364,4365,4366,4367,4368,4376,4377,4378,4388,4400,4401,4402,4410,4411,4412,4413,4414,4420,4421,4422,4423,4424,4425,4426,4430,4431,4432,4433,4434,4435,4436,4437,4438,4440,4441,4442,4443,4444,4445,4446,4447,4448,4449,444A,4450,4451,4452,4453,4454,4455,4456,4457,4458,4459,445A,4462,4463,4464,4465,4466,4467,4468,4469,446A,4474,4475,4476,4477,4478,4479,447A,4486,4487,4488,4489,448A,4498,4499,449A,44AA,4500,4510,4511,4512,4520,4521,4522,4523,4524,4530,4531,4532,4533,4534,4535,4536,4540,4541,4542,4543,4544,4545,4546,4547,4548,4550,4551,4552,4553,4554,4555,4556,4557,4558,4559,455A,4562,4563,4564,4565,4566,4567,4568,4569,456A,4574,4575,4576,4577,4578,4579,457A,4586,4587,4588,4589,458A,4598,4599,459A,45AA,4622,4632,4633,4634,4642,4643,4644,4645,4646,4652,4653,4654,4655,4656,4657,4658,4662,4663,4664,4665,4666,4667,4668,4669,466A,4674,4675,4676,4677,4678,4679,467A,4686,4687,4688,4689,468A,4698,4699,469A,46AA,4744,4754,4755,4756,4764,4765,4766,4767,4768,4774,4775,4776,4777,4778,4779,477A,4786,4787,4788,4789,478A,4798,4799,479A,47AA,4866,4876,4877,4878,4886,4887,4888,4889,488A,4898,4899,489A,48AA,4988,4998,4999,499A,49AA,4A0E,4A0F,4AAA,4B0C,4B0D,4B0E,4B0F,4B1E,4B1F,4C0A,4C0B,4C0C,4C0D,4C0E,4C0F,4C1C,4C1D,4C1E,4C1F,4C2E,4C2F,4D08,4D09,4D0A,4D0B,4D0C,4D0D,4D0E,4D0F,4D1A,4D1B,4D1C,4D1D,4D1E,4D1F,4D2C,4D2D,4D2E,4D2F,4D3E,4D3F,4E06,4E07,4E08,4E09,4E0A,4E0B,4E0C,4E0D,4E0E,4E0F,4E18,4E19,4E1A,4E1B,4E1C,4E1D,4E1E,4E1F,4E2A,4E2B,4E2C,4E2D,4E2E,4E2F,4E3C,4E3D,4E3E,4E3F,4E4E,4E4F,4F04,4F05,4F06,4F07,4F08,4F09,4F0A,4F0B,4F0C,4F0D,4F0E,4F0F,4F16,4F17,4F18,4F19,4F1A,4F1B,4F1C,4F1D,4F1E,4F1F,4F28,4F29,4F2A,4F2B,4F2C,4F2D,4F2E,4F2F,4F3A,4F3B,4F3C,4F3D,4F3E,4F3F,4F4C,4F4D,4F4E,4F4F,4F5E,4F5F,5000,5001,5011,50D0,50D1,50E0,50E1,50E2,50E3,50F0,50F1,50F2,50F3,50F4,50F5,5100,5101,5110,5111,5112,5113,5121,5122,5123,5133,51E0,51E1,51F0,51F1,51F2,51F3,5200,5201,5210,5211,5212,5213,5220,5221,5222,5223,5224,5225,5231,5232,5233,5234,5235,5243,5244,5245,5255,52F0,52F1,5300,5301,5310,5311,5312,5313,5320,5321,5322,5323,5324,5325,5330,5331,5332,5333,5334,5335,5336,5337,5341,5342,5343,5344,5345,5346,5347,5353,5354,5355,5356,5357,5365,5366,5367,5377,5400,5401,5410,5411,5412,5413,5420,5421,5422,5423,5424,5425,5430,5431,5432,5433,5434,5435,5436,5437,5440,5441,5442,5443,5444,5445,5446,5447,5448,5449,5451,5452,5453,5454,5455,5456,5457,5458,5459,5463,5464,5465,5466,5467,5468,5469,5475,5476,5477,5478,5479,5487,5488,5489,5499,5500,5501,5510,5511,5512,5513,5520,5521,5522,5523,5524,5525,5530,5531,5532,5533,5534,5535,5536,5537,5540,5541,5542,5543,5544,5545,5546,5547,5548,5549,5550,5551,5552,5553,5554,5555,5556,5557,5558,5559,555A,555B,5561,5562,5563,5564,5565,5566,5567,5568,5569,556A,556B,5573,5574,5575,5576,5577,5578,5579,557A,557B,5585,5586,5587,5588,5589,558A,558B,5597,5598,5599,559A,559B,55A9,55AA,55AB,55BB,5611,5621,5622,5623,5631,5632,5633,5634,5635,5641,5642,5643,5644,5645,5646,5647,5651,5652,5653,5654,5655,5656,5657,5658,5659,5661,5662,5663,5664,5665,5666,5667,5668,5669,566A,566B,5673,5674,5675,5676,5677,5678,5679,567A,567B,5685,5686,5687,5688,5689,568A,568B,5697,5698,5699,569A,569B,56A9,56AA,56AB,56BB,5733,5743,5744,5745,5753,5754,5755,5756,5757,5763,5764,5765,5766,5767,5768,5769,5773,5774,5775,5776,5777,5778,5779,577A,577B,5785,5786,5787,5788,5789,578A,578B,5797,5798,5799,579A,579B,57A9,57AA,57AB,57BB,5855,5865,5866,5867,5875,5876,5877,5878,5879,5885,5886,5887,5888,5889,588A,588B,5897,5898,5899,589A,589B,58A9,58AA,58AB,58BB,5977,5987,5988,5989,5997,5998,5999,599A,599B,59A9,59AA,59AB,59BB,5A0F,5A99,5AA9,5AAA,5AAB,5ABB,5B0D,5B0E,5B0F,5B1F,5BBB,5C0B,5C0C,5C0D,5C0E,5C0F,5C1D,5C1E,5C1F,5C2F,5D09,5D0A,5D0B,5D0C,5D0D,5D0E,5D0F,5D1B,5D1C,5D1D,5D1E,5D1F,5D2D,5D2E,5D2F,5D3F,5E07,5E08,5E09,5E0A,5E0B,5E0C,5E0D,5E0E,5E0F,5E19,5E1A,5E1B,5E1C,5E1D,5E1E,5E1F,5E2B,5E2C,5E2D,5E2E,5E2F,5E3D,5E3E,5E3F,5E4F,5F05,5F06,5F07,5F08,5F09,5F0A,5F0B,5F0C,5F0D,5F0E,5F0F,5F17,5F18,5F19,5F1A,5F1B,5F1C,5F1D,5F1E,5F1F,5F29,5F2A,5F2B,5F2C,5F2D,5F2E,5F2F,5F3B,5F3C,5F3D,5F3E,5F3F,5F4D,5F4E,5F4F,5F5F,6000,60C0,60D0,60D1,60D2,60E0,60E1,60E2,60E3,60E4,60F0,60F1,60F2,60F3,60F4,60F5,60F6,6100,6110,6111,6112,6122,61D0,61E0,61E1,61E2,61F0,61F1,61F2,61F3,61F4,6200,6210,6211,6212,6220,6221,6222,6223,6224,6232,6233,6234,6244,62E0,62F0,62F1,62F2,6300,6310,6311,6312,6320,6321,6322,6323,6324,6330,6331,6332,6333,6334,6335,6336,6342,6343,6344,6345,6346,6354,6355,6356,6366,63F0,6400,6410,6411,6412,6420,6421,6422,6423,6424,6430,6431,6432,6433,6434,6435,6436,6440,6441,6442,6443,6444,6445,6446,6447,6448,6452,6453,6454,6455,6456,6457,6458,6464,6465,6466,6467,6468,6476,6477,6478,6488,6500,6510,6511,6512,6520,6521,6522,6523,6524,6530,6531,6532,6533,6534,6535,6536,6540,6541,6542,6543,6544,6545,6546,6547,6548,6550,6551,6552,6553,6554,6555,6556,6557,6558,6559,655A,6562,6563,6564,6565,6566,6567,6568,6569,656A,6574,6575,6576,6577,6578,6579,657A,6586,6587,6588,6589,658A,6598,6599,659A,65AA,6600,6610,6611,6612,6620,6621,6622,6623,6624,6630,6631,6632,6633,6634,6635,6636,6640,6641,6642,6643,6644,6645,6646,6647,6648,6650,6651,6652,6653,6654,6655,6656,6657,6658,6659,665A,6660,6661,6662,6663,6664,6665,6666,6667,6668,6669,666A,666B,666C,6672,6673,6674,6675,6676,6677,6678,6679,667A,667B,667C,6684,6685,6686,6687,6688,6689,668A,668B,668C,6696,6697,6698,6699,669A,669B,669C,66A8,66A9,66AA,66AB,66AC,66BA,66BB,66BC,66CC,6722,6732,6733,6734,6742,6743,6744,6745,6746,6752,6753,6754,6755,6756,6757,6758,6762,6763,6764,6765,6766,6767,6768,6769,676A,6772,6773,6774,6775,6776,6777,6778,6779,677A,677B,677C,6784,6785,6786,6787,6788,6789,678A,678B,678C,6796,6797,6798,6799,679A,679B,679C,67A8,67A9,67AA,67AB,67AC,67BA,67BB,67BC,67CC,6844,6854,6855,6856,6864,6865,6866,6867,6868,6874,6875,6876,6877,6878,6879,687A,6884,6885,6886,6887,6888,6889,688A,688B,688C,6896,6897,6898,6899,689A,689B,689C,68A8,68A9,68AA,68AB,68AC,68BA,68BB,68BC,68CC,6966,6976,6977,6978,6986,6987,6988,6989,698A,6996,6997,6998,6999,699A,699B,699C,69A8,69A9,69AA,69AB,69AC,69BA,69BB,69BC,69CC,6A88,6A98,6A99,6A9A,6AA8,6AA9,6AAA,6AAB,6AAC,6ABA,6ABB,6ABC,6ACC,6B0E,6B0F,6BAA,6BBA,6BBB,6BBC,6BCC,6C0C,6C0D,6C0E,6C0F,6C1E,6C1F,6CCC,6D0A,6D0B,6D0C,6D0D,6D0E,6D0F,6D1C,6D1D,6D1E,6D1F,6D2E,6D2F,6E08,6E09,6E0A,6E0B,6E0C,6E0D,6E0E,6E0F,6E1A,6E1B,6E1C,6E1D,6E1E,6E1F,6E2C,6E2D,6E2E,6E2F,6E3E,6E3F,6F06,6F07,6F08,6F09,6F0A,6F0B,6F0C,6F0D,6F0E,6F0F,6F18,6F19,6F1A,6F1B,6F1C,6F1D,6F1E,6F1F,6F2A,6F2B,6F2C,6F2D,6F2E,6F2F,6F3C,6F3D,6F3E,6F3F,6F4E,6F4F,70C0,70C1,70D0,70D1,70D2,70D3,70E0,70E1,70E2,70E3,70E4,70E5,70F0,70F1,70F2,70F3,70F4,70F5,70F6,70F7,7111,71D0,71D1,71E0,71E1,71E2,71E3,71F0,71F1,71F2,71F3,71F4,71F5,7211,7221,7222,7223,7233,72E0,72E1,72F0,72F1,72F2,72F3,7311,7321,7322,7323,7331,7332,7333,7334,7335,7343,7344,7345,7355,73F0,73F1,7411,7421,7422,7423,7431,7432,7433,7434,7435,7441,7442,7443,7444,7445,7446,7447,7453,7454,7455,7456,7457,7465,7466,7467,7477,7511,7521,7522,7523,7531,7532,7533,7534,7535,7541,7542,7543,7544,7545,7546,7547,7551,7552,7553,7554,7555,7556,7557,7558,7559,7563,7564,7565,7566,7567,7568,7569,7575,7576,7577,7578,7579,7587,7588,7589,7599,7611,7621,7622,7623,7631,7632,7633,7634,7635,7641,7642,7643,7644,7645,7646,7647,7651,7652,7653,7654,7655,7656,7657,7658,7659,7661,7662,7663,7664,7665,7666,7667,7668,7669,766A,766B,7673,7674,7675,7676,7677,7678,7679,767A,767B,7685,7686,7687,7688,7689,768A,768B,7697,7698,7699,769A,769B,76A9,76AA,76AB,76BB,7711,7721,7722,7723,7731,7732,7733,7734,7735,7741,7742,7743,7744,7745,7746,7747,7751,7752,7753,7754,7755,7756,7757,7758,7759,7761,7762,7763,7764,7765,7766,7767,7768,7769,776A,776B,7771,7772,7773,7774,7775,7776,7777,7778,7779,777A,777B,777C,777D,7783,7784,7785,7786,7787,7788,7789,778A,778B,778C,778D,7795,7796,7797,7798,7799,779A,779B,779C,779D,77A7,77A8,77A9,77AA,77AB,77AC,77AD,77B9,77BA,77BB,77BC,77BD,77CB,77CC,77CD,77DD,7833,7843,7844,7845,7853,7854,7855,7856,7857,7863,7864,7865,7866,7867,7868,7869,7873,7874,7875,7876,7877,7878,7879,787A,787B,7883,7884,7885,7886,7887,7888,7889,788A,788B,788C,788D,7895,7896,7897,7898,7899,789A,789B,789C,789D,78A7,78A8,78A9,78AA,78AB,78AC,78AD,78B9,78BA,78BB,78BC,78BD,78CB,78CC,78CD,78DD,7955,7965,7966,7967,7975,7976,7977,7978,7979,7985,7986,7987,7988,7989,798A,798B,7995,7996,7997,7998,7999,799A,799B,799C,799D,79A7,79A8,79A9,79AA,79AB,79AC,79AD,79B9,79BA,79BB,79BC,79BD,79CB,79CC,79CD,79DD,7A77,7A87,7A88,7A89,7A97,7A98,7A99,7A9A,7A9B,7AA7,7AA8,7AA9,7AAA,7AAB,7AAC,7AAD,7AB9,7ABA,7ABB,7ABC,7ABD,7ACB,7ACC,7ACD,7ADD,7B0F,7B99,7BA9,7BAA,7BAB,7BB9,7BBA,7BBB,7BBC,7BBD,7BCB,7BCC,7BCD,7BDD,7C0D,7C0E,7C0F,7C1F,7CBB,7CCB,7CCC,7CCD,7CDD,7D0B,7D0C,7D0D,7D0E,7D0F,7D1D,7D1E,7D1F,7D2F,7DDD,7E09,7E0A,7E0B,7E0C,7E0D,7E0E,7E0F,7E1B,7E1C,7E1D,7E1E,7E1F,7E2D,7E2E,7E2F,7E3F,7F07,7F08,7F09,7F0A,7F0B,7F0C,7F0D,7F0E,7F0F,7F19,7F1A,7F1B,7F1C,7F1D,7F1E,7F1F,7F2B,7F2C,7F2D,7F2E,7F2F,7F3D,7F3E,7F3F,7F4F,80B0,80C0,80C1,80C2,80D0,80D1,80D2,80D3,80D4,80E0,80E1,80E2,80E3,80E4,80E5,80E6,80F0,80F1,80F2,80F3,80F4,80F5,80F6,80F7,80F8,81C0,81D0,81D1,81D2,81E0,81E1,81E2,81E3,81E4,81F0,81F1,81F2,81F3,81F4,81F5,81F6,8222,82D0,82E0,82E1,82E2,82F0,82F1,82F2,82F3,82F4,8322,8332,8333,8334,8344,83E0,83F0,83F1,83F2,8422,8432,8433,8434,8442,8443,8444,8445,8446,8454,8455,8456,8466,84F0,8522,8532,8533,8534,8542,8543,8544,8545,8546,8552,8553,8554,8555,8556,8557,8558,8564,8565,8566,8567,8568,8576,8577,8578,8588,8622,8632,8633,8634,8642,8643,8644,8645,8646,8652,8653,8654,8655,8656,8657,8658,8662,8663,8664,8665,8666,8667,8668,8669,866A,8674,8675,8676,8677,8678,8679,867A,8686,8687,8688,8689,868A,8698,8699,869A,86AA,8722,8732,8733,8734,8742,8743,8744,8745,8746,8752,8753,8754,8755,8756,8757,8758,8762,8763,8764,8765,8766,8767,8768,8769,876A,8772,8773,8774,8775,8776,8777,8778,8779,877A,877B,877C,8784,8785,8786,8787,8788,8789,878A,878B,878C,8796,8797,8798,8799,879A,879B,879C,87A8,87A9,87AA,87AB,87AC,87BA,87BB,87BC,87CC,8822,8832,8833,8834,8842,8843,8844,8845,8846,8852,8853,8854,8855,8856,8857,8858,8862,8863,8864,8865,8866,8867,8868,8869,886A,8872,8873,8874,8875,8876,8877,8878,8879,887A,887B,887C,8882,8883,8884,8885,8886,8887,8888,8889,888A,888B,888C,888D,888E,8894,8895,8896,8897,8898,8899,889A,889B,889C,889D,889E,88A6,88A7,88A8,88A9,88AA,88AB,88AC,88AD,88AE,88B8,88B9,88BA,88BB,88BC,88BD,88BE,88CA,88CB,88CC,88CD,88CE,88DC,88DD,88DE,88EE,8944,8954,8955,8956,8964,8965,8966,8967,8968,8974,8975,8976,8977,8978,8979,897A,8984,8985,8986,8987,8988,8989,898A,898B,898C,8994,8995,8996,8997,8998,8999,899A,899B,899C,899D,899E,89A6,89A7,89A8,89A9,89AA,89AB,89AC,89AD,89AE,89B8,89B9,89BA,89BB,89BC,89BD,89BE,89CA,89CB,89CC,89CD,89CE,89DC,89DD,89DE,89EE,8A66,8A76,8A77,8A78,8A86,8A87,8A88,8A89,8A8A,8A96,8A97,8A98,8A99,8A9A,8A9B,8A9C,8AA6,8AA7,8AA8,8AA9,8AAA,8AAB,8AAC,8AAD,8AAE,8AB8,8AB9,8ABA,8ABB,8ABC,8ABD,8ABE,8ACA,8ACB,8ACC,8ACD,8ACE,8ADC,8ADD,8ADE,8AEE,8B88,8B98,8B99,8B9A,8BA8,8BA9,8BAA,8BAB,8BAC,8BB8,8BB9,8BBA,8BBB,8BBC,8BBD,8BBE,8BCA,8BCB,8BCC,8BCD,8BCE,8BDC,8BDD,8BDE,8BEE,8C0E,8C0F,8CAA,8CBA,8CBB,8CBC,8CCA,8CCB,8CCC,8CCD,8CCE,8CDC,8CDD,8CDE,8CEE,8D0C,8D0D,8D0E,8D0F,8D1E,8D1F,8DCC,8DDC,8DDD,8DDE,8DEE,8E0A,8E0B,8E0C,8E0D,8E0E,8E0F,8E1C,8E1D,8E1E,8E1F,8E2E,8E2F,8EEE,8F08,8F09,8F0A,8F0B,8F0C,8F0D,8F0E,8F0F,8F1A,8F1B,8F1C,8F1D,8F1E,8F1F,8F2C,8F2D,8F2E,8F2F,8F3E,8F3F,90B0,90B1,90C0,90C1,90C2,90C3,90D0,90D1,90D2,90D3,90D4,90D5,90E0,90E1,90E2,90E3,90E4,90E5,90E6,90E7,90F0,90F1,90F2,90F3,90F4,90F5,90F6,90F7,90F8,90F9,91C0,91C1,91D0,91D1,91D2,91D3,91E0,91E1,91E2,91E3,91E4,91E5,91F0,91F1,91F2,91F3,91F4,91F5,91F6,91F7,92D0,92D1,92E0,92E1,92E2,92E3,92F0,92F1,92F2,92F3,92F4,92F5,9333,93E0,93E1,93F0,93F1,93F2,93F3,9433,9443,9444,9445,9455,94F0,94F1,9533,9543,9544,9545,9553,9554,9555,9556,9557,9565,9566,9567,9577,9633,9643,9644,9645,9653,9654,9655,9656,9657,9663,9664,9665,9666,9667,9668,9669,9675,9676,9677,9678,9679,9687,9688,9689,9699,9733,9743,9744,9745,9753,9754,9755,9756,9757,9763,9764,9765,9766,9767,9768,9769,9773,9774,9775,9776,9777,9778,9779,977A,977B,9785,9786,9787,9788,9789,978A,978B,9797,9798,9799,979A,979B,97A9,97AA,97AB,97BB,9833,9843,9844,9845,9853,9854,9855,9856,9857,9863,9864,9865,9866,9867,9868,9869,9873,9874,9875,9876,9877,9878,9879,987A,987B,9883,9884,9885,9886,9887,9888,9889,988A,988B,988C,988D,9895,9896,9897,9898,9899,989A,989B,989C,989D,98A7,98A8,98A9,98AA,98AB,98AC,98AD,98B9,98BA,98BB,98BC,98BD,98CB,98CC,98CD,98DD,9933,9943,9944,9945,9953,9954,9955,9956,9957,9963,9964,9965,9966,9967,9968,9969,9973,9974,9975,9976,9977,9978,9979,997A,997B,9983,9984,9985,9986,9987,9988,9989,998A,998B,998C,998D,9993,9994,9995,9996,9997,9998,9999,999A,999B,999C,999D,999E,999F,99A5,99A6,99A7,99A8,99A9,99AA,99AB,99AC,99AD,99AE,99AF,99B7,99B8,99B9,99BA,99BB,99BC,99BD,99BE,99BF,99C9,99CA,99CB,99CC,99CD,99CE,99CF,99DB,99DC,99DD,99DE,99DF,99ED,99EE,99EF,99FF,9A55,9A65,9A66,9A67,9A75,9A76,9A77,9A78,9A79,9A85,9A86,9A87,9A88,9A89,9A8A,9A8B,9A95,9A96,9A97,9A98,9A99,9A9A,9A9B,9A9C,9A9D,9AA5,9AA6,9AA7,9AA8,9AA9,9AAA,9AAB,9AAC,9AAD,9AAE,9AAF,9AB7,9AB8,9AB9,9ABA,9ABB,9ABC,9ABD,9ABE,9ABF,9AC9,9ACA,9ACB,9ACC,9ACD,9ACE,9ACF,9ADB,9ADC,9ADD,9ADE,9ADF,9AED,9AEE,9AEF,9AFF,9B77,9B87,9B88,9B89,9B97,9B98,9B99,9B9A,9B9B,9BA7,9BA8,9BA9,9BAA,9BAB,9BAC,9BAD,9BB7,9BB8,9BB9,9BBA,9BBB,9BBC,9BBD,9BBE,9BBF,9BC9,9BCA,9BCB,9BCC,9BCD,9BCE,9BCF,9BDB,9BDC,9BDD,9BDE,9BDF,9BED,9BEE,9BEF,9BFF,9C0F,9C99,9CA9,9CAA,9CAB,9CB9,9CBA,9CBB,9CBC,9CBD,9CC9,9CCA,9CCB,9CCC,9CCD,9CCE,9CCF,9CDB,9CDC,9CDD,9CDE,9CDF,9CED,9CEE,9CEF,9CFF,9D0D,9D0E,9D0F,9D1F,9DBB,9DCB,9DCC,9DCD,9DDB,9DDC,9DDD,9DDE,9DDF,9DED,9DEE,9DEF,9DFF,9E0B,9E0C,9E0D,9E0E,9E0F,9E1D,9E1E,9E1F,9E2F,9EDD,9EED,9EEE,9EEF,9EFF,9F09,9F0A,9F0B,9F0C,9F0D,9F0E,9F0F,9F1B,9F1C,9F1D,9F1E,9F1F,9F2D,9F2E,9F2F,9F3F,9FFF,A0A0,A0B0,A0B1,A0B2,A0C0,A0C1,A0C2,A0C3,A0C4,A0D0,A0D1,A0D2,A0D3,A0D4,A0D5,A0D6,A0E0,A0E1,A0E2,A0E3,A0E4,A0E5,A0E6,A0E7,A0E8,A0F0,A0F1,A0F2,A0F3,A0F4,A0F5,A0F6,A0F7,A0F8,A0F9,A0FA,A1B0,A1C0,A1C1,A1C2,A1D0,A1D1,A1D2,A1D3,A1D4,A1E0,A1E1,A1E2,A1E3,A1E4,A1E5,A1E6,A1F0,A1F1,A1F2,A1F3,A1F4,A1F5,A1F6,A1F7,A1F8,A2C0,A2D0,A2D1,A2D2,A2E0,A2E1,A2E2,A2E3,A2E4,A2F0,A2F1,A2F2,A2F3,A2F4,A2F5,A2F6,A3D0,A3E0,A3E1,A3E2,A3F0,A3F1,A3F2,A3F3,A3F4,A444,A4E0,A4F0,A4F1,A4F2,A544,A554,A555,A556,A566,A5F0,A644,A654,A655,A656,A664,A665,A666,A667,A668,A676,A677,A678,A688,A744,A754,A755,A756,A764,A765,A766,A767,A768,A774,A775,A776,A777,A778,A779,A77A,A786,A787,A788,A789,A78A,A798,A799,A79A,A7AA,A844,A854,A855,A856,A864,A865,A866,A867,A868,A874,A875,A876,A877,A878,A879,A87A,A884,A885,A886,A887,A888,A889,A88A,A88B,A88C,A896,A897,A898,A899,A89A,A89B,A89C,A8A8,A8A9,A8AA,A8AB,A8AC,A8BA,A8BB,A8BC,A8CC,A944,A954,A955,A956,A964,A965,A966,A967,A968,A974,A975,A976,A977,A978,A979,A97A,A984,A985,A986,A987,A988,A989,A98A,A98B,A98C,A994,A995,A996,A997,A998,A999,A99A,A99B,A99C,A99D,A99E,A9A6,A9A7,A9A8,A9A9,A9AA,A9AB,A9AC,A9AD,A9AE,A9B8,A9B9,A9BA,A9BB,A9BC,A9BD,A9BE,A9CA,A9CB,A9CC,A9CD,A9CE,A9DC,A9DD,A9DE,A9EE,AA44,AA54,AA55,AA56,AA64,AA65,AA66,AA67,AA68,AA74,AA75,AA76,AA77,AA78,AA79,AA7A,AA84,AA85,AA86,AA87,AA88,AA89,AA8A,AA8B,AA8C,AA94,AA95,AA96,AA97,AA98,AA99,AA9A,AA9B,AA9C,AA9D,AA9E,AAA4,AAA5,AAA6,AAA7,AAA8,AAA9,AAAA,AAAB,AAAC,AAAD,AAAE,AAAF,AAB6,AAB7,AAB8,AAB9,AABA,AABB,AABC,AABD,AABE,AABF,AAC8,AAC9,AACA,AACB,AACC,AACD,AACE,AACF,AADA,AADB,AADC,AADD,AADE,AADF,AAEC,AAED,AAEE,AAEF,AAFE,AAFF,AB66,AB76,AB77,AB78,AB86,AB87,AB88,AB89,AB8A,AB96,AB97,AB98,AB99,AB9A,AB9B,AB9C,ABA6,ABA7,ABA8,ABA9,ABAA,ABAB,ABAC,ABAD,ABAE,ABB6,ABB7,ABB8,ABB9,ABBA,ABBB,ABBC,ABBD,ABBE,ABBF,ABC8,ABC9,ABCA,ABCB,ABCC,ABCD,ABCE,ABCF,ABDA,ABDB,ABDC,ABDD,ABDE,ABDF,ABEC,ABED,ABEE,ABEF,ABFE,ABFF,AC88,AC98,AC99,AC9A,ACA8,ACA9,ACAA,ACAB,ACAC,ACB8,ACB9,ACBA,ACBB,ACBC,ACBD,ACBE,ACC8,ACC9,ACCA,ACCB,ACCC,ACCD,ACCE,ACCF,ACDA,ACDB,ACDC,ACDD,ACDE,ACDF,ACEC,ACED,ACEE,ACEF,ACFE,ACFF,AD0E,AD0F,ADAA,ADBA,ADBB,ADBC,ADCA,ADCB,ADCC,ADCD,ADCE,ADDA,ADDB,ADDC,ADDD,ADDE,ADDF,ADEC,ADED,ADEE,ADEF,ADFE,ADFF,AE0C,AE0D,AE0E,AE0F,AE1E,AE1F,AECC,AEDC,AEDD,AEDE,AEEC,AEED,AEEE,AEEF,AEFE,AEFF,AF0A,AF0B,AF0C,AF0D,AF0E,AF0F,AF1C,AF1D,AF1E,AF1F,AF2E,AF2F,AFEE,AFFE,AFFF,B0A0,B0A1,B0B0,B0B1,B0B2,B0B3,B0C0,B0C1,B0C2,B0C3,B0C4,B0C5,B0D0,B0D1,B0D2,B0D3,B0D4,B0D5,B0D6,B0D7,B0E0,B0E1,B0E2,B0E3,B0E4,B0E5,B0E6,B0E7,B0E8,B0E9,B0F0,B0F1,B0F2,B0F3,B0F4,B0F5,B0F6,B0F7,B0F8,B0F9,B0FA,B0FB,B1B0,B1B1,B1C0,B1C1,B1C2,B1C3,B1D0,B1D1,B1D2,B1D3,B1D4,B1D5,B1E0,B1E1,B1E2,B1E3,B1E4,B1E5,B1E6,B1E7,B1F0,B1F1,B1F2,B1F3,B1F4,B1F5,B1F6,B1F7,B1F8,B1F9,B2C0,B2C1,B2D0,B2D1,B2D2,B2D3,B2E0,B2E1,B2E2,B2E3,B2E4,B2E5,B2F0,B2F1,B2F2,B2F3,B2F4,B2F5,B2F6,B2F7,B3D0,B3D1,B3E0,B3E1,B3E2,B3E3,B3F0,B3F1,B3F2,B3F3,B3F4,B3F5,B4E0,B4E1,B4F0,B4F1,B4F2,B4F3,B555,B5F0,B5F1,B655,B665,B666,B667,B677,B755,B765,B766,B767,B775,B776,B777,B778,B779,B787,B788,B789,B799,B855,B865,B866,B867,B875,B876,B877,B878,B879,B885,B886,B887,B888,B889,B88A,B88B,B897,B898,B899,B89A,B89B,B8A9,B8AA,B8AB,B8BB,B955,B965,B966,B967,B975,B976,B977,B978,B979,B985,B986,B987,B988,B989,B98A,B98B,B995,B996,B997,B998,B999,B99A,B99B,B99C,B99D,B9A7,B9A8,B9A9,B9AA,B9AB,B9AC,B9AD,B9B9,B9BA,B9BB,B9BC,B9BD,B9CB,B9CC,B9CD,B9DD,BA55,BA65,BA66,BA67,BA75,BA76,BA77,BA78,BA79,BA85,BA86,BA87,BA88,BA89,BA8A,BA8B,BA95,BA96,BA97,BA98,BA99,BA9A,BA9B,BA9C,BA9D,BAA5,BAA6,BAA7,BAA8,BAA9,BAAA,BAAB,BAAC,BAAD,BAAE,BAAF,BAB7,BAB8,BAB9,BABA,BABB,BABC,BABD,BABE,BABF,BAC9,BACA,BACB,BACC,BACD,BACE,BACF,BADB,BADC,BADD,BADE,BADF,BAED,BAEE,BAEF,BAFF,BB55,BB65,BB66,BB67,BB75,BB76,BB77,BB78,BB79,BB85,BB86,BB87,BB88,BB89,BB8A,BB8B,BB95,BB96,BB97,BB98,BB99,BB9A,BB9B,BB9C,BB9D,BBA5,BBA6,BBA7,BBA8,BBA9,BBAA,BBAB,BBAC,BBAD,BBAE,BBAF,BBB5,BBB6,BBB7,BBB8,BBB9,BBBA,BBBB,BBBC,BBBD,BBBE,BBBF,BBC7,BBC8,BBC9,BBCA,BBCB,BBCC,BBCD,BBCE,BBCF,BBD9,BBDA,BBDB,BBDC,BBDD,BBDE,BBDF,BBEB,BBEC,BBED,BBEE,BBEF,BBFD,BBFE,BBFF,BC77,BC87,BC88,BC89,BC97,BC98,BC99,BC9A,BC9B,BCA7,BCA8,BCA9,BCAA,BCAB,BCAC,BCAD,BCB7,BCB8,BCB9,BCBA,BCBB,BCBC,BCBD,BCBE,BCBF,BCC7,BCC8,BCC9,BCCA,BCCB,BCCC,BCCD,BCCE,BCCF,BCD9,BCDA,BCDB,BCDC,BCDD,BCDE,BCDF,BCEB,BCEC,BCED,BCEE,BCEF,BCFD,BCFE,BCFF,BD0F,BD99,BDA9,BDAA,BDAB,BDB9,BDBA,BDBB,BDBC,BDBD,BDC9,BDCA,BDCB,BDCC,BDCD,BDCE,BDCF,BDD9,BDDA,BDDB,BDDC,BDDD,BDDE,BDDF,BDEB,BDEC,BDED,BDEE,BDEF,BDFD,BDFE,BDFF,BE0D,BE0E,BE0F,BE1F,BEBB,BECB,BECC,BECD,BEDB,BEDC,BEDD,BEDE,BEDF,BEEB,BEEC,BEED,BEEE,BEEF,BEFD,BEFE,BEFF,BF0B,BF0C,BF0D,BF0E,BF0F,BF1D,BF1E,BF1F,BF2F,BFDD,BFED,BFEE,BFEF,BFFD,BFFE,BFFF,C090,C0A0,C0A1,C0A2,C0B0,C0B1,C0B2,C0B3,C0B4,C0C0,C0C1,C0C2,C0C3,C0C4,C0C5,C0C6,C0D0,C0D1,C0D2,C0D3,C0D4,C0D5,C0D6,C0D7,C0D8,C0E0,C0E1,C0E2,C0E3,C0E4,C0E5,C0E6,C0E7,C0E8,C0E9,C0EA,C0F0,C0F1,C0F2,C0F3,C0F4,C0F5,C0F6,C0F7,C0F8,C0F9,C0FA,C0FB,C0FC,C1A0,C1B0,C1B1,C1B2,C1C0,C1C1,C1C2,C1C3,C1C4,C1D0,C1D1,C1D2,C1D3,C1D4,C1D5,C1D6,C1E0,C1E1,C1E2,C1E3,C1E4,C1E5,C1E6,C1E7,C1E8,C1F0,C1F1,C1F2,C1F3,C1F4,C1F5,C1F6,C1F7,C1F8,C1F9,C1FA,C2B0,C2C0,C2C1,C2C2,C2D0,C2D1,C2D2,C2D3,C2D4,C2E0,C2E1,C2E2,C2E3,C2E4,C2E5,C2E6,C2F0,C2F1,C2F2,C2F3,C2F4,C2F5,C2F6,C2F7,C2F8,C3C0,C3D0,C3D1,C3D2,C3E0,C3E1,C3E2,C3E3,C3E4,C3F0,C3F1,C3F2,C3F3,C3F4,C3F5,C3F6,C4D0,C4E0,C4E1,C4E2,C4F0,C4F1,C4F2,C4F3,C4F4,C5E0,C5F0,C5F1,C5F2,C666,C6F0,C766,C776,C777,C778,C788,C866,C876,C877,C878,C886,C887,C888,C889,C88A,C898,C899,C89A,C8AA,C966,C976,C977,C978,C986,C987,C988,C989,C98A,C996,C997,C998,C999,C99A,C99B,C99C,C9A8,C9A9,C9AA,C9AB,C9AC,C9BA,C9BB,C9BC,C9CC,CA66,CA76,CA77,CA78,CA86,CA87,CA88,CA89,CA8A,CA96,CA97,CA98,CA99,CA9A,CA9B,CA9C,CAA6,CAA7,CAA8,CAA9,CAAA,CAAB,CAAC,CAAD,CAAE,CAB8,CAB9,CABA,CABB,CABC,CABD,CABE,CACA,CACB,CACC,CACD,CACE,CADC,CADD,CADE,CAEE,CB66,CB76,CB77,CB78,CB86,CB87,CB88,CB89,CB8A,CB96,CB97,CB98,CB99,CB9A,CB9B,CB9C,CBA6,CBA7,CBA8,CBA9,CBAA,CBAB,CBAC,CBAD,CBAE,CBB6,CBB7,CBB8,CBB9,CBBA,CBBB,CBBC,CBBD,CBBE,CBBF,CBC8,CBC9,CBCA,CBCB,CBCC,CBCD,CBCE,CBCF,CBDA,CBDB,CBDC,CBDD,CBDE,CBDF,CBEC,CBED,CBEE,CBEF,CBFE,CBFF,CC66,CC76,CC77,CC78,CC86,CC87,CC88,CC89,CC8A,CC96,CC97,CC98,CC99,CC9A,CC9B,CC9C,CCA6,CCA7,CCA8,CCA9,CCAA,CCAB,CCAC,CCAD,CCAE,CCB6,CCB7,CCB8,CCB9,CCBA,CCBB,CCBC,CCBD,CCBE,CCBF,CCC6,CCC7,CCC8,CCC9,CCCA,CCCB,CCCC,CCCD,CCCE,CCCF,CCD8,CCD9,CCDA,CCDB,CCDC,CCDD,CCDE,CCDF,CCEA,CCEB,CCEC,CCED,CCEE,CCEF,CCFC,CCFD,CCFE,CCFF,CD88,CD98,CD99,CD9A,CDA8,CDA9,CDAA,CDAB,CDAC,CDB8,CDB9,CDBA,CDBB,CDBC,CDBD,CDBE,CDC8,CDC9,CDCA,CDCB,CDCC,CDCD,CDCE,CDCF,CDD8,CDD9,CDDA,CDDB,CDDC,CDDD,CDDE,CDDF,CDEA,CDEB,CDEC,CDED,CDEE,CDEF,CDFC,CDFD,CDFE,CDFF,CE0E,CE0F,CEAA,CEBA,CEBB,CEBC,CECA,CECB,CECC,CECD,CECE,CEDA,CEDB,CEDC,CEDD,CEDE,CEDF,CEEA,CEEB,CEEC,CEED,CEEE,CEEF,CEFC,CEFD,CEFE,CEFF,CF0C,CF0D,CF0E,CF0F,CF1E,CF1F,CFCC,CFDC,CFDD,CFDE,CFEC,CFED,CFEE,CFEF,CFFC,CFFD,CFFE,CFFF,D090,D091,D0A0,D0A1,D0A2,D0A3,D0B0,D0B1,D0B2,D0B3,D0B4,D0B5,D0C0,D0C1,D0C2,D0C3,D0C4,D0C5,D0C6,D0C7,D0D0,D0D1,D0D2,D0D3,D0D4,D0D5,D0D6,D0D7,D0D8,D0D9,D0E0,D0E1,D0E2,D0E3,D0E4,D0E5,D0E6,D0E7,D0E8,D0E9,D0EA,D0EB,D0F0,D0F1,D0F2,D0F3,D0F4,D0F5,D0F6,D0F7,D0F8,D0F9,D0FA,D0FB,D0FC,D0FD,D1A0,D1A1,D1B0,D1B1,D1B2,D1B3,D1C0,D1C1,D1C2,D1C3,D1C4,D1C5,D1D0,D1D1,D1D2,D1D3,D1D4,D1D5,D1D6,D1D7,D1E0,D1E1,D1E2,D1E3,D1E4,D1E5,D1E6,D1E7,D1E8,D1E9,D1F0,D1F1,D1F2,D1F3,D1F4,D1F5,D1F6,D1F7,D1F8,D1F9,D1FA,D1FB,D2B0,D2B1,D2C0,D2C1,D2C2,D2C3,D2D0,D2D1,D2D2,D2D3,D2D4,D2D5,D2E0,D2E1,D2E2,D2E3,D2E4,D2E5,D2E6,D2E7,D2F0,D2F1,D2F2,D2F3,D2F4,D2F5,D2F6,D2F7,D2F8,D2F9,D3C0,D3C1,D3D0,D3D1,D3D2,D3D3,D3E0,D3E1,D3E2,D3E3,D3E4,D3E5,D3F0,D3F1,D3F2,D3F3,D3F4,D3F5,D3F6,D3F7,D4D0,D4D1,D4E0,D4E1,D4E2,D4E3,D4F0,D4F1,D4F2,D4F3,D4F4,D4F5,D5E0,D5E1,D5F0,D5F1,D5F2,D5F3,D6F0,D6F1,D777,D877,D887,D888,D889,D899,D977,D987,D988,D989,D997,D998,D999,D99A,D99B,D9A9,D9AA,D9AB,D9BB,DA77,DA87,DA88,DA89,DA97,DA98,DA99,DA9A,DA9B,DAA7,DAA8,DAA9,DAAA,DAAB,DAAC,DAAD,DAB9,DABA,DABB,DABC,DABD,DACB,DACC,DACD,DADD,DB77,DB87,DB88,DB89,DB97,DB98,DB99,DB9A,DB9B,DBA7,DBA8,DBA9,DBAA,DBAB,DBAC,DBAD,DBB7,DBB8,DBB9,DBBA,DBBB,DBBC,DBBD,DBBE,DBBF,DBC9,DBCA,DBCB,DBCC,DBCD,DBCE,DBCF,DBDB,DBDC,DBDD,DBDE,DBDF,DBED,DBEE,DBEF,DBFF,DC77,DC87,DC88,DC89,DC97,DC98,DC99,DC9A,DC9B,DCA7,DCA8,DCA9,DCAA,DCAB,DCAC,DCAD,DCB7,DCB8,DCB9,DCBA,DCBB,DCBC,DCBD,DCBE,DCBF,DCC7,DCC8,DCC9,DCCA,DCCB,DCCC,DCCD,DCCE,DCCF,DCD9,DCDA,DCDB,DCDC,DCDD,DCDE,DCDF,DCEB,DCEC,DCED,DCEE,DCEF,DCFD,DCFE,DCFF,DD77,DD87,DD88,DD89,DD97,DD98,DD99,DD9A,DD9B,DDA7,DDA8,DDA9,DDAA,DDAB,DDAC,DDAD,DDB7,DDB8,DDB9,DDBA,DDBB,DDBC,DDBD,DDBE,DDBF,DDC7,DDC8,DDC9,DDCA,DDCB,DDCC,DDCD,DDCE,DDCF,DDD7,DDD8,DDD9,DDDA,DDDB,DDDC,DDDD,DDDE,DDDF,DDE9,DDEA,DDEB,DDEC,DDED,DDEE,DDEF,DDFB,DDFC,DDFD,DDFE,DDFF,DE0F,DE99,DEA9,DEAA,DEAB,DEB9,DEBA,DEBB,DEBC,DEBD,DEC9,DECA,DECB,DECC,DECD,DECE,DECF,DED9,DEDA,DEDB,DEDC,DEDD,DEDE,DEDF,DEE9,DEEA,DEEB,DEEC,DEED,DEEE,DEEF,DEFB,DEFC,DEFD,DEFE,DEFF,DF0D,DF0E,DF0F,DF1F,DFBB,DFCB,DFCC,DFCD,DFDB,DFDC,DFDD,DFDE,DFDF,DFEB,DFEC,DFED,DFEE,DFEF,DFFB,DFFC,DFFD,DFFE,DFFF,E080,E090,E091,E092,E0A0,E0A1,E0A2,E0A3,E0A4,E0B0,E0B1,E0B2,E0B3,E0B4,E0B5,E0B6,E0C0,E0C1,E0C2,E0C3,E0C4,E0C5,E0C6,E0C7,E0C8,E0D0,E0D1,E0D2,E0D3,E0D4,E0D5,E0D6,E0D7,E0D8,E0D9,E0DA,E0E0,E0E1,E0E2,E0E3,E0E4,E0E5,E0E6,E0E7,E0E8,E0E9,E0EA,E0EB,E0EC,E0F0,E0F1,E0F2,E0F3,E0F4,E0F5,E0F6,E0F7,E0F8,E0F9,E0FA,E0FB,E0FC,E0FD,E0FE,E190,E1A0,E1A1,E1A2,E1B0,E1B1,E1B2,E1B3,E1B4,E1C0,E1C1,E1C2,E1C3,E1C4,E1C5,E1C6,E1D0,E1D1,E1D2,E1D3,E1D4,E1D5,E1D6,E1D7,E1D8,E1E0,E1E1,E1E2,E1E3,E1E4,E1E5,E1E6,E1E7,E1E8,E1E9,E1EA,E1F0,E1F1,E1F2,E1F3,E1F4,E1F5,E1F6,E1F7,E1F8,E1F9,E1FA,E1FB,E1FC,E2A0,E2B0,E2B1,E2B2,E2C0,E2C1,E2C2,E2C3,E2C4,E2D0,E2D1,E2D2,E2D3,E2D4,E2D5,E2D6,E2E0,E2E1,E2E2,E2E3,E2E4,E2E5,E2E6,E2E7,E2E8,E2F0,E2F1,E2F2,E2F3,E2F4,E2F5,E2F6,E2F7,E2F8,E2F9,E2FA,E3B0,E3C0,E3C1,E3C2,E3D0,E3D1,E3D2,E3D3,E3D4,E3E0,E3E1,E3E2,E3E3,E3E4,E3E5,E3E6,E3F0,E3F1,E3F2,E3F3,E3F4,E3F5,E3F6,E3F7,E3F8,E4C0,E4D0,E4D1,E4D2,E4E0,E4E1,E4E2,E4E3,E4E4,E4F0,E4F1,E4F2,E4F3,E4F4,E4F5,E4F6,E5D0,E5E0,E5E1,E5E2,E5F0,E5F1,E5F2,E5F3,E5F4,E6E0,E6F0,E6F1,E6F2,E7F0,E888,E988,E998,E999,E99A,E9AA,EA88,EA98,EA99,EA9A,EAA8,EAA9,EAAA,EAAB,EAAC,EABA,EABB,EABC,EACC,EB88,EB98,EB99,EB9A,EBA8,EBA9,EBAA,EBAB,EBAC,EBB8,EBB9,EBBA,EBBB,EBBC,EBBD,EBBE,EBCA,EBCB,EBCC,EBCD,EBCE,EBDC,EBDD,EBDE,EBEE,EC88,EC98,EC99,EC9A,ECA8,ECA9,ECAA,ECAB,ECAC,ECB8,ECB9,ECBA,ECBB,ECBC,ECBD,ECBE,ECC8,ECC9,ECCA,ECCB,ECCC,ECCD,ECCE,ECCF,ECDA,ECDB,ECDC,ECDD,ECDE,ECDF,ECEC,ECED,ECEE,ECEF,ECFE,ECFF,ED88,ED98,ED99,ED9A,EDA8,EDA9,EDAA,EDAB,EDAC,EDB8,EDB9,EDBA,EDBB,EDBC,EDBD,EDBE,EDC8,EDC9,EDCA,EDCB,EDCC,EDCD,EDCE,EDCF,EDD8,EDD9,EDDA,EDDB,EDDC,EDDD,EDDE,EDDF,EDEA,EDEB,EDEC,EDED,EDEE,EDEF,EDFC,EDFD,EDFE,EDFF,EE88,EE98,EE99,EE9A,EEA8,EEA9,EEAA,EEAB,EEAC,EEB8,EEB9,EEBA,EEBB,EEBC,EEBD,EEBE,EEC8,EEC9,EECA,EECB,EECC,EECD,EECE,EECF,EED8,EED9,EEDA,EEDB,EEDC,EEDD,EEDE,EEDF,EEE8,EEE9,EEEA,EEEB,EEEC,EEED,EEEE,EEEF,EEFA,EEFB,EEFC,EEFD,EEFE,EEFF,EF0E,EF0F,EFAA,EFBA,EFBB,EFBC,EFCA,EFCB,EFCC,EFCD,EFCE,EFDA,EFDB,EFDC,EFDD,EFDE,EFDF,EFEA,EFEB,EFEC,EFED,EFEE,EFEF,EFFA,EFFB,EFFC,EFFD,EFFE,EFFF,F00F,F01F,F02F,F03F,F04F,F05F,F06F,F07F,F080,F081,F08F,F090,F091,F092,F093,F09F,F0A0,F0A1,F0A2,F0A3,F0A4,F0A5,F0AF,F0B0,F0B1,F0B2,F0B3,F0B4,F0B5,F0B6,F0B7,F0BF,F0C0,F0C1,F0C2,F0C3,F0C4,F0C5,F0C6,F0C7,F0C8,F0C9,F0CF,F0D0,F0D1,F0D2,F0D3,F0D4,F0D5,F0D6,F0D7,F0D8,F0D9,F0DA,F0DB,F0DF,F0E0,F0E1,F0E2,F0E3,F0E4,F0E5,F0E6,F0E7,F0E8,F0E9,F0EA,F0EB,F0EC,F0ED,F0EF,F0F0,F0F1,F0F2,F0F3,F0F4,F0F5,F0F6,F0F7,F0F8,F0F9,F0FA,F0FB,F0FC,F0FD,F0FE,F0FF,F10F,F190,F191,F1A0,F1A1,F1A2,F1A3,F1B0,F1B1,F1B2,F1B3,F1B4,F1B5,F1C0,F1C1,F1C2,F1C3,F1C4,F1C5,F1C6,F1C7,F1D0,F1D1,F1D2,F1D3,F1D4,F1D5,F1D6,F1D7,F1D8,F1D9,F1E0,F1E1,F1E2,F1E3,F1E4,F1E5,F1E6,F1E7,F1E8,F1E9,F1EA,F1EB,F1F0,F1F1,F1F2,F1F3,F1F4,F1F5,F1F6,F1F7,F1F8,F1F9,F1FA,F1FB,F1FC,F1FD,F20F,F2A0,F2A1,F2B0,F2B1,F2B2,F2B3,F2C0,F2C1,F2C2,F2C3,F2C4,F2C5,F2D0,F2D1,F2D2,F2D3,F2D4,F2D5,F2D6,F2D7,F2E0,F2E1,F2E2,F2E3,F2E4,F2E5,F2E6,F2E7,F2E8,F2E9,F2F0,F2F1,F2F2,F2F3,F2F4,F2F5,F2F6,F2F7,F2F8,F2F9,F2FA,F2FB,F30F,F3B0,F3B1,F3C0,F3C1,F3C2,F3C3,F3D0,F3D1,F3D2,F3D3,F3D4,F3D5,F3E0,F3E1,F3E2,F3E3,F3E4,F3E5,F3E6,F3E7,F3F0,F3F1,F3F2,F3F3,F3F4,F3F5,F3F6,F3F7,F3F8,F3F9,F40F,F4C0,F4C1,F4D0,F4D1,F4D2,F4D3,F4E0,F4E1,F4E2,F4E3,F4E4,F4E5,F4F0,F4F1,F4F2,F4F3,F4F4,F4F5,F4F6,F4F7,F50F,F5D0,F5D1,F5E0,F5E1,F5E2,F5E3,F5F0,F5F1,F5F2,F5F3,F5F4,F5F5,F60F,F6E0,F6E1,F6F0,F6F1,F6F2,F6F3,F70F,F7F0,F7F1,F80F,F90F,F999,FA0F,FA99,FAA9,FAAA,FAAB,FABB,FB0F,FB99,FBA9,FBAA,FBAB,FBB9,FBBA,FBBB,FBBC,FBBD,FBCB,FBCC,FBCD,FBDD,FC0F,FC99,FCA9,FCAA,FCAB,FCB9,FCBA,FCBB,FCBC,FCBD,FCC9,FCCA,FCCB,FCCC,FCCD,FCCE,FCCF,FCDB,FCDC,FCDD,FCDE,FCDF,FCED,FCEE,FCEF,FCFF,FD0F,FD99,FDA9,FDAA,FDAB,FDB9,FDBA,FDBB,FDBC,FDBD,FDC9,FDCA,FDCB,FDCC,FDCD,FDCE,FDCF,FDD9,FDDA,FDDB,FDDC,FDDD,FDDE,FDDF,FDEB,FDEC,FDED,FDEE,FDEF,FDFD,FDFE,FDFF,FE0F,FE99,FEA9,FEAA,FEAB,FEB9,FEBA,FEBB,FEBC,FEBD,FEC9,FECA,FECB,FECC,FECD,FECE,FECF,FED9,FEDA,FEDB,FEDC,FEDD,FEDE,FEDF,FEE9,FEEA,FEEB,FEEC,FEED,FEEE,FEEF,FEFB,FEFC,FEFD,FEFE,FEFF,FF0F,FF99,FFA9,FFAA,FFAB,FFB9,FFBA,FFBB,FFBC,FFBD,FFC9,FFCA,FFCB,FFCC,FFCD,FFCE,FFCF,FFD9,FFDA,FFDB,FFDC,FFDD,FFDE,FFDF,FFE9,FFEA,FFEB,FFEC,FFED,FFEE,FFEF,FFF9,FFFA,FFFB,FFFC,FFFD,FFFE,FFFF)

     for (int slot5=start_at;slot5<possible_chars_length;possible_chars_freq[slot5++]--) { // SLOT 5
      hex_chars[4] = possible_chars[slot5];
      if (++possible_chars_freq[slot5] > 3) { continue; }                                     // each character cannot appear more than 3 times (holds true 94.61% of the time)
      if ((negate_sequential)&&((slot4==(slot3+1))&&(slot5==(slot4+1)))) { continue; }        // no 3 characters in a row can be sequential
      if ((negate_sequential)&&((slot4==(slot3-1))&&(slot5==(slot4-1)))) { continue; }        // no 3 characters in a row can be reverse sequential
      if ((slot5==slot4)&&(slot4==slot3)) { continue; }                                       // no 3 characters in a row can be identical (holds true 97.6% of the time)
      if (slot5 == (slot4+15)) { continue; }                                                  // char 5 is not +15 to char 4
      if (slot5 == (slot3-15)) { continue; }                                                  // char 5 is not -15 to char 3
      if (slot5 == (slot3+14)) { continue; }                                                  // char 5 is not +14 to char 3
      if (slot5 == (slot3+15)) { continue; }                                                  // char 5 is not +15 to char 3
      if (slot5 == (slot2-15)) { continue; }                                                  // char 5 is not -15 to char 2
      if (slot5 == (slot2+13)) { continue; }                                                  // char 5 is not +13 to char 2
      if (slot5 == (slot2+14)) { continue; }                                                  // char 5 is not +14 to char 2
      if (slot5 == (slot2+15)) { continue; }                                                  // char 5 is not +15 to char 2
      if (slot5 == (slot1-13)) { continue; }                                                  // char 5 is not -13 to char 1
      if (slot5 == (slot1+13)) { continue; }                                                  // char 5 is not +13 to char 1
      if (slot5 == (slot1+14)) { continue; }                                                  // char 5 is not +14 to char 1
      differential = abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
      if ((differential < 7) || (differential > 50)) { continue; }                            // char 5 observed differentials (7 to 50) (riskier: 10 to 30)
      if ((risky_mode) && ((differential < 10) || (differential > 30))) { continue; }

      // to add later:
      // if any 2 chars in the first 5 are consecutive identical, none of the last 5 are consectutive identical
      // no 4 chars are alternating such as: 0101, 2323, etc

      for (int slot6=start_at;slot6<possible_chars_length;possible_chars_freq[slot6++]--) { // SLOT 6
       hex_chars[5] = possible_chars[slot6];
       if (++possible_chars_freq[slot6] > 3) { continue; }                                    // each character cannot appear more than 3 times (holds true 94.61% of the time)
       if ((slot3==slot5)&&(slot4==slot6)) { continue; }                                      // characters 3 and 5, and 4 and 6 are not identical
       if ((negate_sequential)&&((slot5==(slot4+1))&&(slot6==(slot5+1)))) { continue; }       // no 3 characters in a row can be sequential
       if ((negate_sequential)&&((slot5==(slot4-1))&&(slot6==(slot5-1)))) { continue; }       // no 3 characters in a row can be reverse sequential
       if ((slot6==slot5)&&(slot5==slot4)) { continue; }                                      // no 3 characters in a row can be identical (holds true 97.6% of the time)
       if (slot6 == (slot5-15)) { continue; }                                                 // char 6 is not -15 to char 5
       if (slot6 == (slot5-14)) { continue; }                                                 // char 6 is not -14 to char 5
       if (slot6 == (slot5-13)) { continue; }                                                 // char 6 is not -13 to char 5
       if (slot6 == (slot5+14)) { continue; }                                                 // char 6 is not +14 to char 5
       if (slot6 == (slot5+15)) { continue; }                                                 // char 6 is not +15 to char 5
       if (slot6 == (slot4-15)) { continue; }                                                 // char 6 is not -15 to char 4
       if (slot6 == (slot4-14)) { continue; }                                                 // char 6 is not -14 to char 4
       if (slot6 == (slot4-13)) { continue; }                                                 // char 6 is not -13 to char 4
       if (slot6 == (slot4+14)) { continue; }                                                 // char 6 is not +14 to char 4
       if (slot6 == (slot3-15)) { continue; }                                                 // char 6 is not -15 to char 3
       if (slot6 == (slot3-14)) { continue; }                                                 // char 6 is not -14 to char 3
       if (slot6 == (slot3-13)) { continue; }                                                 // char 6 is not -13 to char 3
       if (slot6 == (slot3+15)) { continue; }                                                 // char 6 is not +15 to char 3
       if (slot6 == (slot2-14)) { continue; }                                                 // char 6 is not -14 to char 2
       if (slot6 == (slot2+13)) { continue; }                                                 // char 6 is not +13 to char 2
       if (slot6 == (slot2+14)) { continue; }                                                 // char 6 is not +14 to char 2
       if (slot6 == (slot1-15)) { continue; }                                                 // char 6 is not -15 to char 1
       if (slot6 == (slot1-14)) { continue; }                                                 // char 6 is not -14 to char 1
       differential = abs(slot6-slot5) + abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
       if ((differential < 8) || (differential > 54)) { continue; }                           // char 6 observed differentials (8 to 54) (riskier: 12 to 34)
       if ((risky_mode) && ((differential < 12) || (differential > 34))) { continue; }

       for (int slot7=start_at;slot7<possible_chars_length;possible_chars_freq[slot7++]--) { // SLOT 7
        hex_chars[6] = possible_chars[slot7];
        if (++possible_chars_freq[slot7] > 3) { continue; }                                   // each character cannot appear more than 3 times (holds true 94.61% of the time)
        if ((negate_sequential)&&((slot6==(slot5+1))&&(slot7==(slot6+1)))) { continue; }      // no 3 characters in a row can be sequential
        if ((negate_sequential)&&((slot6==(slot5-1))&&(slot7==(slot6-1)))) { continue; }      // no 3 characters in a row can be reverse sequential
        if ((slot7==slot6)&&(slot6==slot5)) { continue; }                                     // no 3 characters in a row can be identical (holds true 97.6% of the time)
        number_count = ((slot1<10)?1:0) + ((slot2<10)?1:0) + ((slot3<10)?1:0) + ((slot4<10)?1:0) + ((slot5<10)?1:0) + ((slot6<10)?1:0) + ((slot7<10)?1:0);
        letter_count = ((slot1>9)?1:0) + ((slot2>9)?1:0) + ((slot3>9)?1:0) + ((slot4>9)?1:0) + ((slot5>9)?1:0) + ((slot6>9)?1:0) + ((slot7>9)?1:0);
        if (((number_count+3) < min_numbers) || (number_count > max_numbers)) { continue; } // must contain 4-8 numbers
        if (((letter_count+3) < min_letters) || (letter_count > max_letters)) { continue; } // must contain 2-6 letters
        differential = abs(slot7-slot6) + abs(slot6-slot5) + abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
        if ((differential < 13) || (differential > 62)) { continue; }                         // char 7 observed differentials (13 to 62) (riskier: 16 to 38)
        if ((risky_mode) && ((differential < 16) || (differential > 38))) { continue; }

        for (int slot8=start_at;slot8<possible_chars_length;possible_chars_freq[slot8++]--) { // SLOT 8
         hex_chars[7] = possible_chars[slot8];
         if (++possible_chars_freq[slot8] > 3) { continue; }                                  // each character cannot appear more than 3 times (holds true 94.61% of the time)
         if ((negate_sequential)&&((slot7==(slot6+1))&&(slot8==(slot7+1)))) { continue; }     // no 3 characters in a row can be sequential
         if ((negate_sequential)&&((slot7==(slot6-1))&&(slot8==(slot7-1)))) { continue; }     // no 3 characters in a row can be reverse sequential
         if ((slot8==slot7)&&(slot7==slot6)) { continue; }                                    // no 3 characters in a row can be identical (holds true 97.6% of the time)
//         if ((((slot1>9)?1:0)+((slot2>9)?1:0)+((slot3>9)?1:0)+((slot4>9)?1:0)+((slot5>9)?1:0)+((slot6>9)?1:0)+((slot7>9)?1:0)+((slot8>9)?1:0)) < 2) { continue; } // there must be at least 2 letters in the first 8 characters
         if ((use_len_8) && (use_len_9==false)) {
          if ((odd_only)&&(slot8%2==0)) { continue; }
          if ((even_only)&&(slot8%2!=0)) { continue; }
          if ((slot2==slot3)&&(slot3==slot8)) { continue; } // characters 2, 3 and 8 cannot be identical (8-len)
          if ((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) >= 7) { continue; } // cannot contain 7+ numbers
          unique_count = ((possible_chars_freq[0]!=0)?1:0) + ((possible_chars_freq[1]!=0)?1:0) + ((possible_chars_freq[2]!=0)?1:0) + ((possible_chars_freq[3]!=0)?1:0) + ((possible_chars_freq[4]!=0)?1:0) + ((possible_chars_freq[5]!=0)?1:0) + ((possible_chars_freq[6]!=0)?1:0) + ((possible_chars_freq[7]!=0)?1:0) + ((possible_chars_freq[8]!=0)?1:0) + ((possible_chars_freq[9]!=0)?1:0) + ((possible_chars_freq[10]!=0)?1:0) + ((possible_chars_freq[11]!=0)?1:0) + ((possible_chars_freq[12]!=0)?1:0) + ((possible_chars_freq[13]!=0)?1:0) + ((possible_chars_freq[14]!=0)?1:0) + ((possible_chars_freq[15]!=0)?1:0);
          if ((desired_uniques == 0) || ((desired_uniques != 0) && (desired_uniques == unique_count))) {
           std::cout << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << "\n";
          }
         }
         differential = abs(slot8-slot7) + abs(slot7-slot6) + abs(slot6-slot5) + abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
         if ((differential < 15) || (differential > 66)) { continue; }                        // char 8 observed differentials (15 to 66) (riskier: 20 to 46)
         if ((risky_mode) && ((differential < 20) || (differential > 46))) { continue; }
         number_count = ((slot1<10)?1:0) + ((slot2<10)?1:0) + ((slot3<10)?1:0) + ((slot4<10)?1:0) + ((slot5<10)?1:0) + ((slot6<10)?1:0) + ((slot7<10)?1:0) + ((slot8<10)?1:0);
         letter_count = ((slot1>9)?1:0) + ((slot2>9)?1:0) + ((slot3>9)?1:0) + ((slot4>9)?1:0) + ((slot5>9)?1:0) + ((slot6>9)?1:0) + ((slot7>9)?1:0) + ((slot8>9)?1:0);
         if ((use_len_8==false) && (use_len_9==false) && (((number_count+2) < min_numbers) || (number_count > max_numbers))) { continue; } // must contain 4-8 numbers
         if ((use_len_8==false) && (use_len_9==false) && (((letter_count+2) < min_letters) || (letter_count > max_letters))) { continue; } // must contain 2-6 letters

         for (int slot9=start_at;slot9<possible_chars_length;possible_chars_freq[slot9++]--) { // SLOT 9
          if (use_len_8) { break; }
          hex_chars[8] = possible_chars[slot9];
          if (++possible_chars_freq[slot9] > 3) { continue; }                                 // each character cannot appear more than 3 times (holds true 94.61% of the time)
          if ((negate_sequential)&&((slot8==(slot7+1))&&(slot9==(slot8+1)))) { continue; }    // no 3 characters in a row can be sequential
          if ((negate_sequential)&&((slot8==(slot7-1))&&(slot9==(slot8-1)))) { continue; }    // no 3 characters in a row can be reverse sequential
          if ((slot9==slot8)&&(slot8==slot7)) { continue; }                                   // no 3 characters in a row can be identical (holds true 97.6% of the time)
          if (use_len_9)  {
           if ((odd_only)&&(slot9%2==0)) { continue; }
           if ((even_only)&&(slot9%2!=0)) { continue; }
           if ((slot2==slot3)&&(slot3==slot9)) { continue; } // characters 2, 3 and 9 cannot be identical (9-len)
           if ((possible_chars_freq[0]+possible_chars_freq[1]+possible_chars_freq[2]+possible_chars_freq[3]+possible_chars_freq[4]+possible_chars_freq[5]+possible_chars_freq[6]+possible_chars_freq[7]+possible_chars_freq[8]+possible_chars_freq[9]) >= 8) { continue; } // cannot contain 8+ numbers
           unique_count = ((possible_chars_freq[0]!=0)?1:0) + ((possible_chars_freq[1]!=0)?1:0) + ((possible_chars_freq[2]!=0)?1:0) + ((possible_chars_freq[3]!=0)?1:0) + ((possible_chars_freq[4]!=0)?1:0) + ((possible_chars_freq[5]!=0)?1:0) + ((possible_chars_freq[6]!=0)?1:0) + ((possible_chars_freq[7]!=0)?1:0) + ((possible_chars_freq[8]!=0)?1:0) + ((possible_chars_freq[9]!=0)?1:0) + ((possible_chars_freq[10]!=0)?1:0) + ((possible_chars_freq[11]!=0)?1:0) + ((possible_chars_freq[12]!=0)?1:0) + ((possible_chars_freq[13]!=0)?1:0) + ((possible_chars_freq[14]!=0)?1:0) + ((possible_chars_freq[15]!=0)?1:0);
           if ((desired_uniques == 0) || ((desired_uniques != 0) && (desired_uniques == unique_count))) {
            std::cout << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << hex_chars[8] << "\n";
           }
          }
          differential = abs(slot9-slot8) + abs(slot8-slot7) + abs(slot7-slot6) + abs(slot6-slot5) + abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
          if ((differential < 18) || (differential > 78)) { continue; }                       // char 9 observed differentials (18 to 78) (riskier: 22 to 53)
          if ((risky_mode) && ((differential < 22) || (differential > 53))) { continue; }
          number_count = ((slot1<10)?1:0) + ((slot2<10)?1:0) + ((slot3<10)?1:0) + ((slot4<10)?1:0) + ((slot5<10)?1:0) + ((slot6<10)?1:0) + ((slot7<10)?1:0) + ((slot8<10)?1:0) + ((slot9<10)?1:0);
          letter_count = ((slot1>9)?1:0) + ((slot2>9)?1:0) + ((slot3>9)?1:0) + ((slot4>9)?1:0) + ((slot5>9)?1:0) + ((slot6>9)?1:0) + ((slot7>9)?1:0) + ((slot8>9)?1:0) + ((slot9>9)?1:0);
          if ((use_len_9==false) && (((number_count+1) < min_numbers) || (number_count > max_numbers))) { continue; } // must contain 4-8 numbers
          if ((use_len_9==false) && (((letter_count+1) < min_letters) || (letter_count > max_letters))) { continue; } // must contain 2-6 letters

          for (int slot10=start_at;slot10<possible_chars_length;possible_chars_freq[slot10++]--) { // SLOT 10
           if ((use_len_8) || (use_len_9)) { break; }
           hex_chars[9] = possible_chars[slot10];
           if (++possible_chars_freq[slot10] > 3) { continue; }                               // each character cannot appear more than 3 times (holds true 94.61% of the time)
           if ((odd_only)&&(slot10%2==0)) { continue; }
           if ((even_only)&&(slot10%2!=0)) { continue; }
           if ((slot2==slot3)&&(slot3==slot10)) { continue; }                                 // characters 2, 3 and 10 cannot be identical
           if ((negate_sequential)&&((slot9==(slot8+1))&&(slot10==(slot9+1)))) { continue; }  // no 3 characters in a row can be sequential
           if ((negate_sequential)&&((slot9==(slot8-1))&&(slot10==(slot9-1)))) { continue; }  // no 3 characters in a row can be reverse sequential
           if ((slot10==slot9)&&(slot9==slot8)) { continue; }                                 // no 3 characters in a row can be identical (holds true 97.6% of the time)
           differential = abs(slot10-slot9) + abs(slot9-slot8) + abs(slot8-slot7) + abs(slot7-slot6) + abs(slot6-slot5) + abs(slot5-slot4) + abs(slot4-slot3) + abs(slot3-slot2) + abs(slot2-slot1);
           if ((differential < 19) || (differential > 79)) { continue; }                      // char 10 observed differentials (19 to 79) (riskier: 26 to 63)
           if ((risky_mode) && ((differential < 26) || (differential > 63))) { continue; }
           number_count = ((slot1<10)?1:0) + ((slot2<10)?1:0) + ((slot3<10)?1:0) + ((slot4<10)?1:0) + ((slot5<10)?1:0) + ((slot6<10)?1:0) + ((slot7<10)?1:0) + ((slot8<10)?1:0) + ((slot9<10)?1:0) + ((slot10<10)?1:0);
           letter_count = ((slot1>9)?1:0) + ((slot2>9)?1:0) + ((slot3>9)?1:0) + ((slot4>9)?1:0) + ((slot5>9)?1:0) + ((slot6>9)?1:0) + ((slot7>9)?1:0) + ((slot8>9)?1:0) + ((slot9>9)?1:0) + ((slot10>9)?1:0);
           if ((number_count < min_numbers) || (number_count > max_numbers)) { continue; } // must contain 4-8 numbers
           if ((letter_count < min_letters) || (letter_count > max_letters)) { continue; } // must contain 2-6 letters
           unique_count = ((possible_chars_freq[0]>0)?1:0) + ((possible_chars_freq[1]>0)?1:0) + ((possible_chars_freq[2]>0)?1:0) + ((possible_chars_freq[3]>0)?1:0) + ((possible_chars_freq[4]>0)?1:0) + ((possible_chars_freq[5]>0)?1:0) + ((possible_chars_freq[6]>0)?1:0) + ((possible_chars_freq[7]>0)?1:0) + ((possible_chars_freq[8]>0)?1:0) + ((possible_chars_freq[9]>0)?1:0) + ((possible_chars_freq[10]>0)?1:0) + ((possible_chars_freq[11]>0)?1:0) + ((possible_chars_freq[12]>0)?1:0) + ((possible_chars_freq[13]>0)?1:0) + ((possible_chars_freq[14]>0)?1:0) + ((possible_chars_freq[15]>0)?1:0);
           ++uniques_counter[unique_count-1];
           if (((desired_uniques==0)&&(min_uniques==0)) || (desired_uniques==unique_count) || ((desired_uniques==0)&&(min_uniques>0)&&(unique_count>=min_uniques)&&(unique_count<=max_uniques))) {
            ++counter;
            if (counter >= start_at_long) {
             if ((stop_at_long > 0) && (counter >= stop_at_long)) { return 0; }

              // METHOD 1 - 65,250 H/s
              //puts(hex_chars);

              // METHOD 2 - 65,000 H/s
              //printf("%s",hex_chars);

              // METHOD 3 - 65,000 H/s
              //std::cout << hex_chars;

              // METHOD 4 - 65,400 H/s
              fwrite(&hex_chars, 1, 11, stdout);

              //std::cout << "DEBUG: " << hex_chars[0] << hex_chars[1] << hex_chars[2] << hex_chars[3] << hex_chars[4] << hex_chars[5] << hex_chars[6] << hex_chars[7] << hex_chars[8] << hex_chars[9] << " (Letters: " << letter_count << " Numbers: " << number_count << " Uniques: " << unique_count << " Frequency0: " << possible_chars_freq[0] << ")" << "\n";
            }
           }

          }
         }
        }
       }
      }
     }
    }
   }
  }
 }


 }


// debugging info
 std::cout << "counter: " << counter << "\n";
 std::cout << "1 unique: " << uniques_counter[0] << "\n";
 std::cout << "2 uniques: " << uniques_counter[1] << "\n";
 std::cout << "3 uniques: " << uniques_counter[2] << "\n";
 std::cout << "4 uniques: " << uniques_counter[3] << "\n";
 std::cout << "5 uniques: " << uniques_counter[4] << "\n";
 std::cout << "6 uniques: " << uniques_counter[5] << "\n";
 std::cout << "7 uniques: " << uniques_counter[6] << "\n";
 std::cout << "8 uniques: " << uniques_counter[7] << "\n";
 std::cout << "9 uniques: " << uniques_counter[8] << "\n";
 std::cout << "10 uniques: " << uniques_counter[9] << "\n";


 return 0;
}